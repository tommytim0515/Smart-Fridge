ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tos_mutex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.mutex_release,"ax",%progbits
  16              		.align	1
  17              		.global	mutex_release
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	mutex_release:
  25              	.LVL0:
  26              	.LFB113:
  27              		.file 1 "..//kernel/core/tos_mutex.c"
   1:..//kernel/core/tos_mutex.c **** /*----------------------------------------------------------------------------
   2:..//kernel/core/tos_mutex.c ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/tos_mutex.c ****  * available.
   4:..//kernel/core/tos_mutex.c ****  *
   5:..//kernel/core/tos_mutex.c ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/tos_mutex.c ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/tos_mutex.c ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/tos_mutex.c ****  *
   9:..//kernel/core/tos_mutex.c ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/tos_mutex.c ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/tos_mutex.c ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/tos_mutex.c ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/tos_mutex.c ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/tos_mutex.c ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/tos_mutex.c ****  * within TencentOS.
  16:..//kernel/core/tos_mutex.c ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/tos_mutex.c **** 
  18:..//kernel/core/tos_mutex.c **** #include "tos_k.h"
  19:..//kernel/core/tos_mutex.c **** 
  20:..//kernel/core/tos_mutex.c **** #if TOS_CFG_MUTEX_EN > 0u
  21:..//kernel/core/tos_mutex.c **** 
  22:..//kernel/core/tos_mutex.c **** __STATIC_INLINE__ void mutex_old_owner_release(k_mutex_t *mutex)
  23:..//kernel/core/tos_mutex.c **** {
  24:..//kernel/core/tos_mutex.c ****     k_task_t *owner;
  25:..//kernel/core/tos_mutex.c **** 
  26:..//kernel/core/tos_mutex.c ****     owner = mutex->owner;
  27:..//kernel/core/tos_mutex.c **** 
  28:..//kernel/core/tos_mutex.c ****     tos_list_del(&mutex->owner_anchor);
  29:..//kernel/core/tos_mutex.c ****     mutex->owner        = K_NULL;
  30:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting = (k_nesting_t)0u;
  31:..//kernel/core/tos_mutex.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 2


  32:..//kernel/core/tos_mutex.c ****     // the right time comes! let's do it!
  33:..//kernel/core/tos_mutex.c ****     if (owner->prio_pending != K_TASK_PRIO_INVALID) {
  34:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, owner->prio_pending);
  35:..//kernel/core/tos_mutex.c ****         owner->prio_pending = K_TASK_PRIO_INVALID;
  36:..//kernel/core/tos_mutex.c ****     } else if (owner->prio != mutex->owner_orig_prio) {
  37:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
  38:..//kernel/core/tos_mutex.c ****         mutex->owner_orig_prio = K_TASK_PRIO_INVALID;
  39:..//kernel/core/tos_mutex.c ****     }
  40:..//kernel/core/tos_mutex.c **** }
  41:..//kernel/core/tos_mutex.c **** 
  42:..//kernel/core/tos_mutex.c **** __STATIC_INLINE__ void mutex_fresh_owner_mark(k_mutex_t *mutex, k_task_t *task)
  43:..//kernel/core/tos_mutex.c **** {
  44:..//kernel/core/tos_mutex.c ****     mutex->owner            = task;
  45:..//kernel/core/tos_mutex.c ****     mutex->owner_orig_prio  = task->prio;
  46:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting     = (k_nesting_t)1u;
  47:..//kernel/core/tos_mutex.c **** 
  48:..//kernel/core/tos_mutex.c ****     tos_list_add(&mutex->owner_anchor, &task->mutex_own_list);
  49:..//kernel/core/tos_mutex.c **** }
  50:..//kernel/core/tos_mutex.c **** 
  51:..//kernel/core/tos_mutex.c **** __STATIC_INLINE__ void mutex_new_owner_mark(k_mutex_t *mutex, k_task_t *task)
  52:..//kernel/core/tos_mutex.c **** {
  53:..//kernel/core/tos_mutex.c ****     k_prio_t highest_pending_prio;
  54:..//kernel/core/tos_mutex.c **** 
  55:..//kernel/core/tos_mutex.c ****     mutex_fresh_owner_mark(mutex, task);
  56:..//kernel/core/tos_mutex.c **** 
  57:..//kernel/core/tos_mutex.c ****     // we own the mutex now, make sure our priority is higher than any one in the pend list.
  58:..//kernel/core/tos_mutex.c ****     highest_pending_prio = pend_highest_pending_prio_get(&mutex->pend_obj);
  59:..//kernel/core/tos_mutex.c ****     if (task->prio > highest_pending_prio) {
  60:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(task, highest_pending_prio);
  61:..//kernel/core/tos_mutex.c ****     }
  62:..//kernel/core/tos_mutex.c **** }
  63:..//kernel/core/tos_mutex.c **** 
  64:..//kernel/core/tos_mutex.c **** __KNL__ void mutex_release(k_mutex_t *mutex)
  65:..//kernel/core/tos_mutex.c **** {
  28              		.loc 1 65 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 65 1 is_stmt 0 view .LVU1
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 0446     		mov	r4, r0
  66:..//kernel/core/tos_mutex.c ****     mutex_old_owner_release(mutex);
  41              		.loc 1 66 5 is_stmt 1 view .LVU2
  42              	.LVL1:
  43              	.LBB44:
  44              	.LBI44:
  22:..//kernel/core/tos_mutex.c **** {
  45              		.loc 1 22 24 view .LVU3
  46              	.LBB45:
  24:..//kernel/core/tos_mutex.c **** 
  47              		.loc 1 24 5 view .LVU4
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 3


  26:..//kernel/core/tos_mutex.c **** 
  48              		.loc 1 26 5 view .LVU5
  26:..//kernel/core/tos_mutex.c **** 
  49              		.loc 1 26 11 is_stmt 0 view .LVU6
  50 0004 0569     		ldr	r5, [r0, #16]
  51              	.LVL2:
  28:..//kernel/core/tos_mutex.c ****     mutex->owner        = K_NULL;
  52              		.loc 1 28 5 is_stmt 1 view .LVU7
  53              	.LBB46:
  54              	.LBI46:
  55              		.file 2 "..//kernel/core/include/tos_list.h"
   1:..//kernel/core/include/tos_list.h **** /*----------------------------------------------------------------------------
   2:..//kernel/core/include/tos_list.h ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/include/tos_list.h ****  * available.
   4:..//kernel/core/include/tos_list.h ****  *
   5:..//kernel/core/include/tos_list.h ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/include/tos_list.h ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/include/tos_list.h ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/include/tos_list.h ****  *
   9:..//kernel/core/include/tos_list.h ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/include/tos_list.h ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/include/tos_list.h ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/include/tos_list.h ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/include/tos_list.h ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/include/tos_list.h ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/include/tos_list.h ****  * within TencentOS.
  16:..//kernel/core/include/tos_list.h ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/include/tos_list.h **** 
  18:..//kernel/core/include/tos_list.h **** #ifndef _TOS_LIST_H_
  19:..//kernel/core/include/tos_list.h **** #define  _TOS_LIST_H_
  20:..//kernel/core/include/tos_list.h **** 
  21:..//kernel/core/include/tos_list.h **** __CDECLS_BEGIN
  22:..//kernel/core/include/tos_list.h **** 
  23:..//kernel/core/include/tos_list.h **** typedef struct k_list_node_st {
  24:..//kernel/core/include/tos_list.h ****     struct k_list_node_st *next;
  25:..//kernel/core/include/tos_list.h ****     struct k_list_node_st *prev;
  26:..//kernel/core/include/tos_list.h **** } k_list_t;
  27:..//kernel/core/include/tos_list.h **** 
  28:..//kernel/core/include/tos_list.h **** #define TOS_LIST_NODE(node) \
  29:..//kernel/core/include/tos_list.h ****     { &(node), &(node) }
  30:..//kernel/core/include/tos_list.h **** 
  31:..//kernel/core/include/tos_list.h **** #define TOS_LIST_DEFINE(list) \
  32:..//kernel/core/include/tos_list.h ****     k_list_t list = { &(list), &(list) }
  33:..//kernel/core/include/tos_list.h **** 
  34:..//kernel/core/include/tos_list.h **** #define TOS_LIST_ENTRY(node, type, field) \
  35:..//kernel/core/include/tos_list.h ****     TOS_CONTAINER_OF_FIELD(node, type, field)
  36:..//kernel/core/include/tos_list.h **** 
  37:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FIRST_ENTRY(list, type, field) \
  38:..//kernel/core/include/tos_list.h ****     TOS_LIST_ENTRY((list)->next, type, field)
  39:..//kernel/core/include/tos_list.h **** 
  40:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FIRST_ENTRY_OR_NULL(list, type, field) \
  41:..//kernel/core/include/tos_list.h ****     (tos_list_empty(list) ? K_NULL : TOS_LIST_FIRST_ENTRY(list, type, field))
  42:..//kernel/core/include/tos_list.h **** 
  43:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH(curr, list) \
  44:..//kernel/core/include/tos_list.h ****     for (curr = (list)->next; curr != (list); curr = curr->next)
  45:..//kernel/core/include/tos_list.h **** 
  46:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_PREV(curr, list) \
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 4


  47:..//kernel/core/include/tos_list.h ****     for (curr = (list)->prev; curr != (list); curr = curr->prev)
  48:..//kernel/core/include/tos_list.h **** 
  49:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_SAFE(curr, next, list) \
  50:..//kernel/core/include/tos_list.h ****     for (curr = (list)->next, next = curr->next; curr != (list); \
  51:..//kernel/core/include/tos_list.h ****             curr = next, next = curr->next)
  52:..//kernel/core/include/tos_list.h **** 
  53:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_PREV_SAFE(curr, next, list) \
  54:..//kernel/core/include/tos_list.h ****     for (curr = (list)->prev, next = curr->prev; \
  55:..//kernel/core/include/tos_list.h ****             curr != (list); \
  56:..//kernel/core/include/tos_list.h ****             curr = next, next = curr->prev)
  57:..//kernel/core/include/tos_list.h **** 
  58:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY(entry, type, field, list) \
  59:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->next, type, field); \
  60:..//kernel/core/include/tos_list.h ****         &entry->field != (list); \
  61:..//kernel/core/include/tos_list.h ****         entry = TOS_LIST_ENTRY(entry->field.next, type, field))
  62:..//kernel/core/include/tos_list.h **** 
  63:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY_REVERSE(entry, type, field, list) \
  64:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->prev, type, field); \
  65:..//kernel/core/include/tos_list.h ****             &entry->field != (list); \
  66:..//kernel/core/include/tos_list.h ****             entry = TOS_LIST_ENTRY(entry->field.prev, type, field))
  67:..//kernel/core/include/tos_list.h **** 
  68:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY_SAFE(entry, tmp, type, field, list) \
  69:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->next, type, field), \
  70:..//kernel/core/include/tos_list.h ****             tmp = TOS_LIST_ENTRY(entry->field.next, type, field); \
  71:..//kernel/core/include/tos_list.h ****             &entry->field != (list); \
  72:..//kernel/core/include/tos_list.h ****             entry = tmp, tmp = TOS_LIST_ENTRY(entry->field.next, type, field))
  73:..//kernel/core/include/tos_list.h **** 
  74:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY_SAFE_REVERSE(entry, tmp, type, field, list) \
  75:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->prev, type, field), \
  76:..//kernel/core/include/tos_list.h ****             tmp = TOS_LIST_ENTRY(entry->field.prev, type, field); \
  77:..//kernel/core/include/tos_list.h ****             &entry->field != (list); \
  78:..//kernel/core/include/tos_list.h ****             entry = tmp, tmp = TOS_LIST_ENTRY(entry->field.prev, type, field))
  79:..//kernel/core/include/tos_list.h **** 
  80:..//kernel/core/include/tos_list.h **** __STATIC_INLINE__ void _list_add(k_list_t *node, k_list_t *prev, k_list_t *next)
  81:..//kernel/core/include/tos_list.h **** {
  82:..//kernel/core/include/tos_list.h ****     next->prev = node;
  83:..//kernel/core/include/tos_list.h ****     node->next = next;
  84:..//kernel/core/include/tos_list.h ****     node->prev = prev;
  85:..//kernel/core/include/tos_list.h ****     prev->next = node;
  86:..//kernel/core/include/tos_list.h **** }
  87:..//kernel/core/include/tos_list.h **** 
  88:..//kernel/core/include/tos_list.h **** __STATIC_INLINE__ void _list_del(k_list_t *prev, k_list_t *next)
  89:..//kernel/core/include/tos_list.h **** {
  90:..//kernel/core/include/tos_list.h ****     next->prev = prev;
  91:..//kernel/core/include/tos_list.h ****     prev->next = next;
  92:..//kernel/core/include/tos_list.h **** }
  93:..//kernel/core/include/tos_list.h **** 
  94:..//kernel/core/include/tos_list.h **** __STATIC_INLINE__ void _list_del_node(k_list_t *node)
  95:..//kernel/core/include/tos_list.h **** {
  96:..//kernel/core/include/tos_list.h ****     _list_del(node->prev, node->next);
  97:..//kernel/core/include/tos_list.h **** }
  98:..//kernel/core/include/tos_list.h **** 
  99:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_init(k_list_t *list)
 100:..//kernel/core/include/tos_list.h **** {
 101:..//kernel/core/include/tos_list.h ****     list->next = list;
 102:..//kernel/core/include/tos_list.h ****     list->prev = list;
 103:..//kernel/core/include/tos_list.h **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 5


 104:..//kernel/core/include/tos_list.h **** 
 105:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_add(k_list_t *node, k_list_t *list)
 106:..//kernel/core/include/tos_list.h **** {
 107:..//kernel/core/include/tos_list.h ****     _list_add(node, list, list->next);
 108:..//kernel/core/include/tos_list.h **** }
 109:..//kernel/core/include/tos_list.h **** 
 110:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_add_tail(k_list_t *node, k_list_t *list)
 111:..//kernel/core/include/tos_list.h **** {
 112:..//kernel/core/include/tos_list.h ****     _list_add(node, list->prev, list);
 113:..//kernel/core/include/tos_list.h **** }
 114:..//kernel/core/include/tos_list.h **** 
 115:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_del(k_list_t *node)
  56              		.loc 2 115 32 view .LVU8
  57              	.LBB47:
 116:..//kernel/core/include/tos_list.h **** {
 117:..//kernel/core/include/tos_list.h ****     _list_del(node->prev, node->next);
  58              		.loc 2 117 5 view .LVU9
  59              		.loc 2 117 19 is_stmt 0 view .LVU10
  60 0006 C369     		ldr	r3, [r0, #28]
  61              		.loc 2 117 31 view .LVU11
  62 0008 8269     		ldr	r2, [r0, #24]
  63              	.LVL3:
  64              	.LBB48:
  65              	.LBI48:
  88:..//kernel/core/include/tos_list.h **** {
  66              		.loc 2 88 24 is_stmt 1 view .LVU12
  67              	.LBB49:
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
  68              		.loc 2 90 5 view .LVU13
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
  69              		.loc 2 90 16 is_stmt 0 view .LVU14
  70 000a 5360     		str	r3, [r2, #4]
  91:..//kernel/core/include/tos_list.h **** }
  71              		.loc 2 91 5 is_stmt 1 view .LVU15
  91:..//kernel/core/include/tos_list.h **** }
  72              		.loc 2 91 16 is_stmt 0 view .LVU16
  73 000c 1A60     		str	r2, [r3]
  74              	.LVL4:
  91:..//kernel/core/include/tos_list.h **** }
  75              		.loc 2 91 16 view .LVU17
  76              	.LBE49:
  77              	.LBE48:
  78              	.LBE47:
  79              	.LBE46:
  29:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting = (k_nesting_t)0u;
  80              		.loc 1 29 5 is_stmt 1 view .LVU18
  29:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting = (k_nesting_t)0u;
  81              		.loc 1 29 25 is_stmt 0 view .LVU19
  82 000e 0023     		movs	r3, #0
  83 0010 0361     		str	r3, [r0, #16]
  30:..//kernel/core/tos_mutex.c **** 
  84              		.loc 1 30 5 is_stmt 1 view .LVU20
  30:..//kernel/core/tos_mutex.c **** 
  85              		.loc 1 30 25 is_stmt 0 view .LVU21
  86 0012 0373     		strb	r3, [r0, #12]
  33:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, owner->prio_pending);
  87              		.loc 1 33 5 is_stmt 1 view .LVU22
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 6


  33:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, owner->prio_pending);
  88              		.loc 1 33 14 is_stmt 0 view .LVU23
  89 0014 95F86010 		ldrb	r1, [r5, #96]	@ zero_extendqisi2
  33:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, owner->prio_pending);
  90              		.loc 1 33 8 view .LVU24
  91 0018 0829     		cmp	r1, #8
  92 001a 0AD1     		bne	.L5
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
  93              		.loc 1 36 12 is_stmt 1 view .LVU25
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
  94              		.loc 1 36 21 is_stmt 0 view .LVU26
  95 001c 95F82130 		ldrb	r3, [r5, #33]	@ zero_extendqisi2
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
  96              		.loc 1 36 36 view .LVU27
  97 0020 017D     		ldrb	r1, [r0, #20]	@ zero_extendqisi2
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
  98              		.loc 1 36 15 view .LVU28
  99 0022 8B42     		cmp	r3, r1
 100 0024 0BD0     		beq	.L3
  37:..//kernel/core/tos_mutex.c ****         mutex->owner_orig_prio = K_TASK_PRIO_INVALID;
 101              		.loc 1 37 9 is_stmt 1 view .LVU29
 102 0026 2846     		mov	r0, r5
 103              	.LVL5:
  37:..//kernel/core/tos_mutex.c ****         mutex->owner_orig_prio = K_TASK_PRIO_INVALID;
 104              		.loc 1 37 9 is_stmt 0 view .LVU30
 105 0028 FFF7FEFF 		bl	tos_task_prio_change
 106              	.LVL6:
  38:..//kernel/core/tos_mutex.c ****     }
 107              		.loc 1 38 9 is_stmt 1 view .LVU31
  38:..//kernel/core/tos_mutex.c ****     }
 108              		.loc 1 38 32 is_stmt 0 view .LVU32
 109 002c 0823     		movs	r3, #8
 110 002e 2375     		strb	r3, [r4, #20]
 111 0030 05E0     		b	.L3
 112              	.LVL7:
 113              	.L5:
  34:..//kernel/core/tos_mutex.c ****         owner->prio_pending = K_TASK_PRIO_INVALID;
 114              		.loc 1 34 9 is_stmt 1 view .LVU33
 115 0032 2846     		mov	r0, r5
 116              	.LVL8:
  34:..//kernel/core/tos_mutex.c ****         owner->prio_pending = K_TASK_PRIO_INVALID;
 117              		.loc 1 34 9 is_stmt 0 view .LVU34
 118 0034 FFF7FEFF 		bl	tos_task_prio_change
 119              	.LVL9:
  35:..//kernel/core/tos_mutex.c ****     } else if (owner->prio != mutex->owner_orig_prio) {
 120              		.loc 1 35 9 is_stmt 1 view .LVU35
  35:..//kernel/core/tos_mutex.c ****     } else if (owner->prio != mutex->owner_orig_prio) {
 121              		.loc 1 35 29 is_stmt 0 view .LVU36
 122 0038 0823     		movs	r3, #8
 123 003a 85F86030 		strb	r3, [r5, #96]
 124              	.L3:
 125              	.LVL10:
  35:..//kernel/core/tos_mutex.c ****     } else if (owner->prio != mutex->owner_orig_prio) {
 126              		.loc 1 35 29 view .LVU37
 127              	.LBE45:
 128              	.LBE44:
  67:..//kernel/core/tos_mutex.c ****     pend_wakeup_all(&mutex->pend_obj, PEND_STATE_OWNER_DIE);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 7


 129              		.loc 1 67 5 is_stmt 1 view .LVU38
 130 003e 0421     		movs	r1, #4
 131 0040 6018     		adds	r0, r4, r1
 132 0042 FFF7FEFF 		bl	pend_wakeup_all
 133              	.LVL11:
  68:..//kernel/core/tos_mutex.c **** }
 134              		.loc 1 68 1 is_stmt 0 view .LVU39
 135 0046 38BD     		pop	{r3, r4, r5, pc}
 136              		.loc 1 68 1 view .LVU40
 137              		.cfi_endproc
 138              	.LFE113:
 140              		.section	.text.tos_mutex_create,"ax",%progbits
 141              		.align	1
 142              		.global	tos_mutex_create
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	tos_mutex_create:
 149              	.LVL12:
 150              	.LFB114:
  69:..//kernel/core/tos_mutex.c **** 
  70:..//kernel/core/tos_mutex.c **** __API__ k_err_t tos_mutex_create(k_mutex_t *mutex)
  71:..//kernel/core/tos_mutex.c **** {
 151              		.loc 1 71 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		.loc 1 71 1 is_stmt 0 view .LVU42
 156 0000 10B5     		push	{r4, lr}
 157              	.LCFI1:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 4, -8
 160              		.cfi_offset 14, -4
 161 0002 0446     		mov	r4, r0
  72:..//kernel/core/tos_mutex.c ****     TOS_IN_IRQ_CHECK();
 162              		.loc 1 72 5 is_stmt 1 view .LVU43
 163              		.loc 1 72 5 view .LVU44
 164 0004 FFF7FEFF 		bl	knl_is_inirq
 165              	.LVL13:
 166              		.loc 1 72 5 is_stmt 0 view .LVU45
 167 0008 80B9     		cbnz	r0, .L8
  73:..//kernel/core/tos_mutex.c ****     TOS_PTR_SANITY_CHECK(mutex);
 168              		.loc 1 73 5 is_stmt 1 view .LVU46
 169              		.loc 1 73 5 view .LVU47
 170 000a 94B1     		cbz	r4, .L9
  74:..//kernel/core/tos_mutex.c **** 
  75:..//kernel/core/tos_mutex.c ****     pend_object_init(&mutex->pend_obj);
 171              		.loc 1 75 5 view .LVU48
 172 000c 201D     		adds	r0, r4, #4
 173 000e FFF7FEFF 		bl	pend_object_init
 174              	.LVL14:
  76:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting     = (k_nesting_t)0u;
 175              		.loc 1 76 5 view .LVU49
 176              		.loc 1 76 29 is_stmt 0 view .LVU50
 177 0012 0020     		movs	r0, #0
 178 0014 2073     		strb	r0, [r4, #12]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 8


  77:..//kernel/core/tos_mutex.c ****     mutex->owner            = K_NULL;
 179              		.loc 1 77 5 is_stmt 1 view .LVU51
 180              		.loc 1 77 29 is_stmt 0 view .LVU52
 181 0016 2061     		str	r0, [r4, #16]
  78:..//kernel/core/tos_mutex.c ****     mutex->owner_orig_prio  = K_TASK_PRIO_INVALID;
 182              		.loc 1 78 5 is_stmt 1 view .LVU53
 183              		.loc 1 78 29 is_stmt 0 view .LVU54
 184 0018 0823     		movs	r3, #8
 185 001a 2375     		strb	r3, [r4, #20]
  79:..//kernel/core/tos_mutex.c ****     tos_list_init(&mutex->owner_anchor);
 186              		.loc 1 79 5 is_stmt 1 view .LVU55
 187 001c 04F11803 		add	r3, r4, #24
 188              	.LVL15:
 189              	.LBB50:
 190              	.LBI50:
  99:..//kernel/core/include/tos_list.h **** {
 191              		.loc 2 99 32 view .LVU56
 192              	.LBB51:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 193              		.loc 2 101 5 view .LVU57
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 194              		.loc 2 101 16 is_stmt 0 view .LVU58
 195 0020 A361     		str	r3, [r4, #24]
 102:..//kernel/core/include/tos_list.h **** }
 196              		.loc 2 102 5 is_stmt 1 view .LVU59
 102:..//kernel/core/include/tos_list.h **** }
 197              		.loc 2 102 16 is_stmt 0 view .LVU60
 198 0022 E361     		str	r3, [r4, #28]
 199              	.LVL16:
 102:..//kernel/core/include/tos_list.h **** }
 200              		.loc 2 102 16 view .LVU61
 201              	.LBE51:
 202              	.LBE50:
  80:..//kernel/core/tos_mutex.c **** 
  81:..//kernel/core/tos_mutex.c ****     TOS_OBJ_INIT(mutex, KNL_OBJ_TYPE_MUTEX);
 203              		.loc 1 81 5 is_stmt 1 view .LVU62
 204              	.LBB52:
 205              	.LBI52:
 206              		.file 3 "..//kernel/core/include/tos_sys.h"
   1:..//kernel/core/include/tos_sys.h **** /*----------------------------------------------------------------------------
   2:..//kernel/core/include/tos_sys.h ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/include/tos_sys.h ****  * available.
   4:..//kernel/core/include/tos_sys.h ****  *
   5:..//kernel/core/include/tos_sys.h ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/include/tos_sys.h ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/include/tos_sys.h ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/include/tos_sys.h ****  *
   9:..//kernel/core/include/tos_sys.h ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/include/tos_sys.h ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/include/tos_sys.h ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/include/tos_sys.h ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/include/tos_sys.h ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/include/tos_sys.h ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/include/tos_sys.h ****  * within TencentOS.
  16:..//kernel/core/include/tos_sys.h ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/include/tos_sys.h **** 
  18:..//kernel/core/include/tos_sys.h **** #ifndef _TOS_SYS_H_
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 9


  19:..//kernel/core/include/tos_sys.h **** #define  _TOS_SYS_H_
  20:..//kernel/core/include/tos_sys.h **** 
  21:..//kernel/core/include/tos_sys.h **** __CDECLS_BEGIN
  22:..//kernel/core/include/tos_sys.h **** 
  23:..//kernel/core/include/tos_sys.h **** #define K_NESTING_LIMIT_IRQ             (k_nesting_t)250u
  24:..//kernel/core/include/tos_sys.h **** #define K_NESTING_LIMIT_SCHED_LOCK      (k_nesting_t)250u
  25:..//kernel/core/include/tos_sys.h **** 
  26:..//kernel/core/include/tos_sys.h **** typedef enum knl_state_en {
  27:..//kernel/core/include/tos_sys.h ****     KNL_STATE_STOPPED,
  28:..//kernel/core/include/tos_sys.h ****     KNL_STATE_RUNNING,
  29:..//kernel/core/include/tos_sys.h **** } knl_state_t;
  30:..//kernel/core/include/tos_sys.h **** 
  31:..//kernel/core/include/tos_sys.h **** // some kind of magic number, mainly for identifing whether the object is initialized, or whether u
  32:..//kernel/core/include/tos_sys.h **** typedef enum knl_obj_type_en {
  33:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_NONE                           = 0x0000,
  34:..//kernel/core/include/tos_sys.h **** 
  35:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BINARY_HEAP                    = 0xDAD0,
  36:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BITMAP                         = 0xDAD1,
  37:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_CHAR_FIFO                      = 0xDAD2,
  38:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MMBLK_POOL                     = 0xDAD3,
  39:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MSG_QUEUE                      = 0xDAD4,
  40:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_QUEUE                 = 0xDAD5,
  41:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_RING_QUEUE                     = 0xDAD6,
  42:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_STOPWATCH                      = 0xDAD7,
  43:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_TASK                           = 0xDAD8,
  44:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_TIMER                          = 0xDAD9,
  45:..//kernel/core/include/tos_sys.h **** 
  46:..//kernel/core/include/tos_sys.h ****     // ipc object
  47:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BARRIER                        = 0x0BEE,
  48:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_COMPLETION                     = 0x1BEE,
  49:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_COUNTDOWNLATCH                 = 0x2BEE,
  50:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_EVENT                          = 0x3BEE,
  51:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MAIL_QUEUE                     = 0x4BEE,
  52:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MESSAGE_QUEUE                  = 0x5BEE,
  53:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MUTEX                          = 0x6BEE,
  54:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_MAIL_QUEUE            = 0x7BEE,
  55:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_MESSAGE_QUEUE         = 0x8BEE,
  56:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_RWLOCK                         = 0x9BEE,
  57:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_SEMAPHORE                      = 0xABEE,
  58:..//kernel/core/include/tos_sys.h **** } knl_obj_type_t;
  59:..//kernel/core/include/tos_sys.h **** 
  60:..//kernel/core/include/tos_sys.h **** typedef enum knl_obj_alloc_type_en {
  61:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_NONE,
  62:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_STATIC,
  63:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_DYNAMIC,
  64:..//kernel/core/include/tos_sys.h **** } knl_obj_alloc_type_t;
  65:..//kernel/core/include/tos_sys.h **** 
  66:..//kernel/core/include/tos_sys.h **** typedef struct knl_object_st {
  67:..//kernel/core/include/tos_sys.h ****     knl_obj_alloc_type_t    alloc_type; /* is dynamic allocated(using tos_mmheap) or static memory?
  68:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_OBJECT_VERIFY_EN > 0u
  69:..//kernel/core/include/tos_sys.h ****     knl_obj_type_t          type;
  70:..//kernel/core/include/tos_sys.h **** #endif
  71:..//kernel/core/include/tos_sys.h **** } knl_obj_t;
  72:..//kernel/core/include/tos_sys.h **** 
  73:..//kernel/core/include/tos_sys.h **** /**
  74:..//kernel/core/include/tos_sys.h ****  * @brief Initialize the kernel.
  75:..//kernel/core/include/tos_sys.h ****  * initialize the tos tiny kernel.
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 10


  76:..//kernel/core/include/tos_sys.h ****  *
  77:..//kernel/core/include/tos_sys.h ****  * @attention None
  78:..//kernel/core/include/tos_sys.h ****  *
  79:..//kernel/core/include/tos_sys.h ****  * @param   None
  80:..//kernel/core/include/tos_sys.h ****  *
  81:..//kernel/core/include/tos_sys.h ****  * @return  errcode
  82:..//kernel/core/include/tos_sys.h ****  * @retval  Non-#K_ERR_NONE               return failed.
  83:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_NONE                   return successfully.
  84:..//kernel/core/include/tos_sys.h ****  */
  85:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_init(void);
  86:..//kernel/core/include/tos_sys.h **** 
  87:..//kernel/core/include/tos_sys.h **** /**
  88:..//kernel/core/include/tos_sys.h ****  * @brief Start the kernel.
  89:..//kernel/core/include/tos_sys.h ****  * get the kernel start to run, which means start the multitask scheduling.
  90:..//kernel/core/include/tos_sys.h ****  *
  91:..//kernel/core/include/tos_sys.h ****  * @attention None
  92:..//kernel/core/include/tos_sys.h ****  *
  93:..//kernel/core/include/tos_sys.h ****  * @param   None
  94:..//kernel/core/include/tos_sys.h ****  *
  95:..//kernel/core/include/tos_sys.h ****  * @return  errcode
  96:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_KNL_RUNNING            the kernel is already running.
  97:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_NONE                   return successfully.
  98:..//kernel/core/include/tos_sys.h ****  */
  99:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_start(void);
 100:..//kernel/core/include/tos_sys.h **** 
 101:..//kernel/core/include/tos_sys.h **** /**
 102:..//kernel/core/include/tos_sys.h ****  * @brief Get the kernel state.
 103:..//kernel/core/include/tos_sys.h ****  * whether the kernel is running.
 104:..//kernel/core/include/tos_sys.h ****  *
 105:..//kernel/core/include/tos_sys.h ****  * @attention None
 106:..//kernel/core/include/tos_sys.h ****  *
 107:..//kernel/core/include/tos_sys.h ****  * @param   None
 108:..//kernel/core/include/tos_sys.h ****  *
 109:..//kernel/core/include/tos_sys.h ****  * @return  whether the kernel is running.
 110:..//kernel/core/include/tos_sys.h ****  * @retval  Non-0                           the kernel is running.
 111:..//kernel/core/include/tos_sys.h ****  * @retval  0                               the kernel is not running.
 112:..//kernel/core/include/tos_sys.h ****  */
 113:..//kernel/core/include/tos_sys.h **** __API__ int     tos_knl_is_running(void);
 114:..//kernel/core/include/tos_sys.h **** 
 115:..//kernel/core/include/tos_sys.h **** /**
 116:..//kernel/core/include/tos_sys.h ****  * @brief Kernel enter the interrupt.
 117:..//kernel/core/include/tos_sys.h ****  * this function should be called in the entrance of a interrupt handler.
 118:..//kernel/core/include/tos_sys.h ****  *
 119:..//kernel/core/include/tos_sys.h ****  * @attention None
 120:..//kernel/core/include/tos_sys.h ****  *
 121:..//kernel/core/include/tos_sys.h ****  * @param   None
 122:..//kernel/core/include/tos_sys.h ****  *
 123:..//kernel/core/include/tos_sys.h ****  * @return  None
 124:..//kernel/core/include/tos_sys.h ****  */
 125:..//kernel/core/include/tos_sys.h **** __API__ void    tos_knl_irq_enter(void);
 126:..//kernel/core/include/tos_sys.h **** 
 127:..//kernel/core/include/tos_sys.h **** /**
 128:..//kernel/core/include/tos_sys.h ****  * @brief Kernel exit the interrupt.
 129:..//kernel/core/include/tos_sys.h ****  * this function should be called in the exit of a interrupt handler.
 130:..//kernel/core/include/tos_sys.h ****  *
 131:..//kernel/core/include/tos_sys.h ****  * @attention None
 132:..//kernel/core/include/tos_sys.h ****  *
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 11


 133:..//kernel/core/include/tos_sys.h ****  * @param   None
 134:..//kernel/core/include/tos_sys.h ****  *
 135:..//kernel/core/include/tos_sys.h ****  * @return  None
 136:..//kernel/core/include/tos_sys.h ****  */
 137:..//kernel/core/include/tos_sys.h **** __API__ void    tos_knl_irq_leave(void);
 138:..//kernel/core/include/tos_sys.h **** 
 139:..//kernel/core/include/tos_sys.h **** /**
 140:..//kernel/core/include/tos_sys.h ****  * @brief Lock the scheduler.
 141:..//kernel/core/include/tos_sys.h ****  * prevent the kernel from performing task schedule.
 142:..//kernel/core/include/tos_sys.h ****  *
 143:..//kernel/core/include/tos_sys.h ****  * @attention None
 144:..//kernel/core/include/tos_sys.h ****  *
 145:..//kernel/core/include/tos_sys.h ****  * @param   None
 146:..//kernel/core/include/tos_sys.h ****  *
 147:..//kernel/core/include/tos_sys.h ****  * @return  errcode
 148:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_KNL_NOT_RUNNING         the kernel is not running.
 149:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_LOCK_NESTING_OVERFLOW   the schedule lock nesting is overflow.
 150:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_NONE                    return successfully.
 151:..//kernel/core/include/tos_sys.h ****  */
 152:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_sched_lock(void);
 153:..//kernel/core/include/tos_sys.h **** 
 154:..//kernel/core/include/tos_sys.h **** /**
 155:..//kernel/core/include/tos_sys.h ****  * @brief Unlock the scheduler.
 156:..//kernel/core/include/tos_sys.h ****  * re-enable the task schedule.
 157:..//kernel/core/include/tos_sys.h ****  *
 158:..//kernel/core/include/tos_sys.h ****  * @attention None
 159:..//kernel/core/include/tos_sys.h ****  *
 160:..//kernel/core/include/tos_sys.h ****  * @param   None
 161:..//kernel/core/include/tos_sys.h ****  *
 162:..//kernel/core/include/tos_sys.h ****  * @return  errcode
 163:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_KNL_NOT_RUNNING         the kernel is not running.
 164:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_SCHED_NOT_LOCKED        the scheduler is not locked.
 165:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_NONE                    return successfully.
 166:..//kernel/core/include/tos_sys.h ****  */
 167:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_sched_unlock(void);
 168:..//kernel/core/include/tos_sys.h **** 
 169:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_TICKLESS_EN > 0u
 170:..//kernel/core/include/tos_sys.h **** __KNL__ k_tick_t knl_next_expires_get(void);
 171:..//kernel/core/include/tos_sys.h **** #endif
 172:..//kernel/core/include/tos_sys.h **** 
 173:..//kernel/core/include/tos_sys.h **** __KNL__ void    knl_sched(void);
 174:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_sched_locked(void);
 175:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_inirq(void);
 176:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_idle(k_task_t *task);
 177:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_self(k_task_t *task);
 178:..//kernel/core/include/tos_sys.h **** __KNL__ k_err_t knl_idle_init(void);
 179:..//kernel/core/include/tos_sys.h **** 
 180:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_OBJECT_VERIFY_EN > 0u
 181:..//kernel/core/include/tos_sys.h **** 
 182:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ int knl_object_verify(knl_obj_t *knl_obj, knl_obj_type_t type)
 183:..//kernel/core/include/tos_sys.h **** {
 184:..//kernel/core/include/tos_sys.h ****     return knl_obj->type == type;
 185:..//kernel/core/include/tos_sys.h **** }
 186:..//kernel/core/include/tos_sys.h **** 
 187:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_init(knl_obj_t *knl_obj, knl_obj_type_t type)
 207              		.loc 3 187 32 view .LVU63
 208              	.LBB53:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 12


 188:..//kernel/core/include/tos_sys.h **** {
 189:..//kernel/core/include/tos_sys.h ****     knl_obj->type = type;
 209              		.loc 3 189 5 view .LVU64
 210              		.loc 3 189 19 is_stmt 0 view .LVU65
 211 0024 46F6EE33 		movw	r3, #27630
 212 0028 6380     		strh	r3, [r4, #2]	@ movhi
 213              	.LVL17:
 214              		.loc 3 189 19 view .LVU66
 215              	.LBE53:
 216              	.LBE52:
  82:..//kernel/core/tos_mutex.c **** 
  83:..//kernel/core/tos_mutex.c ****     return K_ERR_NONE;
 217              		.loc 1 83 5 is_stmt 1 view .LVU67
 218              	.L7:
  84:..//kernel/core/tos_mutex.c **** }
 219              		.loc 1 84 1 is_stmt 0 view .LVU68
 220 002a 10BD     		pop	{r4, pc}
 221              	.LVL18:
 222              	.L8:
  72:..//kernel/core/tos_mutex.c ****     TOS_PTR_SANITY_CHECK(mutex);
 223              		.loc 1 72 5 view .LVU69
 224 002c 4FF4C870 		mov	r0, #400
 225 0030 FBE7     		b	.L7
 226              	.L9:
  73:..//kernel/core/tos_mutex.c **** 
 227              		.loc 1 73 5 view .LVU70
 228 0032 40F24C40 		movw	r0, #1100
 229 0036 F8E7     		b	.L7
 230              		.cfi_endproc
 231              	.LFE114:
 233              		.section	.text.tos_mutex_destroy,"ax",%progbits
 234              		.align	1
 235              		.global	tos_mutex_destroy
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu softvfp
 241              	tos_mutex_destroy:
 242              	.LVL19:
 243              	.LFB115:
  85:..//kernel/core/tos_mutex.c **** 
  86:..//kernel/core/tos_mutex.c **** __API__ k_err_t tos_mutex_destroy(k_mutex_t *mutex)
  87:..//kernel/core/tos_mutex.c **** {
 244              		.loc 1 87 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		.loc 1 87 1 is_stmt 0 view .LVU72
 249 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 250              	.LCFI2:
 251              		.cfi_def_cfa_offset 24
 252              		.cfi_offset 3, -24
 253              		.cfi_offset 4, -20
 254              		.cfi_offset 5, -16
 255              		.cfi_offset 6, -12
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 13


 258 0002 0446     		mov	r4, r0
  88:..//kernel/core/tos_mutex.c ****     TOS_CPU_CPSR_ALLOC();
 259              		.loc 1 88 5 is_stmt 1 view .LVU73
 260              	.LVL20:
  89:..//kernel/core/tos_mutex.c **** 
  90:..//kernel/core/tos_mutex.c ****     TOS_IN_IRQ_CHECK();
 261              		.loc 1 90 5 view .LVU74
 262              		.loc 1 90 5 view .LVU75
 263 0004 FFF7FEFF 		bl	knl_is_inirq
 264              	.LVL21:
 265              		.loc 1 90 5 is_stmt 0 view .LVU76
 266 0008 0028     		cmp	r0, #0
 267 000a 3CD1     		bne	.L16
  91:..//kernel/core/tos_mutex.c ****     TOS_PTR_SANITY_CHECK(mutex);
 268              		.loc 1 91 5 is_stmt 1 view .LVU77
 269              		.loc 1 91 5 view .LVU78
 270 000c 002C     		cmp	r4, #0
 271 000e 3DD0     		beq	.L17
  92:..//kernel/core/tos_mutex.c ****     TOS_OBJ_VERIFY(mutex, KNL_OBJ_TYPE_MUTEX);
 272              		.loc 1 92 5 view .LVU79
 273              		.loc 1 92 5 view .LVU80
 274              	.LVL22:
 275              	.LBB64:
 276              	.LBI64:
 182:..//kernel/core/include/tos_sys.h **** {
 277              		.loc 3 182 31 view .LVU81
 278              	.LBB65:
 184:..//kernel/core/include/tos_sys.h **** }
 279              		.loc 3 184 5 view .LVU82
 184:..//kernel/core/include/tos_sys.h **** }
 280              		.loc 3 184 19 is_stmt 0 view .LVU83
 281 0010 6288     		ldrh	r2, [r4, #2]
 282              	.LVL23:
 184:..//kernel/core/include/tos_sys.h **** }
 283              		.loc 3 184 19 view .LVU84
 284              	.LBE65:
 285              	.LBE64:
 286              		.loc 1 92 5 view .LVU85
 287 0012 46F6EE33 		movw	r3, #27630
 288 0016 9A42     		cmp	r2, r3
 289 0018 02D0     		beq	.L20
 290 001a 40F24D40 		movw	r0, #1101
 291              	.LVL24:
 292              	.L12:
  93:..//kernel/core/tos_mutex.c **** 
  94:..//kernel/core/tos_mutex.c ****     TOS_CPU_INT_DISABLE();
  95:..//kernel/core/tos_mutex.c **** 
  96:..//kernel/core/tos_mutex.c ****     pend_wakeup_all(&mutex->pend_obj, PEND_STATE_DESTROY);
  97:..//kernel/core/tos_mutex.c **** 
  98:..//kernel/core/tos_mutex.c ****     if (mutex->owner) {
  99:..//kernel/core/tos_mutex.c ****         mutex_old_owner_release(mutex);
 100:..//kernel/core/tos_mutex.c ****     }
 101:..//kernel/core/tos_mutex.c **** 
 102:..//kernel/core/tos_mutex.c ****     pend_object_deinit(&mutex->pend_obj);
 103:..//kernel/core/tos_mutex.c **** 
 104:..//kernel/core/tos_mutex.c ****     TOS_OBJ_DEINIT(mutex);
 105:..//kernel/core/tos_mutex.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 14


 106:..//kernel/core/tos_mutex.c ****     TOS_CPU_INT_ENABLE();
 107:..//kernel/core/tos_mutex.c ****     knl_sched();
 108:..//kernel/core/tos_mutex.c **** 
 109:..//kernel/core/tos_mutex.c ****     return K_ERR_NONE;
 110:..//kernel/core/tos_mutex.c **** }
 293              		.loc 1 110 1 view .LVU86
 294 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 295              	.LVL25:
 296              	.L20:
  94:..//kernel/core/tos_mutex.c **** 
 297              		.loc 1 94 5 is_stmt 1 view .LVU87
  94:..//kernel/core/tos_mutex.c **** 
 298              		.loc 1 94 5 view .LVU88
 299 0020 FFF7FEFF 		bl	tos_cpu_cpsr_save
 300              	.LVL26:
 301 0024 0646     		mov	r6, r0
 302              	.LVL27:
  96:..//kernel/core/tos_mutex.c **** 
 303              		.loc 1 96 5 view .LVU89
 304 0026 251D     		adds	r5, r4, #4
 305 0028 0321     		movs	r1, #3
 306 002a 2846     		mov	r0, r5
 307              	.LVL28:
  96:..//kernel/core/tos_mutex.c **** 
 308              		.loc 1 96 5 is_stmt 0 view .LVU90
 309 002c FFF7FEFF 		bl	pend_wakeup_all
 310              	.LVL29:
  98:..//kernel/core/tos_mutex.c ****         mutex_old_owner_release(mutex);
 311              		.loc 1 98 5 is_stmt 1 view .LVU91
  98:..//kernel/core/tos_mutex.c ****         mutex_old_owner_release(mutex);
 312              		.loc 1 98 14 is_stmt 0 view .LVU92
 313 0030 2369     		ldr	r3, [r4, #16]
  98:..//kernel/core/tos_mutex.c ****         mutex_old_owner_release(mutex);
 314              		.loc 1 98 8 view .LVU93
 315 0032 E3B1     		cbz	r3, .L13
  99:..//kernel/core/tos_mutex.c ****     }
 316              		.loc 1 99 9 is_stmt 1 view .LVU94
 317              	.LVL30:
 318              	.LBB66:
 319              	.LBI66:
  22:..//kernel/core/tos_mutex.c **** {
 320              		.loc 1 22 24 view .LVU95
 321              	.LBB67:
  24:..//kernel/core/tos_mutex.c **** 
 322              		.loc 1 24 5 view .LVU96
  26:..//kernel/core/tos_mutex.c **** 
 323              		.loc 1 26 5 view .LVU97
  26:..//kernel/core/tos_mutex.c **** 
 324              		.loc 1 26 11 is_stmt 0 view .LVU98
 325 0034 1F46     		mov	r7, r3
 326              	.LVL31:
  28:..//kernel/core/tos_mutex.c ****     mutex->owner        = K_NULL;
 327              		.loc 1 28 5 is_stmt 1 view .LVU99
 328              	.LBB68:
 329              	.LBI68:
 115:..//kernel/core/include/tos_list.h **** {
 330              		.loc 2 115 32 view .LVU100
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 15


 331              	.LBB69:
 332              		.loc 2 117 5 view .LVU101
 333              		.loc 2 117 19 is_stmt 0 view .LVU102
 334 0036 E369     		ldr	r3, [r4, #28]
 335              	.LVL32:
 336              		.loc 2 117 31 view .LVU103
 337 0038 A269     		ldr	r2, [r4, #24]
 338              	.LVL33:
 339              	.LBB70:
 340              	.LBI70:
  88:..//kernel/core/include/tos_list.h **** {
 341              		.loc 2 88 24 is_stmt 1 view .LVU104
 342              	.LBB71:
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 343              		.loc 2 90 5 view .LVU105
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 344              		.loc 2 90 16 is_stmt 0 view .LVU106
 345 003a 5360     		str	r3, [r2, #4]
  91:..//kernel/core/include/tos_list.h **** }
 346              		.loc 2 91 5 is_stmt 1 view .LVU107
  91:..//kernel/core/include/tos_list.h **** }
 347              		.loc 2 91 16 is_stmt 0 view .LVU108
 348 003c 1A60     		str	r2, [r3]
 349              	.LVL34:
  91:..//kernel/core/include/tos_list.h **** }
 350              		.loc 2 91 16 view .LVU109
 351              	.LBE71:
 352              	.LBE70:
 353              	.LBE69:
 354              	.LBE68:
  29:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting = (k_nesting_t)0u;
 355              		.loc 1 29 5 is_stmt 1 view .LVU110
  29:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting = (k_nesting_t)0u;
 356              		.loc 1 29 25 is_stmt 0 view .LVU111
 357 003e 0023     		movs	r3, #0
 358 0040 2361     		str	r3, [r4, #16]
  30:..//kernel/core/tos_mutex.c **** 
 359              		.loc 1 30 5 is_stmt 1 view .LVU112
  30:..//kernel/core/tos_mutex.c **** 
 360              		.loc 1 30 25 is_stmt 0 view .LVU113
 361 0042 2373     		strb	r3, [r4, #12]
  33:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, owner->prio_pending);
 362              		.loc 1 33 5 is_stmt 1 view .LVU114
  33:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, owner->prio_pending);
 363              		.loc 1 33 14 is_stmt 0 view .LVU115
 364 0044 97F86010 		ldrb	r1, [r7, #96]	@ zero_extendqisi2
  33:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, owner->prio_pending);
 365              		.loc 1 33 8 view .LVU116
 366 0048 0829     		cmp	r1, #8
 367 004a 0AD1     		bne	.L21
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
 368              		.loc 1 36 12 is_stmt 1 view .LVU117
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
 369              		.loc 1 36 21 is_stmt 0 view .LVU118
 370 004c 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
 371              		.loc 1 36 36 view .LVU119
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 16


 372 0050 217D     		ldrb	r1, [r4, #20]	@ zero_extendqisi2
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
 373              		.loc 1 36 15 view .LVU120
 374 0052 8B42     		cmp	r3, r1
 375 0054 0BD0     		beq	.L13
  37:..//kernel/core/tos_mutex.c ****         mutex->owner_orig_prio = K_TASK_PRIO_INVALID;
 376              		.loc 1 37 9 is_stmt 1 view .LVU121
 377 0056 3846     		mov	r0, r7
 378 0058 FFF7FEFF 		bl	tos_task_prio_change
 379              	.LVL35:
  38:..//kernel/core/tos_mutex.c ****     }
 380              		.loc 1 38 9 view .LVU122
  38:..//kernel/core/tos_mutex.c ****     }
 381              		.loc 1 38 32 is_stmt 0 view .LVU123
 382 005c 0823     		movs	r3, #8
 383 005e 2375     		strb	r3, [r4, #20]
 384 0060 05E0     		b	.L13
 385              	.L21:
  34:..//kernel/core/tos_mutex.c ****         owner->prio_pending = K_TASK_PRIO_INVALID;
 386              		.loc 1 34 9 is_stmt 1 view .LVU124
 387 0062 3846     		mov	r0, r7
 388 0064 FFF7FEFF 		bl	tos_task_prio_change
 389              	.LVL36:
  35:..//kernel/core/tos_mutex.c ****     } else if (owner->prio != mutex->owner_orig_prio) {
 390              		.loc 1 35 9 view .LVU125
  35:..//kernel/core/tos_mutex.c ****     } else if (owner->prio != mutex->owner_orig_prio) {
 391              		.loc 1 35 29 is_stmt 0 view .LVU126
 392 0068 0823     		movs	r3, #8
 393 006a 87F86030 		strb	r3, [r7, #96]
 394              	.LVL37:
 395              	.L13:
  35:..//kernel/core/tos_mutex.c ****     } else if (owner->prio != mutex->owner_orig_prio) {
 396              		.loc 1 35 29 view .LVU127
 397              	.LBE67:
 398              	.LBE66:
 102:..//kernel/core/tos_mutex.c **** 
 399              		.loc 1 102 5 is_stmt 1 view .LVU128
 400 006e 2846     		mov	r0, r5
 401 0070 FFF7FEFF 		bl	pend_object_deinit
 402              	.LVL38:
 104:..//kernel/core/tos_mutex.c **** 
 403              		.loc 1 104 5 view .LVU129
 404              	.LBB72:
 405              	.LBI72:
 190:..//kernel/core/include/tos_sys.h **** }
 191:..//kernel/core/include/tos_sys.h **** 
 192:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_deinit(knl_obj_t *knl_obj)
 406              		.loc 3 192 32 view .LVU130
 407              	.LBB73:
 193:..//kernel/core/include/tos_sys.h **** {
 194:..//kernel/core/include/tos_sys.h ****     knl_obj->type = KNL_OBJ_TYPE_NONE;
 408              		.loc 3 194 5 view .LVU131
 409              		.loc 3 194 19 is_stmt 0 view .LVU132
 410 0074 0025     		movs	r5, #0
 411 0076 6580     		strh	r5, [r4, #2]	@ movhi
 412              	.LVL39:
 413              		.loc 3 194 19 view .LVU133
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 17


 414              	.LBE73:
 415              	.LBE72:
 106:..//kernel/core/tos_mutex.c ****     knl_sched();
 416              		.loc 1 106 5 is_stmt 1 view .LVU134
 106:..//kernel/core/tos_mutex.c ****     knl_sched();
 417              		.loc 1 106 5 view .LVU135
 418 0078 3046     		mov	r0, r6
 419 007a FFF7FEFF 		bl	tos_cpu_cpsr_restore
 420              	.LVL40:
 107:..//kernel/core/tos_mutex.c **** 
 421              		.loc 1 107 5 view .LVU136
 422 007e FFF7FEFF 		bl	knl_sched
 423              	.LVL41:
 109:..//kernel/core/tos_mutex.c **** }
 424              		.loc 1 109 5 view .LVU137
 109:..//kernel/core/tos_mutex.c **** }
 425              		.loc 1 109 12 is_stmt 0 view .LVU138
 426 0082 2846     		mov	r0, r5
 427 0084 CBE7     		b	.L12
 428              	.LVL42:
 429              	.L16:
  90:..//kernel/core/tos_mutex.c ****     TOS_PTR_SANITY_CHECK(mutex);
 430              		.loc 1 90 5 view .LVU139
 431 0086 4FF4C870 		mov	r0, #400
 432 008a C8E7     		b	.L12
 433              	.L17:
  91:..//kernel/core/tos_mutex.c ****     TOS_OBJ_VERIFY(mutex, KNL_OBJ_TYPE_MUTEX);
 434              		.loc 1 91 5 view .LVU140
 435 008c 40F24C40 		movw	r0, #1100
 436 0090 C5E7     		b	.L12
 437              		.cfi_endproc
 438              	.LFE115:
 440              		.section	.text.tos_mutex_pend_timed,"ax",%progbits
 441              		.align	1
 442              		.global	tos_mutex_pend_timed
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu softvfp
 448              	tos_mutex_pend_timed:
 449              	.LVL43:
 450              	.LFB116:
 111:..//kernel/core/tos_mutex.c **** 
 112:..//kernel/core/tos_mutex.c **** __API__ k_err_t tos_mutex_pend_timed(k_mutex_t *mutex, k_tick_t timeout)
 113:..//kernel/core/tos_mutex.c **** {
 451              		.loc 1 113 1 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		.loc 1 113 1 is_stmt 0 view .LVU142
 456 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 457              	.LCFI3:
 458              		.cfi_def_cfa_offset 24
 459              		.cfi_offset 4, -24
 460              		.cfi_offset 5, -20
 461              		.cfi_offset 6, -16
 462              		.cfi_offset 7, -12
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 18


 463              		.cfi_offset 8, -8
 464              		.cfi_offset 14, -4
 465 0004 0446     		mov	r4, r0
 466 0006 1646     		mov	r6, r2
 467 0008 1F46     		mov	r7, r3
 114:..//kernel/core/tos_mutex.c ****     TOS_CPU_CPSR_ALLOC();
 468              		.loc 1 114 5 is_stmt 1 view .LVU143
 469              	.LVL44:
 115:..//kernel/core/tos_mutex.c **** 
 116:..//kernel/core/tos_mutex.c ****     TOS_IN_IRQ_CHECK();
 470              		.loc 1 116 5 view .LVU144
 471              		.loc 1 116 5 view .LVU145
 472 000a FFF7FEFF 		bl	knl_is_inirq
 473              	.LVL45:
 474              		.loc 1 116 5 is_stmt 0 view .LVU146
 475 000e 0028     		cmp	r0, #0
 476 0010 6DD1     		bne	.L30
 117:..//kernel/core/tos_mutex.c ****     TOS_PTR_SANITY_CHECK(mutex);
 477              		.loc 1 117 5 is_stmt 1 view .LVU147
 478              		.loc 1 117 5 view .LVU148
 479 0012 002C     		cmp	r4, #0
 480 0014 6ED0     		beq	.L31
 118:..//kernel/core/tos_mutex.c ****     TOS_OBJ_VERIFY(mutex, KNL_OBJ_TYPE_MUTEX);
 481              		.loc 1 118 5 view .LVU149
 482              		.loc 1 118 5 view .LVU150
 483              	.LVL46:
 484              	.LBB74:
 485              	.LBI74:
 182:..//kernel/core/include/tos_sys.h **** {
 486              		.loc 3 182 31 view .LVU151
 487              	.LBB75:
 184:..//kernel/core/include/tos_sys.h **** }
 488              		.loc 3 184 5 view .LVU152
 184:..//kernel/core/include/tos_sys.h **** }
 489              		.loc 3 184 19 is_stmt 0 view .LVU153
 490 0016 6288     		ldrh	r2, [r4, #2]
 491              	.LVL47:
 184:..//kernel/core/include/tos_sys.h **** }
 492              		.loc 3 184 19 view .LVU154
 493              	.LBE75:
 494              	.LBE74:
 495              		.loc 1 118 5 view .LVU155
 496 0018 46F6EE33 		movw	r3, #27630
 497 001c 9A42     		cmp	r2, r3
 498 001e 03D0     		beq	.L34
 499 0020 40F24D40 		movw	r0, #1101
 500              	.LVL48:
 501              	.L23:
 119:..//kernel/core/tos_mutex.c **** 
 120:..//kernel/core/tos_mutex.c ****     TOS_CPU_INT_DISABLE();
 121:..//kernel/core/tos_mutex.c ****     if (mutex->pend_nesting == (k_nesting_t)0u) { // first come
 122:..//kernel/core/tos_mutex.c ****         mutex_fresh_owner_mark(mutex, k_curr_task);
 123:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 124:..//kernel/core/tos_mutex.c ****         return K_ERR_NONE;
 125:..//kernel/core/tos_mutex.c ****     }
 126:..//kernel/core/tos_mutex.c **** 
 127:..//kernel/core/tos_mutex.c ****     if (knl_is_self(mutex->owner)) { // come again
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 19


 128:..//kernel/core/tos_mutex.c ****         if (mutex->pend_nesting == (k_nesting_t)-1) {
 129:..//kernel/core/tos_mutex.c ****             TOS_CPU_INT_ENABLE();
 130:..//kernel/core/tos_mutex.c ****             return K_ERR_MUTEX_NESTING_OVERFLOW;
 131:..//kernel/core/tos_mutex.c ****         }
 132:..//kernel/core/tos_mutex.c ****         ++mutex->pend_nesting;
 133:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 134:..//kernel/core/tos_mutex.c ****         return K_ERR_MUTEX_NESTING;
 135:..//kernel/core/tos_mutex.c ****     }
 136:..//kernel/core/tos_mutex.c **** 
 137:..//kernel/core/tos_mutex.c ****     if (timeout == TOS_TIME_NOWAIT) { // no wait, return immediately
 138:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 139:..//kernel/core/tos_mutex.c ****         return K_ERR_PEND_NOWAIT;
 140:..//kernel/core/tos_mutex.c ****     }
 141:..//kernel/core/tos_mutex.c **** 
 142:..//kernel/core/tos_mutex.c ****     if (knl_is_sched_locked()) {
 143:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 144:..//kernel/core/tos_mutex.c ****         return K_ERR_PEND_SCHED_LOCKED;
 145:..//kernel/core/tos_mutex.c ****     }
 146:..//kernel/core/tos_mutex.c **** 
 147:..//kernel/core/tos_mutex.c ****     if (mutex->owner->prio > k_curr_task->prio) {
 148:..//kernel/core/tos_mutex.c ****         // PRIORITY INVERSION:
 149:..//kernel/core/tos_mutex.c ****         // we are declaring a mutex, which's owner has a lower(numerically bigger) priority.
 150:..//kernel/core/tos_mutex.c ****         // make owner the same priority with us.
 151:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(mutex->owner, k_curr_task->prio);
 152:..//kernel/core/tos_mutex.c ****     }
 153:..//kernel/core/tos_mutex.c **** 
 154:..//kernel/core/tos_mutex.c ****     pend_task_block(k_curr_task, &mutex->pend_obj, timeout);
 155:..//kernel/core/tos_mutex.c **** 
 156:..//kernel/core/tos_mutex.c ****     TOS_CPU_INT_ENABLE();
 157:..//kernel/core/tos_mutex.c ****     knl_sched();
 158:..//kernel/core/tos_mutex.c **** 
 159:..//kernel/core/tos_mutex.c ****     return pend_state2errno(k_curr_task->pend_state);
 160:..//kernel/core/tos_mutex.c **** }
 502              		.loc 1 160 1 view .LVU156
 503 0024 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 504              	.LVL49:
 505              	.L34:
 120:..//kernel/core/tos_mutex.c ****     if (mutex->pend_nesting == (k_nesting_t)0u) { // first come
 506              		.loc 1 120 5 is_stmt 1 view .LVU157
 120:..//kernel/core/tos_mutex.c ****     if (mutex->pend_nesting == (k_nesting_t)0u) { // first come
 507              		.loc 1 120 5 view .LVU158
 508 0028 FFF7FEFF 		bl	tos_cpu_cpsr_save
 509              	.LVL50:
 510 002c 0546     		mov	r5, r0
 511              	.LVL51:
 121:..//kernel/core/tos_mutex.c ****         mutex_fresh_owner_mark(mutex, k_curr_task);
 512              		.loc 1 121 5 view .LVU159
 121:..//kernel/core/tos_mutex.c ****         mutex_fresh_owner_mark(mutex, k_curr_task);
 513              		.loc 1 121 14 is_stmt 0 view .LVU160
 514 002e 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 121:..//kernel/core/tos_mutex.c ****         mutex_fresh_owner_mark(mutex, k_curr_task);
 515              		.loc 1 121 8 view .LVU161
 516 0030 73B1     		cbz	r3, .L35
 127:..//kernel/core/tos_mutex.c ****         if (mutex->pend_nesting == (k_nesting_t)-1) {
 517              		.loc 1 127 5 is_stmt 1 view .LVU162
 127:..//kernel/core/tos_mutex.c ****         if (mutex->pend_nesting == (k_nesting_t)-1) {
 518              		.loc 1 127 9 is_stmt 0 view .LVU163
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 20


 519 0032 2069     		ldr	r0, [r4, #16]
 520              	.LVL52:
 127:..//kernel/core/tos_mutex.c ****         if (mutex->pend_nesting == (k_nesting_t)-1) {
 521              		.loc 1 127 9 view .LVU164
 522 0034 FFF7FEFF 		bl	knl_is_self
 523              	.LVL53:
 127:..//kernel/core/tos_mutex.c ****         if (mutex->pend_nesting == (k_nesting_t)-1) {
 524              		.loc 1 127 8 view .LVU165
 525 0038 30B3     		cbz	r0, .L25
 128:..//kernel/core/tos_mutex.c ****             TOS_CPU_INT_ENABLE();
 526              		.loc 1 128 9 is_stmt 1 view .LVU166
 128:..//kernel/core/tos_mutex.c ****             TOS_CPU_INT_ENABLE();
 527              		.loc 1 128 18 is_stmt 0 view .LVU167
 528 003a 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 128:..//kernel/core/tos_mutex.c ****             TOS_CPU_INT_ENABLE();
 529              		.loc 1 128 12 view .LVU168
 530 003c FF2B     		cmp	r3, #255
 531 003e 1DD0     		beq	.L36
 132:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 532              		.loc 1 132 9 is_stmt 1 view .LVU169
 533 0040 0133     		adds	r3, r3, #1
 534 0042 2373     		strb	r3, [r4, #12]
 133:..//kernel/core/tos_mutex.c ****         return K_ERR_MUTEX_NESTING;
 535              		.loc 1 133 9 view .LVU170
 133:..//kernel/core/tos_mutex.c ****         return K_ERR_MUTEX_NESTING;
 536              		.loc 1 133 9 view .LVU171
 537 0044 2846     		mov	r0, r5
 538 0046 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 539              	.LVL54:
 134:..//kernel/core/tos_mutex.c ****     }
 540              		.loc 1 134 9 view .LVU172
 134:..//kernel/core/tos_mutex.c ****     }
 541              		.loc 1 134 16 is_stmt 0 view .LVU173
 542 004a 40F2E930 		movw	r0, #1001
 543 004e E9E7     		b	.L23
 544              	.LVL55:
 545              	.L35:
 122:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 546              		.loc 1 122 9 is_stmt 1 view .LVU174
 547 0050 2A4B     		ldr	r3, .L40
 548 0052 1B68     		ldr	r3, [r3]
 549              	.LVL56:
 550              	.LBB76:
 551              	.LBI76:
  42:..//kernel/core/tos_mutex.c **** {
 552              		.loc 1 42 24 view .LVU175
 553              	.LBB77:
  44:..//kernel/core/tos_mutex.c ****     mutex->owner_orig_prio  = task->prio;
 554              		.loc 1 44 5 view .LVU176
  44:..//kernel/core/tos_mutex.c ****     mutex->owner_orig_prio  = task->prio;
 555              		.loc 1 44 29 is_stmt 0 view .LVU177
 556 0054 2361     		str	r3, [r4, #16]
  45:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting     = (k_nesting_t)1u;
 557              		.loc 1 45 5 is_stmt 1 view .LVU178
  45:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting     = (k_nesting_t)1u;
 558              		.loc 1 45 35 is_stmt 0 view .LVU179
 559 0056 93F82120 		ldrb	r2, [r3, #33]	@ zero_extendqisi2
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 21


  45:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting     = (k_nesting_t)1u;
 560              		.loc 1 45 29 view .LVU180
 561 005a 2275     		strb	r2, [r4, #20]
  46:..//kernel/core/tos_mutex.c **** 
 562              		.loc 1 46 5 is_stmt 1 view .LVU181
  46:..//kernel/core/tos_mutex.c **** 
 563              		.loc 1 46 29 is_stmt 0 view .LVU182
 564 005c 0122     		movs	r2, #1
 565 005e 2273     		strb	r2, [r4, #12]
  48:..//kernel/core/tos_mutex.c **** }
 566              		.loc 1 48 5 is_stmt 1 view .LVU183
 567 0060 04F11802 		add	r2, r4, #24
 568 0064 03F15800 		add	r0, r3, #88
 569              	.LVL57:
 570              	.LBB78:
 571              	.LBI78:
 105:..//kernel/core/include/tos_list.h **** {
 572              		.loc 2 105 32 view .LVU184
 573              	.LBB79:
 107:..//kernel/core/include/tos_list.h **** }
 574              		.loc 2 107 5 view .LVU185
 107:..//kernel/core/include/tos_list.h **** }
 575              		.loc 2 107 31 is_stmt 0 view .LVU186
 576 0068 996D     		ldr	r1, [r3, #88]
 577              	.LVL58:
 578              	.LBB80:
 579              	.LBI80:
  80:..//kernel/core/include/tos_list.h **** {
 580              		.loc 2 80 24 is_stmt 1 view .LVU187
 581              	.LBB81:
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 582              		.loc 2 82 5 view .LVU188
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 583              		.loc 2 82 16 is_stmt 0 view .LVU189
 584 006a 4A60     		str	r2, [r1, #4]
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 585              		.loc 2 83 5 is_stmt 1 view .LVU190
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 586              		.loc 2 83 16 is_stmt 0 view .LVU191
 587 006c A161     		str	r1, [r4, #24]
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 588              		.loc 2 84 5 is_stmt 1 view .LVU192
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 589              		.loc 2 84 16 is_stmt 0 view .LVU193
 590 006e E061     		str	r0, [r4, #28]
  85:..//kernel/core/include/tos_list.h **** }
 591              		.loc 2 85 5 is_stmt 1 view .LVU194
  85:..//kernel/core/include/tos_list.h **** }
 592              		.loc 2 85 16 is_stmt 0 view .LVU195
 593 0070 9A65     		str	r2, [r3, #88]
 594              	.LVL59:
  85:..//kernel/core/include/tos_list.h **** }
 595              		.loc 2 85 16 view .LVU196
 596              	.LBE81:
 597              	.LBE80:
 598              	.LBE79:
 599              	.LBE78:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 22


 600              	.LBE77:
 601              	.LBE76:
 123:..//kernel/core/tos_mutex.c ****         return K_ERR_NONE;
 602              		.loc 1 123 9 is_stmt 1 view .LVU197
 123:..//kernel/core/tos_mutex.c ****         return K_ERR_NONE;
 603              		.loc 1 123 9 view .LVU198
 604 0072 2846     		mov	r0, r5
 605 0074 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 606              	.LVL60:
 124:..//kernel/core/tos_mutex.c ****     }
 607              		.loc 1 124 9 view .LVU199
 124:..//kernel/core/tos_mutex.c ****     }
 608              		.loc 1 124 16 is_stmt 0 view .LVU200
 609 0078 0020     		movs	r0, #0
 610 007a D3E7     		b	.L23
 611              	.L36:
 129:..//kernel/core/tos_mutex.c ****             return K_ERR_MUTEX_NESTING_OVERFLOW;
 612              		.loc 1 129 13 is_stmt 1 view .LVU201
 129:..//kernel/core/tos_mutex.c ****             return K_ERR_MUTEX_NESTING_OVERFLOW;
 613              		.loc 1 129 13 view .LVU202
 614 007c 2846     		mov	r0, r5
 615 007e FFF7FEFF 		bl	tos_cpu_cpsr_restore
 616              	.LVL61:
 130:..//kernel/core/tos_mutex.c ****         }
 617              		.loc 1 130 13 view .LVU203
 130:..//kernel/core/tos_mutex.c ****         }
 618              		.loc 1 130 20 is_stmt 0 view .LVU204
 619 0082 40F2EA30 		movw	r0, #1002
 620 0086 CDE7     		b	.L23
 621              	.L25:
 137:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 622              		.loc 1 137 5 is_stmt 1 view .LVU205
 137:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 623              		.loc 1 137 8 is_stmt 0 view .LVU206
 624 0088 56EA0703 		orrs	r3, r6, r7
 625 008c 20D0     		beq	.L37
 142:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 626              		.loc 1 142 5 is_stmt 1 view .LVU207
 142:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 627              		.loc 1 142 9 is_stmt 0 view .LVU208
 628 008e FFF7FEFF 		bl	knl_is_sched_locked
 629              	.LVL62:
 142:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 630              		.loc 1 142 8 view .LVU209
 631 0092 18BB     		cbnz	r0, .L38
 147:..//kernel/core/tos_mutex.c ****         // PRIORITY INVERSION:
 632              		.loc 1 147 5 is_stmt 1 view .LVU210
 147:..//kernel/core/tos_mutex.c ****         // PRIORITY INVERSION:
 633              		.loc 1 147 14 is_stmt 0 view .LVU211
 634 0094 2069     		ldr	r0, [r4, #16]
 147:..//kernel/core/tos_mutex.c ****         // PRIORITY INVERSION:
 635              		.loc 1 147 21 view .LVU212
 636 0096 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 147:..//kernel/core/tos_mutex.c ****         // PRIORITY INVERSION:
 637              		.loc 1 147 41 view .LVU213
 638 009a 184A     		ldr	r2, .L40
 639 009c 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 23


 640 009e 92F82110 		ldrb	r1, [r2, #33]	@ zero_extendqisi2
 147:..//kernel/core/tos_mutex.c ****         // PRIORITY INVERSION:
 641              		.loc 1 147 8 view .LVU214
 642 00a2 8B42     		cmp	r3, r1
 643 00a4 20D8     		bhi	.L39
 644              	.L29:
 154:..//kernel/core/tos_mutex.c **** 
 645              		.loc 1 154 5 is_stmt 1 view .LVU215
 646 00a6 DFF85480 		ldr	r8, .L40
 647 00aa 3246     		mov	r2, r6
 648 00ac 3B46     		mov	r3, r7
 649 00ae 211D     		adds	r1, r4, #4
 650 00b0 D8F80000 		ldr	r0, [r8]
 651 00b4 FFF7FEFF 		bl	pend_task_block
 652              	.LVL63:
 156:..//kernel/core/tos_mutex.c ****     knl_sched();
 653              		.loc 1 156 5 view .LVU216
 156:..//kernel/core/tos_mutex.c ****     knl_sched();
 654              		.loc 1 156 5 view .LVU217
 655 00b8 2846     		mov	r0, r5
 656 00ba FFF7FEFF 		bl	tos_cpu_cpsr_restore
 657              	.LVL64:
 157:..//kernel/core/tos_mutex.c **** 
 658              		.loc 1 157 5 view .LVU218
 659 00be FFF7FEFF 		bl	knl_sched
 660              	.LVL65:
 159:..//kernel/core/tos_mutex.c **** }
 661              		.loc 1 159 5 view .LVU219
 159:..//kernel/core/tos_mutex.c **** }
 662              		.loc 1 159 40 is_stmt 0 view .LVU220
 663 00c2 D8F80030 		ldr	r3, [r8]
 159:..//kernel/core/tos_mutex.c **** }
 664              		.loc 1 159 12 view .LVU221
 665 00c6 93F86800 		ldrb	r0, [r3, #104]	@ zero_extendqisi2
 666 00ca FFF7FEFF 		bl	pend_state2errno
 667              	.LVL66:
 668 00ce A9E7     		b	.L23
 669              	.L37:
 138:..//kernel/core/tos_mutex.c ****         return K_ERR_PEND_NOWAIT;
 670              		.loc 1 138 9 is_stmt 1 view .LVU222
 138:..//kernel/core/tos_mutex.c ****         return K_ERR_PEND_NOWAIT;
 671              		.loc 1 138 9 view .LVU223
 672 00d0 2846     		mov	r0, r5
 673 00d2 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 674              	.LVL67:
 139:..//kernel/core/tos_mutex.c ****     }
 675              		.loc 1 139 9 view .LVU224
 139:..//kernel/core/tos_mutex.c ****     }
 676              		.loc 1 139 16 is_stmt 0 view .LVU225
 677 00d6 4FF49660 		mov	r0, #1200
 678 00da A3E7     		b	.L23
 679              	.L38:
 143:..//kernel/core/tos_mutex.c ****         return K_ERR_PEND_SCHED_LOCKED;
 680              		.loc 1 143 9 is_stmt 1 view .LVU226
 143:..//kernel/core/tos_mutex.c ****         return K_ERR_PEND_SCHED_LOCKED;
 681              		.loc 1 143 9 view .LVU227
 682 00dc 2846     		mov	r0, r5
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 24


 683 00de FFF7FEFF 		bl	tos_cpu_cpsr_restore
 684              	.LVL68:
 144:..//kernel/core/tos_mutex.c ****     }
 685              		.loc 1 144 9 view .LVU228
 144:..//kernel/core/tos_mutex.c ****     }
 686              		.loc 1 144 16 is_stmt 0 view .LVU229
 687 00e2 40F2B140 		movw	r0, #1201
 688 00e6 9DE7     		b	.L23
 689              	.L39:
 151:..//kernel/core/tos_mutex.c ****     }
 690              		.loc 1 151 9 is_stmt 1 view .LVU230
 691 00e8 FFF7FEFF 		bl	tos_task_prio_change
 692              	.LVL69:
 693 00ec DBE7     		b	.L29
 694              	.LVL70:
 695              	.L30:
 116:..//kernel/core/tos_mutex.c ****     TOS_PTR_SANITY_CHECK(mutex);
 696              		.loc 1 116 5 is_stmt 0 view .LVU231
 697 00ee 4FF4C870 		mov	r0, #400
 698 00f2 97E7     		b	.L23
 699              	.L31:
 117:..//kernel/core/tos_mutex.c ****     TOS_OBJ_VERIFY(mutex, KNL_OBJ_TYPE_MUTEX);
 700              		.loc 1 117 5 view .LVU232
 701 00f4 40F24C40 		movw	r0, #1100
 702 00f8 94E7     		b	.L23
 703              	.L41:
 704 00fa 00BF     		.align	2
 705              	.L40:
 706 00fc 00000000 		.word	k_curr_task
 707              		.cfi_endproc
 708              	.LFE116:
 710              		.section	.text.tos_mutex_pend,"ax",%progbits
 711              		.align	1
 712              		.global	tos_mutex_pend
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 716              		.fpu softvfp
 718              	tos_mutex_pend:
 719              	.LVL71:
 720              	.LFB117:
 161:..//kernel/core/tos_mutex.c **** 
 162:..//kernel/core/tos_mutex.c **** __API__ k_err_t tos_mutex_pend(k_mutex_t *mutex)
 163:..//kernel/core/tos_mutex.c **** {
 721              		.loc 1 163 1 is_stmt 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              		.loc 1 163 1 is_stmt 0 view .LVU234
 726 0000 08B5     		push	{r3, lr}
 727              	.LCFI4:
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 3, -8
 730              		.cfi_offset 14, -4
 164:..//kernel/core/tos_mutex.c ****     return tos_mutex_pend_timed(mutex, TOS_TIME_FOREVER);
 731              		.loc 1 164 5 is_stmt 1 view .LVU235
 732              		.loc 1 164 12 is_stmt 0 view .LVU236
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 25


 733 0002 4FF0FF32 		mov	r2, #-1
 734 0006 4FF0FF33 		mov	r3, #-1
 735 000a FFF7FEFF 		bl	tos_mutex_pend_timed
 736              	.LVL72:
 165:..//kernel/core/tos_mutex.c **** }
 737              		.loc 1 165 1 view .LVU237
 738 000e 08BD     		pop	{r3, pc}
 739              		.cfi_endproc
 740              	.LFE117:
 742              		.section	.text.tos_mutex_post,"ax",%progbits
 743              		.align	1
 744              		.global	tos_mutex_post
 745              		.syntax unified
 746              		.thumb
 747              		.thumb_func
 748              		.fpu softvfp
 750              	tos_mutex_post:
 751              	.LVL73:
 752              	.LFB118:
 166:..//kernel/core/tos_mutex.c **** 
 167:..//kernel/core/tos_mutex.c **** __API__ k_err_t tos_mutex_post(k_mutex_t *mutex)
 168:..//kernel/core/tos_mutex.c **** {
 753              		.loc 1 168 1 is_stmt 1 view -0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757              		.loc 1 168 1 is_stmt 0 view .LVU239
 758 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 759              	.LCFI5:
 760              		.cfi_def_cfa_offset 24
 761              		.cfi_offset 3, -24
 762              		.cfi_offset 4, -20
 763              		.cfi_offset 5, -16
 764              		.cfi_offset 6, -12
 765              		.cfi_offset 7, -8
 766              		.cfi_offset 14, -4
 767 0002 0446     		mov	r4, r0
 169:..//kernel/core/tos_mutex.c ****     TOS_CPU_CPSR_ALLOC();
 768              		.loc 1 169 5 is_stmt 1 view .LVU240
 769              	.LVL74:
 170:..//kernel/core/tos_mutex.c ****     k_task_t *pending_task;
 770              		.loc 1 170 5 view .LVU241
 171:..//kernel/core/tos_mutex.c **** 
 172:..//kernel/core/tos_mutex.c ****     TOS_IN_IRQ_CHECK();
 771              		.loc 1 172 5 view .LVU242
 772              		.loc 1 172 5 view .LVU243
 773 0004 FFF7FEFF 		bl	knl_is_inirq
 774              	.LVL75:
 775              		.loc 1 172 5 is_stmt 0 view .LVU244
 776 0008 0028     		cmp	r0, #0
 777 000a 72D1     		bne	.L52
 173:..//kernel/core/tos_mutex.c ****     TOS_PTR_SANITY_CHECK(mutex);
 778              		.loc 1 173 5 is_stmt 1 view .LVU245
 779              		.loc 1 173 5 view .LVU246
 780 000c 002C     		cmp	r4, #0
 781 000e 73D0     		beq	.L53
 174:..//kernel/core/tos_mutex.c ****     TOS_OBJ_VERIFY(mutex, KNL_OBJ_TYPE_MUTEX);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 26


 782              		.loc 1 174 5 view .LVU247
 783              		.loc 1 174 5 view .LVU248
 784              	.LVL76:
 785              	.LBB98:
 786              	.LBI98:
 182:..//kernel/core/include/tos_sys.h **** {
 787              		.loc 3 182 31 view .LVU249
 788              	.LBB99:
 184:..//kernel/core/include/tos_sys.h **** }
 789              		.loc 3 184 5 view .LVU250
 184:..//kernel/core/include/tos_sys.h **** }
 790              		.loc 3 184 19 is_stmt 0 view .LVU251
 791 0010 6288     		ldrh	r2, [r4, #2]
 792              	.LVL77:
 184:..//kernel/core/include/tos_sys.h **** }
 793              		.loc 3 184 19 view .LVU252
 794              	.LBE99:
 795              	.LBE98:
 796              		.loc 1 174 5 view .LVU253
 797 0012 46F6EE33 		movw	r3, #27630
 798 0016 9A42     		cmp	r2, r3
 799 0018 02D0     		beq	.L56
 800 001a 40F24D40 		movw	r0, #1101
 801              	.LVL78:
 802              	.L45:
 175:..//kernel/core/tos_mutex.c **** 
 176:..//kernel/core/tos_mutex.c ****     TOS_CPU_INT_DISABLE();
 177:..//kernel/core/tos_mutex.c ****     if (!knl_is_self(mutex->owner)) {
 178:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 179:..//kernel/core/tos_mutex.c ****         return K_ERR_MUTEX_NOT_OWNER;
 180:..//kernel/core/tos_mutex.c ****     }
 181:..//kernel/core/tos_mutex.c **** 
 182:..//kernel/core/tos_mutex.c ****     --mutex->pend_nesting;
 183:..//kernel/core/tos_mutex.c ****     if (mutex->pend_nesting > (k_nesting_t)0u) {
 184:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 185:..//kernel/core/tos_mutex.c ****         return K_ERR_MUTEX_NESTING;
 186:..//kernel/core/tos_mutex.c ****     }
 187:..//kernel/core/tos_mutex.c **** 
 188:..//kernel/core/tos_mutex.c ****     mutex_old_owner_release(mutex);
 189:..//kernel/core/tos_mutex.c **** 
 190:..//kernel/core/tos_mutex.c ****     if (pend_is_nopending(&mutex->pend_obj)) {
 191:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 192:..//kernel/core/tos_mutex.c ****         return K_ERR_NONE;
 193:..//kernel/core/tos_mutex.c ****     }
 194:..//kernel/core/tos_mutex.c **** 
 195:..//kernel/core/tos_mutex.c ****     /* must do the mutex owner switch right here
 196:..//kernel/core/tos_mutex.c ****        if the pender don't get a chance to schedule, the poster(old owner) may obtain the mutex imm
 197:..//kernel/core/tos_mutex.c ****        but the pender already get ready(already in the critical section).
 198:..//kernel/core/tos_mutex.c ****        we switch the owner right here to avoid the old owner obtain the mutex again
 199:..//kernel/core/tos_mutex.c ****      */
 200:..//kernel/core/tos_mutex.c ****     pending_task = pend_highest_pending_task_get(&mutex->pend_obj);
 201:..//kernel/core/tos_mutex.c ****     mutex_new_owner_mark(mutex, pending_task);
 202:..//kernel/core/tos_mutex.c **** 
 203:..//kernel/core/tos_mutex.c ****     pend_wakeup_one(&mutex->pend_obj, PEND_STATE_POST);
 204:..//kernel/core/tos_mutex.c ****     TOS_CPU_INT_ENABLE();
 205:..//kernel/core/tos_mutex.c ****     knl_sched();
 206:..//kernel/core/tos_mutex.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 27


 207:..//kernel/core/tos_mutex.c ****     return K_ERR_NONE;
 208:..//kernel/core/tos_mutex.c **** }
 803              		.loc 1 208 1 view .LVU254
 804 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 805              	.LVL79:
 806              	.L56:
 176:..//kernel/core/tos_mutex.c ****     if (!knl_is_self(mutex->owner)) {
 807              		.loc 1 176 5 is_stmt 1 view .LVU255
 176:..//kernel/core/tos_mutex.c ****     if (!knl_is_self(mutex->owner)) {
 808              		.loc 1 176 5 view .LVU256
 809 0020 FFF7FEFF 		bl	tos_cpu_cpsr_save
 810              	.LVL80:
 811 0024 0746     		mov	r7, r0
 812              	.LVL81:
 177:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 813              		.loc 1 177 5 view .LVU257
 177:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 814              		.loc 1 177 10 is_stmt 0 view .LVU258
 815 0026 2069     		ldr	r0, [r4, #16]
 816              	.LVL82:
 177:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 817              		.loc 1 177 10 view .LVU259
 818 0028 FFF7FEFF 		bl	knl_is_self
 819              	.LVL83:
 177:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 820              		.loc 1 177 8 view .LVU260
 821 002c D8B1     		cbz	r0, .L57
 182:..//kernel/core/tos_mutex.c ****     if (mutex->pend_nesting > (k_nesting_t)0u) {
 822              		.loc 1 182 5 is_stmt 1 view .LVU261
 182:..//kernel/core/tos_mutex.c ****     if (mutex->pend_nesting > (k_nesting_t)0u) {
 823              		.loc 1 182 12 is_stmt 0 view .LVU262
 824 002e 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 182:..//kernel/core/tos_mutex.c ****     if (mutex->pend_nesting > (k_nesting_t)0u) {
 825              		.loc 1 182 5 view .LVU263
 826 0030 013B     		subs	r3, r3, #1
 827 0032 DBB2     		uxtb	r3, r3
 828 0034 2373     		strb	r3, [r4, #12]
 183:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 829              		.loc 1 183 5 is_stmt 1 view .LVU264
 183:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 830              		.loc 1 183 8 is_stmt 0 view .LVU265
 831 0036 E3B9     		cbnz	r3, .L58
 188:..//kernel/core/tos_mutex.c **** 
 832              		.loc 1 188 5 is_stmt 1 view .LVU266
 833              	.LVL84:
 834              	.LBB100:
 835              	.LBI100:
  22:..//kernel/core/tos_mutex.c **** {
 836              		.loc 1 22 24 view .LVU267
 837              	.LBB101:
  24:..//kernel/core/tos_mutex.c **** 
 838              		.loc 1 24 5 view .LVU268
  26:..//kernel/core/tos_mutex.c **** 
 839              		.loc 1 26 5 view .LVU269
  26:..//kernel/core/tos_mutex.c **** 
 840              		.loc 1 26 11 is_stmt 0 view .LVU270
 841 0038 2569     		ldr	r5, [r4, #16]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 28


 842              	.LVL85:
  28:..//kernel/core/tos_mutex.c ****     mutex->owner        = K_NULL;
 843              		.loc 1 28 5 is_stmt 1 view .LVU271
 844              	.LBB102:
 845              	.LBI102:
 115:..//kernel/core/include/tos_list.h **** {
 846              		.loc 2 115 32 view .LVU272
 847              	.LBB103:
 848              		.loc 2 117 5 view .LVU273
 849              		.loc 2 117 19 is_stmt 0 view .LVU274
 850 003a E369     		ldr	r3, [r4, #28]
 851              		.loc 2 117 31 view .LVU275
 852 003c A269     		ldr	r2, [r4, #24]
 853              	.LVL86:
 854              	.LBB104:
 855              	.LBI104:
  88:..//kernel/core/include/tos_list.h **** {
 856              		.loc 2 88 24 is_stmt 1 view .LVU276
 857              	.LBB105:
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 858              		.loc 2 90 5 view .LVU277
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 859              		.loc 2 90 16 is_stmt 0 view .LVU278
 860 003e 5360     		str	r3, [r2, #4]
  91:..//kernel/core/include/tos_list.h **** }
 861              		.loc 2 91 5 is_stmt 1 view .LVU279
  91:..//kernel/core/include/tos_list.h **** }
 862              		.loc 2 91 16 is_stmt 0 view .LVU280
 863 0040 1A60     		str	r2, [r3]
 864              	.LVL87:
  91:..//kernel/core/include/tos_list.h **** }
 865              		.loc 2 91 16 view .LVU281
 866              	.LBE105:
 867              	.LBE104:
 868              	.LBE103:
 869              	.LBE102:
  29:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting = (k_nesting_t)0u;
 870              		.loc 1 29 5 is_stmt 1 view .LVU282
  29:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting = (k_nesting_t)0u;
 871              		.loc 1 29 25 is_stmt 0 view .LVU283
 872 0042 0023     		movs	r3, #0
 873 0044 2361     		str	r3, [r4, #16]
  30:..//kernel/core/tos_mutex.c **** 
 874              		.loc 1 30 5 is_stmt 1 view .LVU284
  30:..//kernel/core/tos_mutex.c **** 
 875              		.loc 1 30 25 is_stmt 0 view .LVU285
 876 0046 2373     		strb	r3, [r4, #12]
  33:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, owner->prio_pending);
 877              		.loc 1 33 5 is_stmt 1 view .LVU286
  33:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, owner->prio_pending);
 878              		.loc 1 33 14 is_stmt 0 view .LVU287
 879 0048 95F86010 		ldrb	r1, [r5, #96]	@ zero_extendqisi2
  33:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, owner->prio_pending);
 880              		.loc 1 33 8 view .LVU288
 881 004c 0829     		cmp	r1, #8
 882 004e 16D1     		bne	.L59
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 29


 883              		.loc 1 36 12 is_stmt 1 view .LVU289
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
 884              		.loc 1 36 21 is_stmt 0 view .LVU290
 885 0050 95F82130 		ldrb	r3, [r5, #33]	@ zero_extendqisi2
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
 886              		.loc 1 36 36 view .LVU291
 887 0054 217D     		ldrb	r1, [r4, #20]	@ zero_extendqisi2
  36:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(owner, mutex->owner_orig_prio);
 888              		.loc 1 36 15 view .LVU292
 889 0056 8B42     		cmp	r3, r1
 890 0058 17D0     		beq	.L49
  37:..//kernel/core/tos_mutex.c ****         mutex->owner_orig_prio = K_TASK_PRIO_INVALID;
 891              		.loc 1 37 9 is_stmt 1 view .LVU293
 892 005a 2846     		mov	r0, r5
 893 005c FFF7FEFF 		bl	tos_task_prio_change
 894              	.LVL88:
  38:..//kernel/core/tos_mutex.c ****     }
 895              		.loc 1 38 9 view .LVU294
  38:..//kernel/core/tos_mutex.c ****     }
 896              		.loc 1 38 32 is_stmt 0 view .LVU295
 897 0060 0823     		movs	r3, #8
 898 0062 2375     		strb	r3, [r4, #20]
 899 0064 11E0     		b	.L49
 900              	.LVL89:
 901              	.L57:
  38:..//kernel/core/tos_mutex.c ****     }
 902              		.loc 1 38 32 view .LVU296
 903              	.LBE101:
 904              	.LBE100:
 178:..//kernel/core/tos_mutex.c ****         return K_ERR_MUTEX_NOT_OWNER;
 905              		.loc 1 178 9 is_stmt 1 view .LVU297
 178:..//kernel/core/tos_mutex.c ****         return K_ERR_MUTEX_NOT_OWNER;
 906              		.loc 1 178 9 view .LVU298
 907 0066 3846     		mov	r0, r7
 908 0068 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 909              	.LVL90:
 179:..//kernel/core/tos_mutex.c ****     }
 910              		.loc 1 179 9 view .LVU299
 179:..//kernel/core/tos_mutex.c ****     }
 911              		.loc 1 179 16 is_stmt 0 view .LVU300
 912 006c 4FF47A70 		mov	r0, #1000
 913 0070 D5E7     		b	.L45
 914              	.L58:
 184:..//kernel/core/tos_mutex.c ****         return K_ERR_MUTEX_NESTING;
 915              		.loc 1 184 9 is_stmt 1 view .LVU301
 184:..//kernel/core/tos_mutex.c ****         return K_ERR_MUTEX_NESTING;
 916              		.loc 1 184 9 view .LVU302
 917 0072 3846     		mov	r0, r7
 918 0074 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 919              	.LVL91:
 185:..//kernel/core/tos_mutex.c ****     }
 920              		.loc 1 185 9 view .LVU303
 185:..//kernel/core/tos_mutex.c ****     }
 921              		.loc 1 185 16 is_stmt 0 view .LVU304
 922 0078 40F2E930 		movw	r0, #1001
 923 007c CFE7     		b	.L45
 924              	.LVL92:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 30


 925              	.L59:
 926              	.LBB107:
 927              	.LBB106:
  34:..//kernel/core/tos_mutex.c ****         owner->prio_pending = K_TASK_PRIO_INVALID;
 928              		.loc 1 34 9 is_stmt 1 view .LVU305
 929 007e 2846     		mov	r0, r5
 930 0080 FFF7FEFF 		bl	tos_task_prio_change
 931              	.LVL93:
  35:..//kernel/core/tos_mutex.c ****     } else if (owner->prio != mutex->owner_orig_prio) {
 932              		.loc 1 35 9 view .LVU306
  35:..//kernel/core/tos_mutex.c ****     } else if (owner->prio != mutex->owner_orig_prio) {
 933              		.loc 1 35 29 is_stmt 0 view .LVU307
 934 0084 0823     		movs	r3, #8
 935 0086 85F86030 		strb	r3, [r5, #96]
 936              	.L49:
 937              	.LVL94:
  35:..//kernel/core/tos_mutex.c ****     } else if (owner->prio != mutex->owner_orig_prio) {
 938              		.loc 1 35 29 view .LVU308
 939              	.LBE106:
 940              	.LBE107:
 190:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 941              		.loc 1 190 5 is_stmt 1 view .LVU309
 190:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 942              		.loc 1 190 9 is_stmt 0 view .LVU310
 943 008a 261D     		adds	r6, r4, #4
 944 008c 3046     		mov	r0, r6
 945 008e FFF7FEFF 		bl	pend_is_nopending
 946              	.LVL95:
 190:..//kernel/core/tos_mutex.c ****         TOS_CPU_INT_ENABLE();
 947              		.loc 1 190 8 view .LVU311
 948 0092 20BB     		cbnz	r0, .L60
 200:..//kernel/core/tos_mutex.c ****     mutex_new_owner_mark(mutex, pending_task);
 949              		.loc 1 200 5 is_stmt 1 view .LVU312
 200:..//kernel/core/tos_mutex.c ****     mutex_new_owner_mark(mutex, pending_task);
 950              		.loc 1 200 20 is_stmt 0 view .LVU313
 951 0094 3046     		mov	r0, r6
 952 0096 FFF7FEFF 		bl	pend_highest_pending_task_get
 953              	.LVL96:
 954 009a 0546     		mov	r5, r0
 955              	.LVL97:
 201:..//kernel/core/tos_mutex.c **** 
 956              		.loc 1 201 5 is_stmt 1 view .LVU314
 957              	.LBB108:
 958              	.LBI108:
  51:..//kernel/core/tos_mutex.c **** {
 959              		.loc 1 51 24 view .LVU315
 960              	.LBB109:
  53:..//kernel/core/tos_mutex.c **** 
 961              		.loc 1 53 5 view .LVU316
  55:..//kernel/core/tos_mutex.c **** 
 962              		.loc 1 55 5 view .LVU317
 963              	.LBB110:
 964              	.LBI110:
  42:..//kernel/core/tos_mutex.c **** {
 965              		.loc 1 42 24 view .LVU318
 966              	.LBB111:
  44:..//kernel/core/tos_mutex.c ****     mutex->owner_orig_prio  = task->prio;
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 31


 967              		.loc 1 44 5 view .LVU319
  44:..//kernel/core/tos_mutex.c ****     mutex->owner_orig_prio  = task->prio;
 968              		.loc 1 44 29 is_stmt 0 view .LVU320
 969 009c 2061     		str	r0, [r4, #16]
  45:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting     = (k_nesting_t)1u;
 970              		.loc 1 45 5 is_stmt 1 view .LVU321
  45:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting     = (k_nesting_t)1u;
 971              		.loc 1 45 35 is_stmt 0 view .LVU322
 972 009e 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
  45:..//kernel/core/tos_mutex.c ****     mutex->pend_nesting     = (k_nesting_t)1u;
 973              		.loc 1 45 29 view .LVU323
 974 00a2 2375     		strb	r3, [r4, #20]
  46:..//kernel/core/tos_mutex.c **** 
 975              		.loc 1 46 5 is_stmt 1 view .LVU324
  46:..//kernel/core/tos_mutex.c **** 
 976              		.loc 1 46 29 is_stmt 0 view .LVU325
 977 00a4 0123     		movs	r3, #1
 978 00a6 2373     		strb	r3, [r4, #12]
  48:..//kernel/core/tos_mutex.c **** }
 979              		.loc 1 48 5 is_stmt 1 view .LVU326
 980 00a8 04F11803 		add	r3, r4, #24
 981 00ac 00F15801 		add	r1, r0, #88
 982              	.LVL98:
 983              	.LBB112:
 984              	.LBI112:
 105:..//kernel/core/include/tos_list.h **** {
 985              		.loc 2 105 32 view .LVU327
 986              	.LBB113:
 107:..//kernel/core/include/tos_list.h **** }
 987              		.loc 2 107 5 view .LVU328
 107:..//kernel/core/include/tos_list.h **** }
 988              		.loc 2 107 31 is_stmt 0 view .LVU329
 989 00b0 826D     		ldr	r2, [r0, #88]
 990              	.LVL99:
 991              	.LBB114:
 992              	.LBI114:
  80:..//kernel/core/include/tos_list.h **** {
 993              		.loc 2 80 24 is_stmt 1 view .LVU330
 994              	.LBB115:
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 995              		.loc 2 82 5 view .LVU331
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 996              		.loc 2 82 16 is_stmt 0 view .LVU332
 997 00b2 5360     		str	r3, [r2, #4]
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 998              		.loc 2 83 5 is_stmt 1 view .LVU333
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 999              		.loc 2 83 16 is_stmt 0 view .LVU334
 1000 00b4 A261     		str	r2, [r4, #24]
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 1001              		.loc 2 84 5 is_stmt 1 view .LVU335
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 1002              		.loc 2 84 16 is_stmt 0 view .LVU336
 1003 00b6 E161     		str	r1, [r4, #28]
  85:..//kernel/core/include/tos_list.h **** }
 1004              		.loc 2 85 5 is_stmt 1 view .LVU337
  85:..//kernel/core/include/tos_list.h **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 32


 1005              		.loc 2 85 16 is_stmt 0 view .LVU338
 1006 00b8 8365     		str	r3, [r0, #88]
 1007              	.LVL100:
  85:..//kernel/core/include/tos_list.h **** }
 1008              		.loc 2 85 16 view .LVU339
 1009              	.LBE115:
 1010              	.LBE114:
 1011              	.LBE113:
 1012              	.LBE112:
 1013              	.LBE111:
 1014              	.LBE110:
  58:..//kernel/core/tos_mutex.c ****     if (task->prio > highest_pending_prio) {
 1015              		.loc 1 58 5 is_stmt 1 view .LVU340
  58:..//kernel/core/tos_mutex.c ****     if (task->prio > highest_pending_prio) {
 1016              		.loc 1 58 28 is_stmt 0 view .LVU341
 1017 00ba 201D     		adds	r0, r4, #4
 1018              	.LVL101:
  58:..//kernel/core/tos_mutex.c ****     if (task->prio > highest_pending_prio) {
 1019              		.loc 1 58 28 view .LVU342
 1020 00bc FFF7FEFF 		bl	pend_highest_pending_prio_get
 1021              	.LVL102:
  59:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(task, highest_pending_prio);
 1022              		.loc 1 59 5 is_stmt 1 view .LVU343
  59:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(task, highest_pending_prio);
 1023              		.loc 1 59 13 is_stmt 0 view .LVU344
 1024 00c0 95F82130 		ldrb	r3, [r5, #33]	@ zero_extendqisi2
  59:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(task, highest_pending_prio);
 1025              		.loc 1 59 8 view .LVU345
 1026 00c4 9842     		cmp	r0, r3
 1027 00c6 0FD3     		bcc	.L61
 1028              	.LVL103:
 1029              	.L51:
  59:..//kernel/core/tos_mutex.c ****         tos_task_prio_change(task, highest_pending_prio);
 1030              		.loc 1 59 8 view .LVU346
 1031              	.LBE109:
 1032              	.LBE108:
 203:..//kernel/core/tos_mutex.c ****     TOS_CPU_INT_ENABLE();
 1033              		.loc 1 203 5 is_stmt 1 view .LVU347
 1034 00c8 0121     		movs	r1, #1
 1035 00ca 3046     		mov	r0, r6
 1036 00cc FFF7FEFF 		bl	pend_wakeup_one
 1037              	.LVL104:
 204:..//kernel/core/tos_mutex.c ****     knl_sched();
 1038              		.loc 1 204 5 view .LVU348
 204:..//kernel/core/tos_mutex.c ****     knl_sched();
 1039              		.loc 1 204 5 view .LVU349
 1040 00d0 3846     		mov	r0, r7
 1041 00d2 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1042              	.LVL105:
 205:..//kernel/core/tos_mutex.c **** 
 1043              		.loc 1 205 5 view .LVU350
 1044 00d6 FFF7FEFF 		bl	knl_sched
 1045              	.LVL106:
 207:..//kernel/core/tos_mutex.c **** }
 1046              		.loc 1 207 5 view .LVU351
 207:..//kernel/core/tos_mutex.c **** }
 1047              		.loc 1 207 12 is_stmt 0 view .LVU352
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 33


 1048 00da 0020     		movs	r0, #0
 1049 00dc 9FE7     		b	.L45
 1050              	.LVL107:
 1051              	.L60:
 191:..//kernel/core/tos_mutex.c ****         return K_ERR_NONE;
 1052              		.loc 1 191 9 is_stmt 1 view .LVU353
 191:..//kernel/core/tos_mutex.c ****         return K_ERR_NONE;
 1053              		.loc 1 191 9 view .LVU354
 1054 00de 3846     		mov	r0, r7
 1055 00e0 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1056              	.LVL108:
 192:..//kernel/core/tos_mutex.c ****     }
 1057              		.loc 1 192 9 view .LVU355
 192:..//kernel/core/tos_mutex.c ****     }
 1058              		.loc 1 192 16 is_stmt 0 view .LVU356
 1059 00e4 0020     		movs	r0, #0
 1060 00e6 9AE7     		b	.L45
 1061              	.LVL109:
 1062              	.L61:
 1063              	.LBB117:
 1064              	.LBB116:
  60:..//kernel/core/tos_mutex.c ****     }
 1065              		.loc 1 60 9 is_stmt 1 view .LVU357
 1066 00e8 0146     		mov	r1, r0
 1067 00ea 2846     		mov	r0, r5
 1068              	.LVL110:
  60:..//kernel/core/tos_mutex.c ****     }
 1069              		.loc 1 60 9 is_stmt 0 view .LVU358
 1070 00ec FFF7FEFF 		bl	tos_task_prio_change
 1071              	.LVL111:
 1072 00f0 EAE7     		b	.L51
 1073              	.LVL112:
 1074              	.L52:
  60:..//kernel/core/tos_mutex.c ****     }
 1075              		.loc 1 60 9 view .LVU359
 1076              	.LBE116:
 1077              	.LBE117:
 172:..//kernel/core/tos_mutex.c ****     TOS_PTR_SANITY_CHECK(mutex);
 1078              		.loc 1 172 5 view .LVU360
 1079 00f2 4FF4C870 		mov	r0, #400
 1080 00f6 92E7     		b	.L45
 1081              	.L53:
 173:..//kernel/core/tos_mutex.c ****     TOS_OBJ_VERIFY(mutex, KNL_OBJ_TYPE_MUTEX);
 1082              		.loc 1 173 5 view .LVU361
 1083 00f8 40F24C40 		movw	r0, #1100
 1084 00fc 8FE7     		b	.L45
 1085              		.cfi_endproc
 1086              	.LFE118:
 1088              		.text
 1089              	.Letext0:
 1090              		.file 4 "..//kernel/core/include/tos_kerr.h"
 1091              		.file 5 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 1092              		.file 6 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 1093              		.file 7 "Drivers/CMSIS/Include/core_cm3.h"
 1094              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1095              		.file 9 "d:\\arm_gcc\\8 2019-q3-update\\lib\\gcc\\arm-none-eabi\\8.3.1\\include\\stddef.h"
 1096              		.file 10 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_types.h"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 34


 1097              		.file 11 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\reent.h"
 1098              		.file 12 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\lock.h"
 1099              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1100              		.file 14 "..//arch/arm/arm-v7m/common/include/tos_cpu_types.h"
 1101              		.file 15 "..//kernel/core/include/tos_ktypes.h"
 1102              		.file 16 "..//kernel/core/include/tos_task.h"
 1103              		.file 17 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\stdlib.h"
 1104              		.file 18 "..//kernel/core/include/tos_pend.h"
 1105              		.file 19 "..//kernel/core/include/tos_mutex.h"
 1106              		.file 20 "..//kernel/core/include/tos_timer.h"
 1107              		.file 21 "..//kernel/core/include/tos_mmheap.h"
 1108              		.file 22 "..//kernel/core/include/tos_sched.h"
 1109              		.file 23 "..//kernel/core/include/tos_global.h"
 1110              		.file 24 "..//arch/arm/arm-v7m/common/include/tos_cpu.h"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 tos_mutex.c
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:16     .text.mutex_release:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:24     .text.mutex_release:00000000 mutex_release
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:141    .text.tos_mutex_create:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:148    .text.tos_mutex_create:00000000 tos_mutex_create
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:234    .text.tos_mutex_destroy:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:241    .text.tos_mutex_destroy:00000000 tos_mutex_destroy
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:441    .text.tos_mutex_pend_timed:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:448    .text.tos_mutex_pend_timed:00000000 tos_mutex_pend_timed
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:706    .text.tos_mutex_pend_timed:000000fc $d
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:711    .text.tos_mutex_pend:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:718    .text.tos_mutex_pend:00000000 tos_mutex_pend
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:743    .text.tos_mutex_post:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc8QvDYf.s:750    .text.tos_mutex_post:00000000 tos_mutex_post

UNDEFINED SYMBOLS
tos_task_prio_change
pend_wakeup_all
knl_is_inirq
pend_object_init
tos_cpu_cpsr_save
pend_object_deinit
tos_cpu_cpsr_restore
knl_sched
knl_is_self
knl_is_sched_locked
pend_task_block
pend_state2errno
k_curr_task
pend_is_nopending
pend_highest_pending_task_get
pend_highest_pending_prio_get
pend_wakeup_one
