ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tos_mmheap.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.blk_set_prev_used,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	blk_set_prev_used:
  24              	.LVL0:
  25              	.LFB123:
  26              		.file 1 "..//kernel/core/tos_mmheap.c"
   1:..//kernel/core/tos_mmheap.c **** /*----------------------------------------------------------------------------
   2:..//kernel/core/tos_mmheap.c ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/tos_mmheap.c ****  * available.
   4:..//kernel/core/tos_mmheap.c ****  *
   5:..//kernel/core/tos_mmheap.c ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/tos_mmheap.c ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/tos_mmheap.c ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/tos_mmheap.c ****  *
   9:..//kernel/core/tos_mmheap.c ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/tos_mmheap.c ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/tos_mmheap.c ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/tos_mmheap.c ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/tos_mmheap.c ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/tos_mmheap.c ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/tos_mmheap.c ****  * within TencentOS.
  16:..//kernel/core/tos_mmheap.c ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/tos_mmheap.c **** 
  18:..//kernel/core/tos_mmheap.c **** /*
  19:..//kernel/core/tos_mmheap.c **** ** Two Level Segregated Fit memory allocator, version 3.1.
  20:..//kernel/core/tos_mmheap.c **** ** Written by Matthew Conte
  21:..//kernel/core/tos_mmheap.c **** **	http://tlsf.baisoku.org
  22:..//kernel/core/tos_mmheap.c **** **
  23:..//kernel/core/tos_mmheap.c **** ** Based on the original documentation by Miguel Masmano:
  24:..//kernel/core/tos_mmheap.c **** **	http://www.gii.upv.es/tlsf/main/docs
  25:..//kernel/core/tos_mmheap.c **** **
  26:..//kernel/core/tos_mmheap.c **** ** This implementation was written to the specification
  27:..//kernel/core/tos_mmheap.c **** ** of the document, therefore no GPL restrictions apply.
  28:..//kernel/core/tos_mmheap.c **** **
  29:..//kernel/core/tos_mmheap.c **** ** Copyright (c) 2006-2016, Matthew Conte
  30:..//kernel/core/tos_mmheap.c **** ** All rights reserved.
  31:..//kernel/core/tos_mmheap.c **** **
  32:..//kernel/core/tos_mmheap.c **** ** Redistribution and use in source and binary forms, with or without
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 2


  33:..//kernel/core/tos_mmheap.c **** ** modification, are permitted provided that the following conditions are met:
  34:..//kernel/core/tos_mmheap.c **** **     * Redistributions of source code must retain the above copyright
  35:..//kernel/core/tos_mmheap.c **** **       notice, this list of conditions and the following disclaimer.
  36:..//kernel/core/tos_mmheap.c **** **     * Redistributions in binary form must reproduce the above copyright
  37:..//kernel/core/tos_mmheap.c **** **       notice, this list of conditions and the following disclaimer in the
  38:..//kernel/core/tos_mmheap.c **** **       documentation and/or other materials provided with the distribution.
  39:..//kernel/core/tos_mmheap.c **** **     * Neither the name of the copyright holder nor the
  40:..//kernel/core/tos_mmheap.c **** **       names of its contributors may be used to endorse or promote products
  41:..//kernel/core/tos_mmheap.c **** **       derived from this software without specific prior written permission.
  42:..//kernel/core/tos_mmheap.c **** **
  43:..//kernel/core/tos_mmheap.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  44:..//kernel/core/tos_mmheap.c **** ** ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  45:..//kernel/core/tos_mmheap.c **** ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  46:..//kernel/core/tos_mmheap.c **** ** DISCLAIMED. IN NO EVENT SHALL MATTHEW CONTE BE LIABLE FOR ANY
  47:..//kernel/core/tos_mmheap.c **** ** DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  48:..//kernel/core/tos_mmheap.c **** ** (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  49:..//kernel/core/tos_mmheap.c **** ** LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  50:..//kernel/core/tos_mmheap.c **** ** ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  51:..//kernel/core/tos_mmheap.c **** ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  52:..//kernel/core/tos_mmheap.c **** ** SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  53:..//kernel/core/tos_mmheap.c **** */
  54:..//kernel/core/tos_mmheap.c **** 
  55:..//kernel/core/tos_mmheap.c **** #include "tos_k.h"
  56:..//kernel/core/tos_mmheap.c **** 
  57:..//kernel/core/tos_mmheap.c **** #if TOS_CFG_MMHEAP_EN > 0u
  58:..//kernel/core/tos_mmheap.c **** 
  59:..//kernel/core/tos_mmheap.c **** #if defined(TOS_CFG_CPU_LEAD_ZEROS_ASM_PRESENT) && (TOS_CFG_CPU_LEAD_ZEROS_ASM_PRESENT == 0u)
  60:..//kernel/core/tos_mmheap.c **** __STATIC__ int generic_fls(uint32_t x)
  61:..//kernel/core/tos_mmheap.c **** {
  62:..//kernel/core/tos_mmheap.c ****     int r = 32;
  63:..//kernel/core/tos_mmheap.c ****     if (!x)
  64:..//kernel/core/tos_mmheap.c ****         return 0;
  65:..//kernel/core/tos_mmheap.c **** 
  66:..//kernel/core/tos_mmheap.c ****     if (!(x & 0xffff0000u)) {
  67:..//kernel/core/tos_mmheap.c ****         x <<= 16;
  68:..//kernel/core/tos_mmheap.c ****         r -= 16;
  69:..//kernel/core/tos_mmheap.c ****     }
  70:..//kernel/core/tos_mmheap.c ****     if (!(x & 0xff000000u)) {
  71:..//kernel/core/tos_mmheap.c ****         x <<= 8;
  72:..//kernel/core/tos_mmheap.c ****         r -= 8;
  73:..//kernel/core/tos_mmheap.c ****     }
  74:..//kernel/core/tos_mmheap.c ****     if (!(x & 0xf0000000u)) {
  75:..//kernel/core/tos_mmheap.c ****         x <<= 4;
  76:..//kernel/core/tos_mmheap.c ****         r -= 4;
  77:..//kernel/core/tos_mmheap.c ****     }
  78:..//kernel/core/tos_mmheap.c ****     if (!(x & 0xc0000000u)) {
  79:..//kernel/core/tos_mmheap.c ****         x <<= 2;
  80:..//kernel/core/tos_mmheap.c ****         r -= 2;
  81:..//kernel/core/tos_mmheap.c ****     }
  82:..//kernel/core/tos_mmheap.c ****     if (!(x & 0x80000000u)) {
  83:..//kernel/core/tos_mmheap.c ****         x <<= 1;
  84:..//kernel/core/tos_mmheap.c ****         r -= 1;
  85:..//kernel/core/tos_mmheap.c ****     }
  86:..//kernel/core/tos_mmheap.c ****     return r;
  87:..//kernel/core/tos_mmheap.c **** }
  88:..//kernel/core/tos_mmheap.c **** #else
  89:..//kernel/core/tos_mmheap.c **** __STATIC__ int generic_fls(uint32_t x)
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 3


  90:..//kernel/core/tos_mmheap.c **** {
  91:..//kernel/core/tos_mmheap.c ****     return 32 - tos_cpu_clz(x);
  92:..//kernel/core/tos_mmheap.c **** }
  93:..//kernel/core/tos_mmheap.c **** #endif
  94:..//kernel/core/tos_mmheap.c **** 
  95:..//kernel/core/tos_mmheap.c **** __STATIC__ int __ffs(uint32_t word)
  96:..//kernel/core/tos_mmheap.c **** {
  97:..//kernel/core/tos_mmheap.c ****     return generic_fls(word & (~word + 1)) - 1;
  98:..//kernel/core/tos_mmheap.c **** }
  99:..//kernel/core/tos_mmheap.c **** 
 100:..//kernel/core/tos_mmheap.c **** __STATIC__ int __fls(uint32_t word)
 101:..//kernel/core/tos_mmheap.c **** {
 102:..//kernel/core/tos_mmheap.c ****     return generic_fls(word) - 1;
 103:..//kernel/core/tos_mmheap.c **** }
 104:..//kernel/core/tos_mmheap.c **** 
 105:..//kernel/core/tos_mmheap.c **** /*
 106:..//kernel/core/tos_mmheap.c **** ** TLSF utility functions. In most cases, these are direct translations of
 107:..//kernel/core/tos_mmheap.c **** ** the documentation found in the white paper.
 108:..//kernel/core/tos_mmheap.c **** */
 109:..//kernel/core/tos_mmheap.c **** __STATIC__ void mapping_insert(size_t size, int *fli, int *sli)
 110:..//kernel/core/tos_mmheap.c **** {
 111:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 112:..//kernel/core/tos_mmheap.c **** 
 113:..//kernel/core/tos_mmheap.c ****     if (size < K_MMHEAP_SMALL_BLOCK_SIZE) {
 114:..//kernel/core/tos_mmheap.c ****         /* Store small blocks in first list. */
 115:..//kernel/core/tos_mmheap.c ****         fl = 0;
 116:..//kernel/core/tos_mmheap.c ****         sl = (int)size / (K_MMHEAP_SMALL_BLOCK_SIZE / K_MMHEAP_SL_INDEX_COUNT);
 117:..//kernel/core/tos_mmheap.c ****     } else {
 118:..//kernel/core/tos_mmheap.c ****         fl = __fls(size);
 119:..//kernel/core/tos_mmheap.c ****         sl = ((int)size >> (fl - K_MMHEAP_SL_INDEX_COUNT_LOG2)) ^ (1 << K_MMHEAP_SL_INDEX_COUNT_LOG
 120:..//kernel/core/tos_mmheap.c ****         fl -= (K_MMHEAP_FL_INDEX_SHIFT - 1);
 121:..//kernel/core/tos_mmheap.c ****     }
 122:..//kernel/core/tos_mmheap.c ****     *fli = fl;
 123:..//kernel/core/tos_mmheap.c ****     *sli = sl;
 124:..//kernel/core/tos_mmheap.c **** }
 125:..//kernel/core/tos_mmheap.c **** 
 126:..//kernel/core/tos_mmheap.c **** /* This version rounds up to the next block size (for allocations) */
 127:..//kernel/core/tos_mmheap.c **** __STATIC__ void mapping_search(size_t size, int *fli, int *sli)
 128:..//kernel/core/tos_mmheap.c **** {
 129:..//kernel/core/tos_mmheap.c ****     size_t round;
 130:..//kernel/core/tos_mmheap.c **** 
 131:..//kernel/core/tos_mmheap.c ****     if (size >= K_MMHEAP_SMALL_BLOCK_SIZE) {
 132:..//kernel/core/tos_mmheap.c ****         round = (1 << (__fls(size) - K_MMHEAP_SL_INDEX_COUNT_LOG2)) - 1;
 133:..//kernel/core/tos_mmheap.c ****         size += round;
 134:..//kernel/core/tos_mmheap.c ****     }
 135:..//kernel/core/tos_mmheap.c ****     mapping_insert(size, fli, sli);
 136:..//kernel/core/tos_mmheap.c **** }
 137:..//kernel/core/tos_mmheap.c **** 
 138:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ size_t blk_size(const mmheap_blk_t *blk)
 139:..//kernel/core/tos_mmheap.c **** {
 140:..//kernel/core/tos_mmheap.c ****     return blk->size & K_MMHEAP_BLOCK_SIZE_MASK;
 141:..//kernel/core/tos_mmheap.c **** }
 142:..//kernel/core/tos_mmheap.c **** 
 143:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ int blk_is_last(const mmheap_blk_t* blk)
 144:..//kernel/core/tos_mmheap.c **** {
 145:..//kernel/core/tos_mmheap.c **** 	return blk_size(blk) == 0;
 146:..//kernel/core/tos_mmheap.c **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 4


 147:..//kernel/core/tos_mmheap.c **** 
 148:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ void blk_set_size(mmheap_blk_t *blk, size_t size)
 149:..//kernel/core/tos_mmheap.c **** {
 150:..//kernel/core/tos_mmheap.c ****     blk->size = size | (blk->size & K_MMHEAP_BLOCK_STATE_MASK);
 151:..//kernel/core/tos_mmheap.c **** }
 152:..//kernel/core/tos_mmheap.c **** 
 153:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ int blk_is_free(const mmheap_blk_t *blk)
 154:..//kernel/core/tos_mmheap.c **** {
 155:..//kernel/core/tos_mmheap.c ****     return blk->size & K_MMHEAP_BLOCK_CURR_FREE;
 156:..//kernel/core/tos_mmheap.c **** }
 157:..//kernel/core/tos_mmheap.c **** 
 158:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ void blk_set_free(mmheap_blk_t *blk)
 159:..//kernel/core/tos_mmheap.c **** {
 160:..//kernel/core/tos_mmheap.c ****     blk->size |= K_MMHEAP_BLOCK_CURR_FREE;
 161:..//kernel/core/tos_mmheap.c **** }
 162:..//kernel/core/tos_mmheap.c **** 
 163:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ void blk_set_used(mmheap_blk_t *blk)
 164:..//kernel/core/tos_mmheap.c **** {
 165:..//kernel/core/tos_mmheap.c ****     blk->size &= ~K_MMHEAP_BLOCK_CURR_FREE;
 166:..//kernel/core/tos_mmheap.c **** }
 167:..//kernel/core/tos_mmheap.c **** 
 168:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ int blk_is_prev_free(const mmheap_blk_t *blk)
 169:..//kernel/core/tos_mmheap.c **** {
 170:..//kernel/core/tos_mmheap.c ****     return blk->size & K_MMHEAP_BLOCK_PREV_FREE;
 171:..//kernel/core/tos_mmheap.c **** }
 172:..//kernel/core/tos_mmheap.c **** 
 173:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ void blk_set_prev_free(mmheap_blk_t *blk)
 174:..//kernel/core/tos_mmheap.c **** {
 175:..//kernel/core/tos_mmheap.c ****     blk->size |= K_MMHEAP_BLOCK_PREV_FREE;
 176:..//kernel/core/tos_mmheap.c **** }
 177:..//kernel/core/tos_mmheap.c **** 
 178:..//kernel/core/tos_mmheap.c **** __STATIC__ void blk_set_prev_used(mmheap_blk_t *blk)
 179:..//kernel/core/tos_mmheap.c **** {
  27              		.loc 1 179 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 180:..//kernel/core/tos_mmheap.c ****     blk->size &= ~K_MMHEAP_BLOCK_PREV_FREE;
  32              		.loc 1 180 5 view .LVU1
  33              		.loc 1 180 15 is_stmt 0 view .LVU2
  34 0000 4368     		ldr	r3, [r0, #4]
  35 0002 23F00203 		bic	r3, r3, #2
  36 0006 4360     		str	r3, [r0, #4]
 181:..//kernel/core/tos_mmheap.c **** }
  37              		.loc 1 181 1 view .LVU3
  38 0008 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE123:
  42              		.section	.text.blk_next,"ax",%progbits
  43              		.align	1
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu softvfp
  49              	blk_next:
  50              	.LVL1:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 5


  51              	.LFB128:
 182:..//kernel/core/tos_mmheap.c **** 
 183:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ mmheap_blk_t *blk_from_ptr(const void *ptr)
 184:..//kernel/core/tos_mmheap.c **** {
 185:..//kernel/core/tos_mmheap.c ****     return (mmheap_blk_t *)((cpu_addr_t)ptr - K_MMHEAP_BLK_START_OFFSET);
 186:..//kernel/core/tos_mmheap.c **** }
 187:..//kernel/core/tos_mmheap.c **** 
 188:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ void *blk_to_ptr(const mmheap_blk_t *blk)
 189:..//kernel/core/tos_mmheap.c **** {
 190:..//kernel/core/tos_mmheap.c ****     return (void *)((cpu_addr_t)blk + K_MMHEAP_BLK_START_OFFSET);
 191:..//kernel/core/tos_mmheap.c **** }
 192:..//kernel/core/tos_mmheap.c **** 
 193:..//kernel/core/tos_mmheap.c **** /* Return location of next block after block of given size. */
 194:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ mmheap_blk_t *offset_to_blk(const void *ptr, int diff)
 195:..//kernel/core/tos_mmheap.c **** {
 196:..//kernel/core/tos_mmheap.c ****     return (mmheap_blk_t *)((cpu_addr_t)ptr + diff);
 197:..//kernel/core/tos_mmheap.c **** }
 198:..//kernel/core/tos_mmheap.c **** 
 199:..//kernel/core/tos_mmheap.c **** /* Return location of previous block. */
 200:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ mmheap_blk_t *blk_prev(const mmheap_blk_t *blk)
 201:..//kernel/core/tos_mmheap.c **** {
 202:..//kernel/core/tos_mmheap.c ****     return blk->prev_phys_blk;
 203:..//kernel/core/tos_mmheap.c **** }
 204:..//kernel/core/tos_mmheap.c **** 
 205:..//kernel/core/tos_mmheap.c **** /* Return location of next existing block. */
 206:..//kernel/core/tos_mmheap.c **** __STATIC__ mmheap_blk_t *blk_next(const mmheap_blk_t *blk)
 207:..//kernel/core/tos_mmheap.c **** {
  52              		.loc 1 207 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
 208:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *next_blk;
  57              		.loc 1 208 5 view .LVU5
 209:..//kernel/core/tos_mmheap.c **** 
 210:..//kernel/core/tos_mmheap.c ****     next_blk = offset_to_blk(blk_to_ptr(blk), blk_size(blk) - K_MMHEAP_BLK_HEADER_OVERHEAD);
  58              		.loc 1 210 5 view .LVU6
  59              	.LBB98:
  60              	.LBI98:
 188:..//kernel/core/tos_mmheap.c **** {
  61              		.loc 1 188 25 view .LVU7
  62              	.LBB99:
 190:..//kernel/core/tos_mmheap.c **** }
  63              		.loc 1 190 5 view .LVU8
 190:..//kernel/core/tos_mmheap.c **** }
  64              		.loc 1 190 37 is_stmt 0 view .LVU9
  65 0000 00F10802 		add	r2, r0, #8
  66              	.LVL2:
 190:..//kernel/core/tos_mmheap.c **** }
  67              		.loc 1 190 37 view .LVU10
  68              	.LBE99:
  69              	.LBE98:
  70              	.LBB100:
  71              	.LBI100:
 138:..//kernel/core/tos_mmheap.c **** {
  72              		.loc 1 138 26 is_stmt 1 view .LVU11
  73              	.LBB101:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 6


 140:..//kernel/core/tos_mmheap.c **** }
  74              		.loc 1 140 5 view .LVU12
 140:..//kernel/core/tos_mmheap.c **** }
  75              		.loc 1 140 15 is_stmt 0 view .LVU13
  76 0004 4368     		ldr	r3, [r0, #4]
 140:..//kernel/core/tos_mmheap.c **** }
  77              		.loc 1 140 22 view .LVU14
  78 0006 23F00303 		bic	r3, r3, #3
  79              	.LVL3:
 140:..//kernel/core/tos_mmheap.c **** }
  80              		.loc 1 140 22 view .LVU15
  81              	.LBE101:
  82              	.LBE100:
  83              		.loc 1 210 61 view .LVU16
  84 000a 043B     		subs	r3, r3, #4
  85              	.LVL4:
  86              	.LBB102:
  87              	.LBI102:
 194:..//kernel/core/tos_mmheap.c **** {
  88              		.loc 1 194 33 is_stmt 1 view .LVU17
  89              	.LBB103:
 196:..//kernel/core/tos_mmheap.c **** }
  90              		.loc 1 196 5 view .LVU18
 196:..//kernel/core/tos_mmheap.c **** }
  91              		.loc 1 196 5 is_stmt 0 view .LVU19
  92              	.LBE103:
  93              	.LBE102:
 211:..//kernel/core/tos_mmheap.c ****     return next_blk;
  94              		.loc 1 211 5 is_stmt 1 view .LVU20
 212:..//kernel/core/tos_mmheap.c **** }
  95              		.loc 1 212 1 is_stmt 0 view .LVU21
  96 000c D018     		adds	r0, r2, r3
  97              	.LVL5:
  98              		.loc 1 212 1 view .LVU22
  99 000e 7047     		bx	lr
 100              		.cfi_endproc
 101              	.LFE128:
 103              		.section	.text.blk_link_next,"ax",%progbits
 104              		.align	1
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu softvfp
 110              	blk_link_next:
 111              	.LVL6:
 112              	.LFB129:
 213:..//kernel/core/tos_mmheap.c **** 
 214:..//kernel/core/tos_mmheap.c **** /* Link a new block with its physical neighbor, return the neighbor. */
 215:..//kernel/core/tos_mmheap.c **** __STATIC__ mmheap_blk_t *blk_link_next(mmheap_blk_t *blk)
 216:..//kernel/core/tos_mmheap.c **** {
 113              		.loc 1 216 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		.loc 1 216 1 is_stmt 0 view .LVU24
 118 0000 10B5     		push	{r4, lr}
 119              	.LCFI0:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 7


 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
 123 0002 0446     		mov	r4, r0
 217:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *next_blk;
 124              		.loc 1 217 5 is_stmt 1 view .LVU25
 218:..//kernel/core/tos_mmheap.c **** 
 219:..//kernel/core/tos_mmheap.c ****     next_blk = blk_next(blk);
 125              		.loc 1 219 5 view .LVU26
 126              		.loc 1 219 16 is_stmt 0 view .LVU27
 127 0004 FFF7FEFF 		bl	blk_next
 128              	.LVL7:
 220:..//kernel/core/tos_mmheap.c ****     next_blk->prev_phys_blk = blk;
 129              		.loc 1 220 5 is_stmt 1 view .LVU28
 130              		.loc 1 220 29 is_stmt 0 view .LVU29
 131 0008 0460     		str	r4, [r0]
 221:..//kernel/core/tos_mmheap.c ****     return next_blk;
 132              		.loc 1 221 5 is_stmt 1 view .LVU30
 222:..//kernel/core/tos_mmheap.c **** }
 133              		.loc 1 222 1 is_stmt 0 view .LVU31
 134 000a 10BD     		pop	{r4, pc}
 135              		.loc 1 222 1 view .LVU32
 136              		.cfi_endproc
 137              	.LFE129:
 139              		.section	.text.blk_mark_as_free,"ax",%progbits
 140              		.align	1
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu softvfp
 146              	blk_mark_as_free:
 147              	.LVL8:
 148              	.LFB130:
 223:..//kernel/core/tos_mmheap.c **** 
 224:..//kernel/core/tos_mmheap.c **** __STATIC__ void blk_mark_as_free(mmheap_blk_t *blk)
 225:..//kernel/core/tos_mmheap.c **** {
 149              		.loc 1 225 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		.loc 1 225 1 is_stmt 0 view .LVU34
 154 0000 10B5     		push	{r4, lr}
 155              	.LCFI1:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 4, -8
 158              		.cfi_offset 14, -4
 159 0002 0446     		mov	r4, r0
 226:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *next_blk;
 160              		.loc 1 226 5 is_stmt 1 view .LVU35
 227:..//kernel/core/tos_mmheap.c **** 
 228:..//kernel/core/tos_mmheap.c ****     /* Link the block to the next block, first. */
 229:..//kernel/core/tos_mmheap.c ****     next_blk = blk_link_next(blk);
 161              		.loc 1 229 5 view .LVU36
 162              		.loc 1 229 16 is_stmt 0 view .LVU37
 163 0004 FFF7FEFF 		bl	blk_link_next
 164              	.LVL9:
 230:..//kernel/core/tos_mmheap.c ****     blk_set_prev_free(next_blk);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 8


 165              		.loc 1 230 5 is_stmt 1 view .LVU38
 166              	.LBB104:
 167              	.LBI104:
 173:..//kernel/core/tos_mmheap.c **** {
 168              		.loc 1 173 24 view .LVU39
 169              	.LBB105:
 175:..//kernel/core/tos_mmheap.c **** }
 170              		.loc 1 175 5 view .LVU40
 175:..//kernel/core/tos_mmheap.c **** }
 171              		.loc 1 175 15 is_stmt 0 view .LVU41
 172 0008 4368     		ldr	r3, [r0, #4]
 173 000a 43F00203 		orr	r3, r3, #2
 174 000e 4360     		str	r3, [r0, #4]
 175              	.LVL10:
 175:..//kernel/core/tos_mmheap.c **** }
 176              		.loc 1 175 15 view .LVU42
 177              	.LBE105:
 178              	.LBE104:
 231:..//kernel/core/tos_mmheap.c ****     blk_set_free(blk);
 179              		.loc 1 231 5 is_stmt 1 view .LVU43
 180              	.LBB106:
 181              	.LBI106:
 158:..//kernel/core/tos_mmheap.c **** {
 182              		.loc 1 158 24 view .LVU44
 183              	.LBB107:
 160:..//kernel/core/tos_mmheap.c **** }
 184              		.loc 1 160 5 view .LVU45
 160:..//kernel/core/tos_mmheap.c **** }
 185              		.loc 1 160 15 is_stmt 0 view .LVU46
 186 0010 6368     		ldr	r3, [r4, #4]
 187 0012 43F00103 		orr	r3, r3, #1
 188 0016 6360     		str	r3, [r4, #4]
 189              	.LVL11:
 160:..//kernel/core/tos_mmheap.c **** }
 190              		.loc 1 160 15 view .LVU47
 191              	.LBE107:
 192              	.LBE106:
 232:..//kernel/core/tos_mmheap.c **** }
 193              		.loc 1 232 1 view .LVU48
 194 0018 10BD     		pop	{r4, pc}
 195              		.loc 1 232 1 view .LVU49
 196              		.cfi_endproc
 197              	.LFE130:
 199              		.section	.text.blk_mark_as_used,"ax",%progbits
 200              		.align	1
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu softvfp
 206              	blk_mark_as_used:
 207              	.LVL12:
 208              	.LFB131:
 233:..//kernel/core/tos_mmheap.c **** 
 234:..//kernel/core/tos_mmheap.c **** __STATIC__ void blk_mark_as_used(mmheap_blk_t *blk)
 235:..//kernel/core/tos_mmheap.c **** {
 209              		.loc 1 235 1 is_stmt 1 view -0
 210              		.cfi_startproc
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 9


 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		.loc 1 235 1 is_stmt 0 view .LVU51
 214 0000 10B5     		push	{r4, lr}
 215              	.LCFI2:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 4, -8
 218              		.cfi_offset 14, -4
 219 0002 0446     		mov	r4, r0
 236:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *next_blk;
 220              		.loc 1 236 5 is_stmt 1 view .LVU52
 237:..//kernel/core/tos_mmheap.c **** 
 238:..//kernel/core/tos_mmheap.c ****     next_blk = blk_next(blk);
 221              		.loc 1 238 5 view .LVU53
 222              		.loc 1 238 16 is_stmt 0 view .LVU54
 223 0004 FFF7FEFF 		bl	blk_next
 224              	.LVL13:
 239:..//kernel/core/tos_mmheap.c ****     blk_set_prev_used(next_blk);
 225              		.loc 1 239 5 is_stmt 1 view .LVU55
 226 0008 FFF7FEFF 		bl	blk_set_prev_used
 227              	.LVL14:
 240:..//kernel/core/tos_mmheap.c ****     blk_set_used(blk);
 228              		.loc 1 240 5 view .LVU56
 229              	.LBB108:
 230              	.LBI108:
 163:..//kernel/core/tos_mmheap.c **** {
 231              		.loc 1 163 24 view .LVU57
 232              	.LBB109:
 165:..//kernel/core/tos_mmheap.c **** }
 233              		.loc 1 165 5 view .LVU58
 165:..//kernel/core/tos_mmheap.c **** }
 234              		.loc 1 165 15 is_stmt 0 view .LVU59
 235 000c 6368     		ldr	r3, [r4, #4]
 236 000e 23F00103 		bic	r3, r3, #1
 237 0012 6360     		str	r3, [r4, #4]
 238              	.LVL15:
 165:..//kernel/core/tos_mmheap.c **** }
 239              		.loc 1 165 15 view .LVU60
 240              	.LBE109:
 241              	.LBE108:
 241:..//kernel/core/tos_mmheap.c **** }
 242              		.loc 1 241 1 view .LVU61
 243 0014 10BD     		pop	{r4, pc}
 244              		.loc 1 241 1 view .LVU62
 245              		.cfi_endproc
 246              	.LFE131:
 248              		.section	.text.insert_free_block,"ax",%progbits
 249              		.align	1
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu softvfp
 255              	insert_free_block:
 256              	.LVL16:
 257              	.LFB135:
 242:..//kernel/core/tos_mmheap.c **** 
 243:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ size_t align_up(size_t x, size_t align)
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 10


 244:..//kernel/core/tos_mmheap.c **** {
 245:..//kernel/core/tos_mmheap.c ****     return (x + (align - 1)) & ~(align - 1);
 246:..//kernel/core/tos_mmheap.c **** }
 247:..//kernel/core/tos_mmheap.c **** 
 248:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ size_t align_down(size_t x, size_t align)
 249:..//kernel/core/tos_mmheap.c **** {
 250:..//kernel/core/tos_mmheap.c ****     return x - (x & (align - 1));
 251:..//kernel/core/tos_mmheap.c **** }
 252:..//kernel/core/tos_mmheap.c **** 
 253:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ void *align_ptr(const void *ptr, size_t align)
 254:..//kernel/core/tos_mmheap.c **** {
 255:..//kernel/core/tos_mmheap.c ****     return (void *)(((cpu_addr_t)ptr + (align -1)) & ~(align -1));
 256:..//kernel/core/tos_mmheap.c **** }
 257:..//kernel/core/tos_mmheap.c **** 
 258:..//kernel/core/tos_mmheap.c **** /* Insert a free block into the free block list. */
 259:..//kernel/core/tos_mmheap.c **** __STATIC__ void insert_free_block(mmheap_blk_t *blk, int fl, int sl)
 260:..//kernel/core/tos_mmheap.c **** {
 258              		.loc 1 260 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263              		.loc 1 260 1 is_stmt 0 view .LVU64
 264 0000 70B4     		push	{r4, r5, r6}
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 12
 267              		.cfi_offset 4, -12
 268              		.cfi_offset 5, -8
 269              		.cfi_offset 6, -4
 261:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *curr;
 270              		.loc 1 261 5 is_stmt 1 view .LVU65
 262:..//kernel/core/tos_mmheap.c **** 
 263:..//kernel/core/tos_mmheap.c ****     curr = k_mmheap_ctl.blocks[fl][sl];
 271              		.loc 1 263 5 view .LVU66
 272              		.loc 1 263 10 is_stmt 0 view .LVU67
 273 0002 0E4B     		ldr	r3, .L11
 274 0004 02EB4114 		add	r4, r2, r1, lsl #5
 275 0008 2034     		adds	r4, r4, #32
 276 000a 03EB8404 		add	r4, r3, r4, lsl #2
 277 000e 6568     		ldr	r5, [r4, #4]
 278              	.LVL17:
 264:..//kernel/core/tos_mmheap.c ****     blk->next_free = curr;
 279              		.loc 1 264 5 is_stmt 1 view .LVU68
 280              		.loc 1 264 20 is_stmt 0 view .LVU69
 281 0010 8560     		str	r5, [r0, #8]
 265:..//kernel/core/tos_mmheap.c ****     blk->prev_free = &k_mmheap_ctl.block_null;
 282              		.loc 1 265 5 is_stmt 1 view .LVU70
 283              		.loc 1 265 20 is_stmt 0 view .LVU71
 284 0012 03F11006 		add	r6, r3, #16
 285 0016 C660     		str	r6, [r0, #12]
 266:..//kernel/core/tos_mmheap.c ****     curr->prev_free = blk;
 286              		.loc 1 266 5 is_stmt 1 view .LVU72
 287              		.loc 1 266 21 is_stmt 0 view .LVU73
 288 0018 E860     		str	r0, [r5, #12]
 267:..//kernel/core/tos_mmheap.c **** 
 268:..//kernel/core/tos_mmheap.c **** 	/*
 269:..//kernel/core/tos_mmheap.c **** 	** Insert the new block at the head of the list, and mark the first-
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 11


 270:..//kernel/core/tos_mmheap.c **** 	** and second-level bitmaps appropriately.
 271:..//kernel/core/tos_mmheap.c **** 	*/
 272:..//kernel/core/tos_mmheap.c ****     k_mmheap_ctl.blocks[fl][sl] = blk;
 289              		.loc 1 272 5 is_stmt 1 view .LVU74
 290              		.loc 1 272 33 is_stmt 0 view .LVU75
 291 001a 6060     		str	r0, [r4, #4]
 273:..//kernel/core/tos_mmheap.c ****     k_mmheap_ctl.fl_bitmap |= (1 << fl);
 292              		.loc 1 273 5 is_stmt 1 view .LVU76
 293              		.loc 1 273 34 is_stmt 0 view .LVU77
 294 001c 0120     		movs	r0, #1
 295              	.LVL18:
 296              		.loc 1 273 34 view .LVU78
 297 001e 00FA01F5 		lsl	r5, r0, r1
 298              	.LVL19:
 299              		.loc 1 273 28 view .LVU79
 300 0022 1C6A     		ldr	r4, [r3, #32]
 301              	.LVL20:
 302              		.loc 1 273 28 view .LVU80
 303 0024 2C43     		orrs	r4, r4, r5
 304 0026 1C62     		str	r4, [r3, #32]
 274:..//kernel/core/tos_mmheap.c ****     k_mmheap_ctl.sl_bitmap[fl] |= (1 << sl);
 305              		.loc 1 274 5 is_stmt 1 view .LVU81
 306              		.loc 1 274 38 is_stmt 0 view .LVU82
 307 0028 9040     		lsls	r0, r0, r2
 308              		.loc 1 274 32 view .LVU83
 309 002a 0831     		adds	r1, r1, #8
 310              	.LVL21:
 311              		.loc 1 274 32 view .LVU84
 312 002c 03EB8103 		add	r3, r3, r1, lsl #2
 313              	.LVL22:
 314              		.loc 1 274 32 view .LVU85
 315 0030 5A68     		ldr	r2, [r3, #4]
 316              	.LVL23:
 317              		.loc 1 274 32 view .LVU86
 318 0032 1043     		orrs	r0, r0, r2
 319 0034 5860     		str	r0, [r3, #4]
 275:..//kernel/core/tos_mmheap.c **** }
 320              		.loc 1 275 1 view .LVU87
 321 0036 70BC     		pop	{r4, r5, r6}
 322              	.LCFI4:
 323              		.cfi_restore 6
 324              		.cfi_restore 5
 325              		.cfi_restore 4
 326              		.cfi_def_cfa_offset 0
 327 0038 7047     		bx	lr
 328              	.L12:
 329 003a 00BF     		.align	2
 330              	.L11:
 331 003c 00000000 		.word	k_mmheap_ctl
 332              		.cfi_endproc
 333              	.LFE135:
 335              		.section	.text.remove_free_block,"ax",%progbits
 336              		.align	1
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu softvfp
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 12


 342              	remove_free_block:
 343              	.LVL24:
 344              	.LFB136:
 276:..//kernel/core/tos_mmheap.c **** 
 277:..//kernel/core/tos_mmheap.c **** /* Remove a free block from the free list.*/
 278:..//kernel/core/tos_mmheap.c **** __STATIC__ void remove_free_block(mmheap_blk_t *blk, int fl, int sl)
 279:..//kernel/core/tos_mmheap.c **** {
 345              		.loc 1 279 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350              		.loc 1 279 1 is_stmt 0 view .LVU89
 351 0000 30B4     		push	{r4, r5}
 352              	.LCFI5:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 4, -8
 355              		.cfi_offset 5, -4
 280:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *prev_blk;
 356              		.loc 1 280 5 is_stmt 1 view .LVU90
 281:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *next_blk;
 357              		.loc 1 281 5 view .LVU91
 282:..//kernel/core/tos_mmheap.c **** 
 283:..//kernel/core/tos_mmheap.c ****     prev_blk = blk->prev_free;
 358              		.loc 1 283 5 view .LVU92
 359              		.loc 1 283 14 is_stmt 0 view .LVU93
 360 0002 C368     		ldr	r3, [r0, #12]
 361              	.LVL25:
 284:..//kernel/core/tos_mmheap.c ****     next_blk = blk->next_free;
 362              		.loc 1 284 5 is_stmt 1 view .LVU94
 363              		.loc 1 284 14 is_stmt 0 view .LVU95
 364 0004 8568     		ldr	r5, [r0, #8]
 365              	.LVL26:
 285:..//kernel/core/tos_mmheap.c ****     next_blk->prev_free = prev_blk;
 366              		.loc 1 285 5 is_stmt 1 view .LVU96
 367              		.loc 1 285 25 is_stmt 0 view .LVU97
 368 0006 EB60     		str	r3, [r5, #12]
 286:..//kernel/core/tos_mmheap.c ****     prev_blk->next_free = next_blk;
 369              		.loc 1 286 5 is_stmt 1 view .LVU98
 370              		.loc 1 286 25 is_stmt 0 view .LVU99
 371 0008 9D60     		str	r5, [r3, #8]
 287:..//kernel/core/tos_mmheap.c **** 
 288:..//kernel/core/tos_mmheap.c ****     /* If this block is the head of the free list, set new head. */
 289:..//kernel/core/tos_mmheap.c ****     if (k_mmheap_ctl.blocks[fl][sl] == blk) {
 372              		.loc 1 289 5 is_stmt 1 view .LVU100
 373              		.loc 1 289 32 is_stmt 0 view .LVU101
 374 000a 02EB4113 		add	r3, r2, r1, lsl #5
 375              	.LVL27:
 376              		.loc 1 289 32 view .LVU102
 377 000e 03F12004 		add	r4, r3, #32
 378 0012 124B     		ldr	r3, .L17
 379 0014 03EB8403 		add	r3, r3, r4, lsl #2
 380 0018 5B68     		ldr	r3, [r3, #4]
 381              		.loc 1 289 8 view .LVU103
 382 001a 8342     		cmp	r3, r0
 383 001c 01D0     		beq	.L16
 384              	.LVL28:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 13


 385              	.L13:
 290:..//kernel/core/tos_mmheap.c ****         k_mmheap_ctl.blocks[fl][sl] = next_blk;
 291:..//kernel/core/tos_mmheap.c **** 
 292:..//kernel/core/tos_mmheap.c ****         /* If the new head is null, clear the bitmap. */
 293:..//kernel/core/tos_mmheap.c ****         if (next_blk == &k_mmheap_ctl.block_null) {
 294:..//kernel/core/tos_mmheap.c ****             k_mmheap_ctl.sl_bitmap[fl] &= ~(1 << sl);
 295:..//kernel/core/tos_mmheap.c **** 
 296:..//kernel/core/tos_mmheap.c ****             /* If the second bitmap is now empty, clear the fl bitmap. */
 297:..//kernel/core/tos_mmheap.c ****             if (!k_mmheap_ctl.sl_bitmap[fl]) {
 298:..//kernel/core/tos_mmheap.c ****                 k_mmheap_ctl.fl_bitmap &= ~(1 << fl);
 299:..//kernel/core/tos_mmheap.c ****             }
 300:..//kernel/core/tos_mmheap.c ****         }
 301:..//kernel/core/tos_mmheap.c ****     }
 302:..//kernel/core/tos_mmheap.c **** }
 386              		.loc 1 302 1 view .LVU104
 387 001e 30BC     		pop	{r4, r5}
 388              	.LCFI6:
 389              		.cfi_remember_state
 390              		.cfi_restore 5
 391              		.cfi_restore 4
 392              		.cfi_def_cfa_offset 0
 393              	.LVL29:
 394              		.loc 1 302 1 view .LVU105
 395 0020 7047     		bx	lr
 396              	.LVL30:
 397              	.L16:
 398              	.LCFI7:
 399              		.cfi_restore_state
 290:..//kernel/core/tos_mmheap.c ****         k_mmheap_ctl.blocks[fl][sl] = next_blk;
 400              		.loc 1 290 9 is_stmt 1 view .LVU106
 290:..//kernel/core/tos_mmheap.c ****         k_mmheap_ctl.blocks[fl][sl] = next_blk;
 401              		.loc 1 290 37 is_stmt 0 view .LVU107
 402 0022 0E48     		ldr	r0, .L17
 403              	.LVL31:
 290:..//kernel/core/tos_mmheap.c ****         k_mmheap_ctl.blocks[fl][sl] = next_blk;
 404              		.loc 1 290 37 view .LVU108
 405 0024 00EB8403 		add	r3, r0, r4, lsl #2
 406 0028 5D60     		str	r5, [r3, #4]
 293:..//kernel/core/tos_mmheap.c ****             k_mmheap_ctl.sl_bitmap[fl] &= ~(1 << sl);
 407              		.loc 1 293 9 is_stmt 1 view .LVU109
 293:..//kernel/core/tos_mmheap.c ****             k_mmheap_ctl.sl_bitmap[fl] &= ~(1 << sl);
 408              		.loc 1 293 12 is_stmt 0 view .LVU110
 409 002a 1030     		adds	r0, r0, #16
 410 002c 8542     		cmp	r5, r0
 411 002e F6D1     		bne	.L13
 294:..//kernel/core/tos_mmheap.c **** 
 412              		.loc 1 294 13 is_stmt 1 view .LVU111
 294:..//kernel/core/tos_mmheap.c **** 
 413              		.loc 1 294 47 is_stmt 0 view .LVU112
 414 0030 0123     		movs	r3, #1
 415 0032 03FA02F4 		lsl	r4, r3, r2
 294:..//kernel/core/tos_mmheap.c **** 
 416              		.loc 1 294 40 view .LVU113
 417 0036 01F10803 		add	r3, r1, #8
 418 003a 1038     		subs	r0, r0, #16
 419 003c 00EB8303 		add	r3, r0, r3, lsl #2
 420 0040 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 14


 421              	.LVL32:
 294:..//kernel/core/tos_mmheap.c **** 
 422              		.loc 1 294 40 view .LVU114
 423 0042 22EA0402 		bic	r2, r2, r4
 424 0046 5A60     		str	r2, [r3, #4]
 297:..//kernel/core/tos_mmheap.c ****                 k_mmheap_ctl.fl_bitmap &= ~(1 << fl);
 425              		.loc 1 297 13 is_stmt 1 view .LVU115
 297:..//kernel/core/tos_mmheap.c ****                 k_mmheap_ctl.fl_bitmap &= ~(1 << fl);
 426              		.loc 1 297 16 is_stmt 0 view .LVU116
 427 0048 002A     		cmp	r2, #0
 428 004a E8D1     		bne	.L13
 298:..//kernel/core/tos_mmheap.c ****             }
 429              		.loc 1 298 17 is_stmt 1 view .LVU117
 298:..//kernel/core/tos_mmheap.c ****             }
 430              		.loc 1 298 47 is_stmt 0 view .LVU118
 431 004c 0123     		movs	r3, #1
 432 004e 03FA01F1 		lsl	r1, r3, r1
 433              	.LVL33:
 298:..//kernel/core/tos_mmheap.c ****             }
 434              		.loc 1 298 40 view .LVU119
 435 0052 036A     		ldr	r3, [r0, #32]
 436 0054 23EA0103 		bic	r3, r3, r1
 437 0058 0362     		str	r3, [r0, #32]
 438              		.loc 1 302 1 view .LVU120
 439 005a E0E7     		b	.L13
 440              	.L18:
 441              		.align	2
 442              	.L17:
 443 005c 00000000 		.word	k_mmheap_ctl
 444              		.cfi_endproc
 445              	.LFE136:
 447              		.section	.text.blk_can_split,"ax",%progbits
 448              		.align	1
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu softvfp
 454              	blk_can_split:
 455              	.LVL34:
 456              	.LFB139:
 303:..//kernel/core/tos_mmheap.c **** 
 304:..//kernel/core/tos_mmheap.c **** /* Remove a given block from the free list. */
 305:..//kernel/core/tos_mmheap.c **** __STATIC__ void blk_remove(mmheap_blk_t *blk)
 306:..//kernel/core/tos_mmheap.c **** {
 307:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 308:..//kernel/core/tos_mmheap.c **** 
 309:..//kernel/core/tos_mmheap.c ****     mapping_insert(blk_size(blk), &fl, &sl);
 310:..//kernel/core/tos_mmheap.c ****     remove_free_block(blk, fl, sl);
 311:..//kernel/core/tos_mmheap.c **** }
 312:..//kernel/core/tos_mmheap.c **** 
 313:..//kernel/core/tos_mmheap.c **** /* Insert a given block into the free list. */
 314:..//kernel/core/tos_mmheap.c **** __STATIC__ void blk_insert(mmheap_blk_t *blk)
 315:..//kernel/core/tos_mmheap.c **** {
 316:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 317:..//kernel/core/tos_mmheap.c **** 
 318:..//kernel/core/tos_mmheap.c ****     mapping_insert(blk_size(blk), &fl, &sl);
 319:..//kernel/core/tos_mmheap.c ****     insert_free_block(blk, fl, sl);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 15


 320:..//kernel/core/tos_mmheap.c **** }
 321:..//kernel/core/tos_mmheap.c **** 
 322:..//kernel/core/tos_mmheap.c **** __STATIC__ int blk_can_split(mmheap_blk_t *blk, size_t size)
 323:..//kernel/core/tos_mmheap.c **** {
 457              		.loc 1 323 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 324:..//kernel/core/tos_mmheap.c ****     return blk_size(blk) >= sizeof(mmheap_blk_t) + size;
 462              		.loc 1 324 5 view .LVU122
 463              	.LBB110:
 464              	.LBI110:
 138:..//kernel/core/tos_mmheap.c **** {
 465              		.loc 1 138 26 view .LVU123
 466              	.LBB111:
 140:..//kernel/core/tos_mmheap.c **** }
 467              		.loc 1 140 5 view .LVU124
 140:..//kernel/core/tos_mmheap.c **** }
 468              		.loc 1 140 15 is_stmt 0 view .LVU125
 469 0000 4368     		ldr	r3, [r0, #4]
 140:..//kernel/core/tos_mmheap.c **** }
 470              		.loc 1 140 22 view .LVU126
 471 0002 23F00303 		bic	r3, r3, #3
 472              	.LVL35:
 140:..//kernel/core/tos_mmheap.c **** }
 473              		.loc 1 140 22 view .LVU127
 474              	.LBE111:
 475              	.LBE110:
 476              		.loc 1 324 50 view .LVU128
 477 0006 1031     		adds	r1, r1, #16
 478              	.LVL36:
 325:..//kernel/core/tos_mmheap.c **** }
 479              		.loc 1 325 1 view .LVU129
 480 0008 9942     		cmp	r1, r3
 481 000a 8CBF     		ite	hi
 482 000c 0020     		movhi	r0, #0
 483              	.LVL37:
 484              		.loc 1 325 1 view .LVU130
 485 000e 0120     		movls	r0, #1
 486 0010 7047     		bx	lr
 487              		.cfi_endproc
 488              	.LFE139:
 490              		.section	.text.blk_split,"ax",%progbits
 491              		.align	1
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu softvfp
 497              	blk_split:
 498              	.LVL38:
 499              	.LFB140:
 326:..//kernel/core/tos_mmheap.c **** 
 327:..//kernel/core/tos_mmheap.c **** /* Split a block into two, the second of which is free. */
 328:..//kernel/core/tos_mmheap.c **** __STATIC__ mmheap_blk_t *blk_split(mmheap_blk_t *blk, size_t size)
 329:..//kernel/core/tos_mmheap.c **** {
 500              		.loc 1 329 1 is_stmt 1 view -0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 16


 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              		.loc 1 329 1 is_stmt 0 view .LVU132
 505 0000 10B5     		push	{r4, lr}
 506              	.LCFI8:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 4, -8
 509              		.cfi_offset 14, -4
 330:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t   *remaining;
 510              		.loc 1 330 5 is_stmt 1 view .LVU133
 331:..//kernel/core/tos_mmheap.c ****     size_t          remain_size;
 511              		.loc 1 331 5 view .LVU134
 332:..//kernel/core/tos_mmheap.c **** 
 333:..//kernel/core/tos_mmheap.c ****     /* Calculate the amount of space left in the remaining block. */
 334:..//kernel/core/tos_mmheap.c ****     remaining   = offset_to_blk(blk_to_ptr(blk), size - K_MMHEAP_BLK_HEADER_OVERHEAD);
 512              		.loc 1 334 5 view .LVU135
 513              	.LVL39:
 514              	.LBB112:
 515              	.LBI112:
 188:..//kernel/core/tos_mmheap.c **** {
 516              		.loc 1 188 25 view .LVU136
 517              	.LBB113:
 190:..//kernel/core/tos_mmheap.c **** }
 518              		.loc 1 190 5 view .LVU137
 190:..//kernel/core/tos_mmheap.c **** }
 519              		.loc 1 190 37 is_stmt 0 view .LVU138
 520 0002 00F10803 		add	r3, r0, #8
 521              	.LVL40:
 190:..//kernel/core/tos_mmheap.c **** }
 522              		.loc 1 190 37 view .LVU139
 523              	.LBE113:
 524              	.LBE112:
 525              		.loc 1 334 55 view .LVU140
 526 0006 0C1F     		subs	r4, r1, #4
 527              	.LVL41:
 528              	.LBB114:
 529              	.LBI114:
 194:..//kernel/core/tos_mmheap.c **** {
 530              		.loc 1 194 33 is_stmt 1 view .LVU141
 531              	.LBB115:
 196:..//kernel/core/tos_mmheap.c **** }
 532              		.loc 1 196 5 view .LVU142
 196:..//kernel/core/tos_mmheap.c **** }
 533              		.loc 1 196 45 is_stmt 0 view .LVU143
 534 0008 1C44     		add	r4, r4, r3
 535              	.LVL42:
 196:..//kernel/core/tos_mmheap.c **** }
 536              		.loc 1 196 45 view .LVU144
 537              	.LBE115:
 538              	.LBE114:
 335:..//kernel/core/tos_mmheap.c ****     remain_size = blk_size(blk) - (size + K_MMHEAP_BLK_HEADER_OVERHEAD);
 539              		.loc 1 335 5 is_stmt 1 view .LVU145
 540              	.LBB116:
 541              	.LBI116:
 138:..//kernel/core/tos_mmheap.c **** {
 542              		.loc 1 138 26 view .LVU146
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 17


 543              	.LBB117:
 140:..//kernel/core/tos_mmheap.c **** }
 544              		.loc 1 140 5 view .LVU147
 140:..//kernel/core/tos_mmheap.c **** }
 545              		.loc 1 140 15 is_stmt 0 view .LVU148
 546 000a 4368     		ldr	r3, [r0, #4]
 140:..//kernel/core/tos_mmheap.c **** }
 547              		.loc 1 140 22 view .LVU149
 548 000c 23F00303 		bic	r3, r3, #3
 549              	.LVL43:
 140:..//kernel/core/tos_mmheap.c **** }
 550              		.loc 1 140 22 view .LVU150
 551              	.LBE117:
 552              	.LBE116:
 553              		.loc 1 335 33 view .LVU151
 554 0010 5B1A     		subs	r3, r3, r1
 555              		.loc 1 335 17 view .LVU152
 556 0012 043B     		subs	r3, r3, #4
 557              	.LVL44:
 336:..//kernel/core/tos_mmheap.c **** 
 337:..//kernel/core/tos_mmheap.c ****     blk_set_size(remaining, remain_size);
 558              		.loc 1 337 5 is_stmt 1 view .LVU153
 559              	.LBB118:
 560              	.LBI118:
 148:..//kernel/core/tos_mmheap.c **** {
 561              		.loc 1 148 24 view .LVU154
 562              	.LBB119:
 150:..//kernel/core/tos_mmheap.c **** }
 563              		.loc 1 150 5 view .LVU155
 150:..//kernel/core/tos_mmheap.c **** }
 564              		.loc 1 150 28 is_stmt 0 view .LVU156
 565 0014 6268     		ldr	r2, [r4, #4]
 150:..//kernel/core/tos_mmheap.c **** }
 566              		.loc 1 150 35 view .LVU157
 567 0016 02F00302 		and	r2, r2, #3
 150:..//kernel/core/tos_mmheap.c **** }
 568              		.loc 1 150 22 view .LVU158
 569 001a 1343     		orrs	r3, r3, r2
 570              	.LVL45:
 150:..//kernel/core/tos_mmheap.c **** }
 571              		.loc 1 150 15 view .LVU159
 572 001c 6360     		str	r3, [r4, #4]
 573              	.LVL46:
 150:..//kernel/core/tos_mmheap.c **** }
 574              		.loc 1 150 15 view .LVU160
 575              	.LBE119:
 576              	.LBE118:
 338:..//kernel/core/tos_mmheap.c **** 
 339:..//kernel/core/tos_mmheap.c ****     blk_set_size(blk, size);
 577              		.loc 1 339 5 is_stmt 1 view .LVU161
 578              	.LBB120:
 579              	.LBI120:
 148:..//kernel/core/tos_mmheap.c **** {
 580              		.loc 1 148 24 view .LVU162
 581              	.LBB121:
 150:..//kernel/core/tos_mmheap.c **** }
 582              		.loc 1 150 5 view .LVU163
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 18


 150:..//kernel/core/tos_mmheap.c **** }
 583              		.loc 1 150 28 is_stmt 0 view .LVU164
 584 001e 4368     		ldr	r3, [r0, #4]
 150:..//kernel/core/tos_mmheap.c **** }
 585              		.loc 1 150 35 view .LVU165
 586 0020 03F00303 		and	r3, r3, #3
 150:..//kernel/core/tos_mmheap.c **** }
 587              		.loc 1 150 22 view .LVU166
 588 0024 1943     		orrs	r1, r1, r3
 589              	.LVL47:
 150:..//kernel/core/tos_mmheap.c **** }
 590              		.loc 1 150 15 view .LVU167
 591 0026 4160     		str	r1, [r0, #4]
 592              	.LVL48:
 150:..//kernel/core/tos_mmheap.c **** }
 593              		.loc 1 150 15 view .LVU168
 594              	.LBE121:
 595              	.LBE120:
 340:..//kernel/core/tos_mmheap.c ****     blk_mark_as_free(remaining);
 596              		.loc 1 340 5 is_stmt 1 view .LVU169
 597 0028 2046     		mov	r0, r4
 598              	.LVL49:
 599              		.loc 1 340 5 is_stmt 0 view .LVU170
 600 002a FFF7FEFF 		bl	blk_mark_as_free
 601              	.LVL50:
 341:..//kernel/core/tos_mmheap.c **** 
 342:..//kernel/core/tos_mmheap.c ****     return remaining;
 602              		.loc 1 342 5 is_stmt 1 view .LVU171
 343:..//kernel/core/tos_mmheap.c **** }
 603              		.loc 1 343 1 is_stmt 0 view .LVU172
 604 002e 2046     		mov	r0, r4
 605 0030 10BD     		pop	{r4, pc}
 606              		.loc 1 343 1 view .LVU173
 607              		.cfi_endproc
 608              	.LFE140:
 610              		.section	.text.blk_absorb,"ax",%progbits
 611              		.align	1
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 615              		.fpu softvfp
 617              	blk_absorb:
 618              	.LVL51:
 619              	.LFB141:
 344:..//kernel/core/tos_mmheap.c **** 
 345:..//kernel/core/tos_mmheap.c **** /* Absorb a free block's storage into an adjacent previous free block. */
 346:..//kernel/core/tos_mmheap.c **** __STATIC__ mmheap_blk_t *blk_absorb(mmheap_blk_t *prev_blk, mmheap_blk_t *blk)
 347:..//kernel/core/tos_mmheap.c **** {
 620              		.loc 1 347 1 is_stmt 1 view -0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		.loc 1 347 1 is_stmt 0 view .LVU175
 625 0000 10B5     		push	{r4, lr}
 626              	.LCFI9:
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 4, -8
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 19


 629              		.cfi_offset 14, -4
 630 0002 0446     		mov	r4, r0
 348:..//kernel/core/tos_mmheap.c ****     prev_blk->size += blk_size(blk) + K_MMHEAP_BLK_HEADER_OVERHEAD;
 631              		.loc 1 348 5 is_stmt 1 view .LVU176
 632              	.LVL52:
 633              	.LBB122:
 634              	.LBI122:
 138:..//kernel/core/tos_mmheap.c **** {
 635              		.loc 1 138 26 view .LVU177
 636              	.LBB123:
 140:..//kernel/core/tos_mmheap.c **** }
 637              		.loc 1 140 5 view .LVU178
 140:..//kernel/core/tos_mmheap.c **** }
 638              		.loc 1 140 15 is_stmt 0 view .LVU179
 639 0004 4B68     		ldr	r3, [r1, #4]
 140:..//kernel/core/tos_mmheap.c **** }
 640              		.loc 1 140 22 view .LVU180
 641 0006 23F00303 		bic	r3, r3, #3
 642              	.LVL53:
 140:..//kernel/core/tos_mmheap.c **** }
 643              		.loc 1 140 22 view .LVU181
 644              	.LBE123:
 645              	.LBE122:
 646              		.loc 1 348 37 view .LVU182
 647 000a 0433     		adds	r3, r3, #4
 648              		.loc 1 348 20 view .LVU183
 649 000c 4268     		ldr	r2, [r0, #4]
 650 000e 1344     		add	r3, r3, r2
 651 0010 4360     		str	r3, [r0, #4]
 349:..//kernel/core/tos_mmheap.c ****     blk_link_next(prev_blk);
 652              		.loc 1 349 5 is_stmt 1 view .LVU184
 653 0012 FFF7FEFF 		bl	blk_link_next
 654              	.LVL54:
 350:..//kernel/core/tos_mmheap.c ****     return prev_blk;
 655              		.loc 1 350 5 view .LVU185
 351:..//kernel/core/tos_mmheap.c **** }
 656              		.loc 1 351 1 is_stmt 0 view .LVU186
 657 0016 2046     		mov	r0, r4
 658 0018 10BD     		pop	{r4, pc}
 659              		.loc 1 351 1 view .LVU187
 660              		.cfi_endproc
 661              	.LFE141:
 663              		.section	.text.adjust_request_size,"ax",%progbits
 664              		.align	1
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu softvfp
 670              	adjust_request_size:
 671              	.LVL55:
 672              	.LFB149:
 352:..//kernel/core/tos_mmheap.c **** 
 353:..//kernel/core/tos_mmheap.c **** /* Merge a just-freed block with an adjacent previous free block. */
 354:..//kernel/core/tos_mmheap.c **** __STATIC__ mmheap_blk_t *blk_merge_prev(mmheap_blk_t *blk)
 355:..//kernel/core/tos_mmheap.c **** {
 356:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *prev_blk;
 357:..//kernel/core/tos_mmheap.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 20


 358:..//kernel/core/tos_mmheap.c ****     if (blk_is_prev_free(blk)) {
 359:..//kernel/core/tos_mmheap.c ****         prev_blk = blk_prev(blk);
 360:..//kernel/core/tos_mmheap.c ****         blk_remove(prev_blk);
 361:..//kernel/core/tos_mmheap.c ****         blk = blk_absorb(prev_blk, blk);
 362:..//kernel/core/tos_mmheap.c ****     }
 363:..//kernel/core/tos_mmheap.c **** 
 364:..//kernel/core/tos_mmheap.c ****     return blk;
 365:..//kernel/core/tos_mmheap.c **** }
 366:..//kernel/core/tos_mmheap.c **** 
 367:..//kernel/core/tos_mmheap.c **** /* Merge a just-freed block with an adjacent free block. */
 368:..//kernel/core/tos_mmheap.c **** __STATIC__ mmheap_blk_t *blk_merge_next(mmheap_blk_t *blk)
 369:..//kernel/core/tos_mmheap.c **** {
 370:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *next_blk;
 371:..//kernel/core/tos_mmheap.c **** 
 372:..//kernel/core/tos_mmheap.c ****     next_blk = blk_next(blk);
 373:..//kernel/core/tos_mmheap.c ****     if (blk_is_free(next_blk)) {
 374:..//kernel/core/tos_mmheap.c ****         blk_remove(next_blk);
 375:..//kernel/core/tos_mmheap.c ****         blk = blk_absorb(blk, next_blk);
 376:..//kernel/core/tos_mmheap.c ****     }
 377:..//kernel/core/tos_mmheap.c **** 
 378:..//kernel/core/tos_mmheap.c ****     return blk;
 379:..//kernel/core/tos_mmheap.c **** }
 380:..//kernel/core/tos_mmheap.c **** 
 381:..//kernel/core/tos_mmheap.c **** /* Trim any trailing block space off the end of a block, return to pool. */
 382:..//kernel/core/tos_mmheap.c **** __STATIC__ void blk_trim_free(mmheap_blk_t *blk, size_t size)
 383:..//kernel/core/tos_mmheap.c **** {
 384:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *remaining_blk;
 385:..//kernel/core/tos_mmheap.c **** 
 386:..//kernel/core/tos_mmheap.c ****     if (blk_can_split(blk, size)) {
 387:..//kernel/core/tos_mmheap.c ****         remaining_blk = blk_split(blk, size);
 388:..//kernel/core/tos_mmheap.c ****         blk_link_next(blk);
 389:..//kernel/core/tos_mmheap.c ****         blk_set_prev_free(remaining_blk);
 390:..//kernel/core/tos_mmheap.c ****         blk_insert(remaining_blk);
 391:..//kernel/core/tos_mmheap.c ****     }
 392:..//kernel/core/tos_mmheap.c **** }
 393:..//kernel/core/tos_mmheap.c **** 
 394:..//kernel/core/tos_mmheap.c **** /* Trim any trailing block space off the end of a used block, return to pool. */
 395:..//kernel/core/tos_mmheap.c **** __STATIC__ void blk_trim_used(mmheap_blk_t *blk, size_t size)
 396:..//kernel/core/tos_mmheap.c **** {
 397:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *remaining_blk;
 398:..//kernel/core/tos_mmheap.c **** 
 399:..//kernel/core/tos_mmheap.c ****     if (blk_can_split(blk, size)) {
 400:..//kernel/core/tos_mmheap.c ****         /* If the next block is free, we must coalesce. */
 401:..//kernel/core/tos_mmheap.c ****         remaining_blk = blk_split(blk, size);
 402:..//kernel/core/tos_mmheap.c ****         blk_set_prev_used(remaining_blk);
 403:..//kernel/core/tos_mmheap.c **** 
 404:..//kernel/core/tos_mmheap.c ****         remaining_blk = blk_merge_next(remaining_blk);
 405:..//kernel/core/tos_mmheap.c ****         blk_insert(remaining_blk);
 406:..//kernel/core/tos_mmheap.c ****     }
 407:..//kernel/core/tos_mmheap.c **** }
 408:..//kernel/core/tos_mmheap.c **** 
 409:..//kernel/core/tos_mmheap.c **** __STATIC__ mmheap_blk_t *blk_trim_free_leading(mmheap_blk_t *blk, size_t size)
 410:..//kernel/core/tos_mmheap.c **** {
 411:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *remaining_blk;
 412:..//kernel/core/tos_mmheap.c **** 
 413:..//kernel/core/tos_mmheap.c ****     remaining_blk = blk;
 414:..//kernel/core/tos_mmheap.c ****     if (blk_can_split(blk, size)) {
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 21


 415:..//kernel/core/tos_mmheap.c ****         /* We want the 2nd block. */
 416:..//kernel/core/tos_mmheap.c ****         remaining_blk = blk_split(blk, size - K_MMHEAP_BLK_HEADER_OVERHEAD);
 417:..//kernel/core/tos_mmheap.c ****         blk_set_prev_free(remaining_blk);
 418:..//kernel/core/tos_mmheap.c **** 
 419:..//kernel/core/tos_mmheap.c ****         blk_link_next(blk);
 420:..//kernel/core/tos_mmheap.c ****         blk_insert(blk);
 421:..//kernel/core/tos_mmheap.c ****     }
 422:..//kernel/core/tos_mmheap.c **** 
 423:..//kernel/core/tos_mmheap.c ****     return remaining_blk;
 424:..//kernel/core/tos_mmheap.c **** }
 425:..//kernel/core/tos_mmheap.c **** 
 426:..//kernel/core/tos_mmheap.c **** __STATIC__ mmheap_blk_t *blk_search_suitable(int *fli, int *sli)
 427:..//kernel/core/tos_mmheap.c **** {
 428:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 429:..//kernel/core/tos_mmheap.c ****     uint32_t sl_map, fl_map;
 430:..//kernel/core/tos_mmheap.c **** 
 431:..//kernel/core/tos_mmheap.c ****     fl = *fli;
 432:..//kernel/core/tos_mmheap.c ****     sl = *sli;
 433:..//kernel/core/tos_mmheap.c **** 
 434:..//kernel/core/tos_mmheap.c **** 	/*
 435:..//kernel/core/tos_mmheap.c **** 	** First, search for a block in the list associated with the given
 436:..//kernel/core/tos_mmheap.c **** 	** fl/sl index.
 437:..//kernel/core/tos_mmheap.c **** 	*/
 438:..//kernel/core/tos_mmheap.c ****     sl_map = k_mmheap_ctl.sl_bitmap[fl] & (~0U << sl);
 439:..//kernel/core/tos_mmheap.c ****     if (!sl_map) {
 440:..//kernel/core/tos_mmheap.c ****         /* No block exists. Search in the next largest first-level list. */
 441:..//kernel/core/tos_mmheap.c ****         fl_map = k_mmheap_ctl.fl_bitmap & (~0U << (fl + 1));
 442:..//kernel/core/tos_mmheap.c ****         if (!fl_map) {
 443:..//kernel/core/tos_mmheap.c ****             /* No free blocks available, memory has been exhausted. */
 444:..//kernel/core/tos_mmheap.c ****             return 0;
 445:..//kernel/core/tos_mmheap.c ****         }
 446:..//kernel/core/tos_mmheap.c **** 
 447:..//kernel/core/tos_mmheap.c ****         fl = __ffs(fl_map);
 448:..//kernel/core/tos_mmheap.c ****         *fli = fl;
 449:..//kernel/core/tos_mmheap.c ****         sl_map = k_mmheap_ctl.sl_bitmap[fl];
 450:..//kernel/core/tos_mmheap.c ****     }
 451:..//kernel/core/tos_mmheap.c ****     sl = __ffs(sl_map);
 452:..//kernel/core/tos_mmheap.c ****     *sli = sl;
 453:..//kernel/core/tos_mmheap.c **** 
 454:..//kernel/core/tos_mmheap.c ****     /* Return the first block in the free list. */
 455:..//kernel/core/tos_mmheap.c ****     return k_mmheap_ctl.blocks[fl][sl];
 456:..//kernel/core/tos_mmheap.c **** }
 457:..//kernel/core/tos_mmheap.c **** 
 458:..//kernel/core/tos_mmheap.c **** __STATIC__ mmheap_blk_t *blk_locate_free(size_t size)
 459:..//kernel/core/tos_mmheap.c **** {
 460:..//kernel/core/tos_mmheap.c ****     int fl = 0, sl = 0;
 461:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *blk = K_NULL;
 462:..//kernel/core/tos_mmheap.c **** 
 463:..//kernel/core/tos_mmheap.c ****     if (!size) {
 464:..//kernel/core/tos_mmheap.c ****         return K_NULL;
 465:..//kernel/core/tos_mmheap.c ****     }
 466:..//kernel/core/tos_mmheap.c **** 
 467:..//kernel/core/tos_mmheap.c ****     mapping_search(size, &fl, &sl);
 468:..//kernel/core/tos_mmheap.c **** 
 469:..//kernel/core/tos_mmheap.c ****     /*
 470:..//kernel/core/tos_mmheap.c ****     ** mapping_search can futz with the size, so for excessively large sizes it can sometimes wind 
 471:..//kernel/core/tos_mmheap.c ****     ** with indices that are off the end of the block array.
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 22


 472:..//kernel/core/tos_mmheap.c ****     ** So, we protect against that here, since this is the only callsite of mapping_search.
 473:..//kernel/core/tos_mmheap.c ****     ** Note that we don't need to check sl, since it comes from a modulo operation that guarantees 
 474:..//kernel/core/tos_mmheap.c ****     */
 475:..//kernel/core/tos_mmheap.c ****     if (fl < K_MMHEAP_FL_INDEX_COUNT) {
 476:..//kernel/core/tos_mmheap.c ****         blk = blk_search_suitable(&fl, &sl);
 477:..//kernel/core/tos_mmheap.c ****     }
 478:..//kernel/core/tos_mmheap.c **** 
 479:..//kernel/core/tos_mmheap.c ****     if (blk) {
 480:..//kernel/core/tos_mmheap.c ****         remove_free_block(blk, fl, sl);
 481:..//kernel/core/tos_mmheap.c ****     }
 482:..//kernel/core/tos_mmheap.c **** 
 483:..//kernel/core/tos_mmheap.c ****     return blk;
 484:..//kernel/core/tos_mmheap.c **** }
 485:..//kernel/core/tos_mmheap.c **** 
 486:..//kernel/core/tos_mmheap.c **** /*
 487:..//kernel/core/tos_mmheap.c **** ** Adjust an allocation size to be aligned to word size, and no smaller
 488:..//kernel/core/tos_mmheap.c **** ** than internal minimum.
 489:..//kernel/core/tos_mmheap.c **** */
 490:..//kernel/core/tos_mmheap.c **** __STATIC__ size_t adjust_request_size(size_t size, size_t align)
 491:..//kernel/core/tos_mmheap.c **** {
 673              		.loc 1 491 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 492:..//kernel/core/tos_mmheap.c ****     size_t adjust_size = 0;
 678              		.loc 1 492 5 view .LVU189
 493:..//kernel/core/tos_mmheap.c **** 
 494:..//kernel/core/tos_mmheap.c ****     if (!size) {
 679              		.loc 1 494 5 view .LVU190
 680              		.loc 1 494 8 is_stmt 0 view .LVU191
 681 0000 0346     		mov	r3, r0
 682 0002 58B1     		cbz	r0, .L26
 495:..//kernel/core/tos_mmheap.c ****         return 0;
 496:..//kernel/core/tos_mmheap.c ****     }
 497:..//kernel/core/tos_mmheap.c **** 
 498:..//kernel/core/tos_mmheap.c ****     adjust_size = align_up(size, align);
 683              		.loc 1 498 5 is_stmt 1 view .LVU192
 684              	.LVL56:
 685              	.LBB124:
 686              	.LBI124:
 243:..//kernel/core/tos_mmheap.c **** {
 687              		.loc 1 243 26 view .LVU193
 688              	.LBB125:
 245:..//kernel/core/tos_mmheap.c **** }
 689              		.loc 1 245 5 view .LVU194
 245:..//kernel/core/tos_mmheap.c **** }
 690              		.loc 1 245 15 is_stmt 0 view .LVU195
 691 0004 0B44     		add	r3, r3, r1
 692 0006 581E     		subs	r0, r3, #1
 693              	.LVL57:
 245:..//kernel/core/tos_mmheap.c **** }
 694              		.loc 1 245 32 view .LVU196
 695 0008 4B42     		rsbs	r3, r1, #0
 245:..//kernel/core/tos_mmheap.c **** }
 696              		.loc 1 245 30 view .LVU197
 697 000a 0340     		ands	r3, r3, r0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 23


 698              	.LVL58:
 245:..//kernel/core/tos_mmheap.c **** }
 699              		.loc 1 245 30 view .LVU198
 700              	.LBE125:
 701              	.LBE124:
 499:..//kernel/core/tos_mmheap.c ****     if (adjust_size > K_MMHEAP_BLK_SIZE_MAX) {
 702              		.loc 1 499 5 is_stmt 1 view .LVU199
 703              		.loc 1 499 8 is_stmt 0 view .LVU200
 704 000c B3F1804F 		cmp	r3, #1073741824
 705 0010 05D8     		bhi	.L27
 500:..//kernel/core/tos_mmheap.c ****         return 0;
 501:..//kernel/core/tos_mmheap.c ****     }
 502:..//kernel/core/tos_mmheap.c **** 
 503:..//kernel/core/tos_mmheap.c ****     /* aligned sized must not exceed block_size_max or we'll go out of bounds on sl_bitmap */
 504:..//kernel/core/tos_mmheap.c ****     return adjust_size > K_MMHEAP_BLK_SIZE_MIN ? adjust_size : K_MMHEAP_BLK_SIZE_MIN;
 706              		.loc 1 504 5 is_stmt 1 view .LVU201
 707              		.loc 1 504 62 is_stmt 0 view .LVU202
 708 0012 0C2B     		cmp	r3, #12
 709 0014 38BF     		it	cc
 710 0016 0C23     		movcc	r3, #12
 711              	.LVL59:
 712              		.loc 1 504 62 view .LVU203
 713 0018 1846     		mov	r0, r3
 714              	.LVL60:
 715              		.loc 1 504 62 view .LVU204
 716 001a 7047     		bx	lr
 717              	.LVL61:
 718              	.L26:
 719              		.loc 1 504 62 view .LVU205
 720 001c 7047     		bx	lr
 721              	.LVL62:
 722              	.L27:
 500:..//kernel/core/tos_mmheap.c ****         return 0;
 723              		.loc 1 500 16 view .LVU206
 724 001e 0020     		movs	r0, #0
 505:..//kernel/core/tos_mmheap.c **** }
 725              		.loc 1 505 1 view .LVU207
 726 0020 7047     		bx	lr
 727              		.cfi_endproc
 728              	.LFE149:
 730              		.section	.text.mmheap_pool_is_exist,"ax",%progbits
 731              		.align	1
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu softvfp
 737              	mmheap_pool_is_exist:
 738              	.LVL63:
 739              	.LFB152:
 506:..//kernel/core/tos_mmheap.c **** 
 507:..//kernel/core/tos_mmheap.c **** __STATIC__ void *blk_prepare_used(mmheap_blk_t *blk, size_t size)
 508:..//kernel/core/tos_mmheap.c **** {
 509:..//kernel/core/tos_mmheap.c ****     if (!blk) {
 510:..//kernel/core/tos_mmheap.c ****         return K_NULL;
 511:..//kernel/core/tos_mmheap.c ****     }
 512:..//kernel/core/tos_mmheap.c ****     blk_trim_free(blk, size);
 513:..//kernel/core/tos_mmheap.c ****     blk_mark_as_used(blk);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 24


 514:..//kernel/core/tos_mmheap.c ****     return blk_to_ptr(blk);
 515:..//kernel/core/tos_mmheap.c **** }
 516:..//kernel/core/tos_mmheap.c **** 
 517:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ int mmheap_pool_is_full(void)
 518:..//kernel/core/tos_mmheap.c **** {
 519:..//kernel/core/tos_mmheap.c ****     return k_mmheap_ctl.pool_cnt == K_MMHEAP_POOL_MAX;
 520:..//kernel/core/tos_mmheap.c **** }
 521:..//kernel/core/tos_mmheap.c **** 
 522:..//kernel/core/tos_mmheap.c **** __STATIC__ int mmheap_pool_is_exist(void *pool_start)
 523:..//kernel/core/tos_mmheap.c **** {
 740              		.loc 1 523 1 is_stmt 1 view -0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 524:..//kernel/core/tos_mmheap.c ****     int i = 0;
 745              		.loc 1 524 5 view .LVU209
 525:..//kernel/core/tos_mmheap.c **** 
 526:..//kernel/core/tos_mmheap.c ****     for (i = 0; i < k_mmheap_ctl.pool_cnt; ++i) {
 746              		.loc 1 526 5 view .LVU210
 747              		.loc 1 526 12 is_stmt 0 view .LVU211
 748 0000 0023     		movs	r3, #0
 749              	.LVL64:
 750              	.L29:
 751              		.loc 1 526 33 discriminator 1 view .LVU212
 752 0002 084A     		ldr	r2, .L34
 753 0004 1268     		ldr	r2, [r2]
 754              		.loc 1 526 5 discriminator 1 view .LVU213
 755 0006 9A42     		cmp	r2, r3
 756 0008 07DD     		ble	.L33
 527:..//kernel/core/tos_mmheap.c ****         if (k_mmheap_ctl.pool_start[i] == pool_start) {
 757              		.loc 1 527 9 is_stmt 1 view .LVU214
 758              		.loc 1 527 36 is_stmt 0 view .LVU215
 759 000a 064A     		ldr	r2, .L34
 760 000c 02EB8302 		add	r2, r2, r3, lsl #2
 761 0010 5268     		ldr	r2, [r2, #4]
 762              		.loc 1 527 12 view .LVU216
 763 0012 8242     		cmp	r2, r0
 764 0014 03D0     		beq	.L32
 526:..//kernel/core/tos_mmheap.c ****         if (k_mmheap_ctl.pool_start[i] == pool_start) {
 765              		.loc 1 526 44 discriminator 2 view .LVU217
 766 0016 0133     		adds	r3, r3, #1
 767              	.LVL65:
 526:..//kernel/core/tos_mmheap.c ****         if (k_mmheap_ctl.pool_start[i] == pool_start) {
 768              		.loc 1 526 44 discriminator 2 view .LVU218
 769 0018 F3E7     		b	.L29
 770              	.L33:
 528:..//kernel/core/tos_mmheap.c ****             return K_TRUE;
 529:..//kernel/core/tos_mmheap.c ****         }
 530:..//kernel/core/tos_mmheap.c ****     }
 531:..//kernel/core/tos_mmheap.c ****     return K_FALSE;
 771              		.loc 1 531 12 view .LVU219
 772 001a 0020     		movs	r0, #0
 773              	.LVL66:
 774              		.loc 1 531 12 view .LVU220
 775 001c 7047     		bx	lr
 776              	.LVL67:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 25


 777              	.L32:
 528:..//kernel/core/tos_mmheap.c ****             return K_TRUE;
 778              		.loc 1 528 20 view .LVU221
 779 001e 0120     		movs	r0, #1
 780              	.LVL68:
 532:..//kernel/core/tos_mmheap.c **** }
 781              		.loc 1 532 1 view .LVU222
 782 0020 7047     		bx	lr
 783              	.L35:
 784 0022 00BF     		.align	2
 785              	.L34:
 786 0024 00000000 		.word	k_mmheap_ctl
 787              		.cfi_endproc
 788              	.LFE152:
 790              		.section	.text.mmheap_pool_unrecord,"ax",%progbits
 791              		.align	1
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu softvfp
 797              	mmheap_pool_unrecord:
 798              	.LVL69:
 799              	.LFB154:
 533:..//kernel/core/tos_mmheap.c **** 
 534:..//kernel/core/tos_mmheap.c **** __STATIC_INLINE__ void mmheap_pool_record(void *pool_start)
 535:..//kernel/core/tos_mmheap.c **** {
 536:..//kernel/core/tos_mmheap.c ****     k_mmheap_ctl.pool_start[k_mmheap_ctl.pool_cnt++] = pool_start;
 537:..//kernel/core/tos_mmheap.c **** }
 538:..//kernel/core/tos_mmheap.c **** 
 539:..//kernel/core/tos_mmheap.c **** __STATIC__ void mmheap_pool_unrecord(void *pool_start)
 540:..//kernel/core/tos_mmheap.c **** {
 800              		.loc 1 540 1 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 541:..//kernel/core/tos_mmheap.c ****     int i = 0;
 805              		.loc 1 541 5 view .LVU224
 542:..//kernel/core/tos_mmheap.c **** 
 543:..//kernel/core/tos_mmheap.c ****     for (i = 0; i < k_mmheap_ctl.pool_cnt; ++i) {
 806              		.loc 1 543 5 view .LVU225
 807              		.loc 1 543 12 is_stmt 0 view .LVU226
 808 0000 0023     		movs	r3, #0
 809              	.LVL70:
 810              	.L37:
 811              		.loc 1 543 33 discriminator 1 view .LVU227
 812 0002 0C4A     		ldr	r2, .L41
 813 0004 1168     		ldr	r1, [r2]
 814              		.loc 1 543 5 discriminator 1 view .LVU228
 815 0006 9942     		cmp	r1, r3
 816 0008 07DD     		ble	.L38
 544:..//kernel/core/tos_mmheap.c ****         if (k_mmheap_ctl.pool_start[i] == pool_start) {
 817              		.loc 1 544 9 is_stmt 1 view .LVU229
 818              		.loc 1 544 36 is_stmt 0 view .LVU230
 819 000a 0A4A     		ldr	r2, .L41
 820 000c 02EB8302 		add	r2, r2, r3, lsl #2
 821 0010 5268     		ldr	r2, [r2, #4]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 26


 822              		.loc 1 544 12 view .LVU231
 823 0012 8242     		cmp	r2, r0
 824 0014 01D0     		beq	.L38
 543:..//kernel/core/tos_mmheap.c ****         if (k_mmheap_ctl.pool_start[i] == pool_start) {
 825              		.loc 1 543 44 discriminator 2 view .LVU232
 826 0016 0133     		adds	r3, r3, #1
 827              	.LVL71:
 543:..//kernel/core/tos_mmheap.c ****         if (k_mmheap_ctl.pool_start[i] == pool_start) {
 828              		.loc 1 543 44 discriminator 2 view .LVU233
 829 0018 F3E7     		b	.L37
 830              	.L38:
 545:..//kernel/core/tos_mmheap.c ****             break;
 546:..//kernel/core/tos_mmheap.c ****         }
 547:..//kernel/core/tos_mmheap.c ****     }
 548:..//kernel/core/tos_mmheap.c ****     if (i != k_mmheap_ctl.pool_cnt - 1) {
 831              		.loc 1 548 5 is_stmt 1 view .LVU234
 832              		.loc 1 548 36 is_stmt 0 view .LVU235
 833 001a 0139     		subs	r1, r1, #1
 834              		.loc 1 548 8 view .LVU236
 835 001c 9942     		cmp	r1, r3
 836 001e 06D0     		beq	.L40
 549:..//kernel/core/tos_mmheap.c ****         k_mmheap_ctl.pool_start[i] = k_mmheap_ctl.pool_start[k_mmheap_ctl.pool_cnt - 1];
 837              		.loc 1 549 9 is_stmt 1 view .LVU237
 838              		.loc 1 549 61 is_stmt 0 view .LVU238
 839 0020 044A     		ldr	r2, .L41
 840 0022 02EB8100 		add	r0, r2, r1, lsl #2
 841              	.LVL72:
 842              		.loc 1 549 61 view .LVU239
 843 0026 4068     		ldr	r0, [r0, #4]
 844              		.loc 1 549 36 view .LVU240
 845 0028 02EB8303 		add	r3, r2, r3, lsl #2
 846              	.LVL73:
 847              		.loc 1 549 36 view .LVU241
 848 002c 5860     		str	r0, [r3, #4]
 849              	.L40:
 550:..//kernel/core/tos_mmheap.c ****     }
 551:..//kernel/core/tos_mmheap.c ****     --k_mmheap_ctl.pool_cnt;
 850              		.loc 1 551 5 is_stmt 1 view .LVU242
 851 002e 014B     		ldr	r3, .L41
 852 0030 1960     		str	r1, [r3]
 552:..//kernel/core/tos_mmheap.c **** }
 853              		.loc 1 552 1 is_stmt 0 view .LVU243
 854 0032 7047     		bx	lr
 855              	.L42:
 856              		.align	2
 857              	.L41:
 858 0034 00000000 		.word	k_mmheap_ctl
 859              		.cfi_endproc
 860              	.LFE154:
 862              		.section	.text.mmheap_ctl_init,"ax",%progbits
 863              		.align	1
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 867              		.fpu softvfp
 869              	mmheap_ctl_init:
 870              	.LFB155:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 27


 553:..//kernel/core/tos_mmheap.c **** 
 554:..//kernel/core/tos_mmheap.c **** __STATIC__ void mmheap_ctl_init(void)
 555:..//kernel/core/tos_mmheap.c **** {
 871              		.loc 1 555 1 is_stmt 1 view -0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 556:..//kernel/core/tos_mmheap.c ****     int i, j;
 876              		.loc 1 556 5 view .LVU245
 557:..//kernel/core/tos_mmheap.c **** 
 558:..//kernel/core/tos_mmheap.c ****     k_mmheap_ctl.pool_cnt = 0u;
 877              		.loc 1 558 5 view .LVU246
 878              		.loc 1 558 27 is_stmt 0 view .LVU247
 879 0000 0023     		movs	r3, #0
 880 0002 154A     		ldr	r2, .L52
 881 0004 1360     		str	r3, [r2]
 559:..//kernel/core/tos_mmheap.c ****     for (i = 0; i < K_MMHEAP_POOL_MAX; ++i) {
 882              		.loc 1 559 5 is_stmt 1 view .LVU248
 883              	.LVL74:
 884              		.loc 1 559 5 is_stmt 0 view .LVU249
 885 0006 05E0     		b	.L44
 886              	.LVL75:
 887              	.L45:
 560:..//kernel/core/tos_mmheap.c ****         k_mmheap_ctl.pool_start[i] = (void *)K_NULL;
 888              		.loc 1 560 9 is_stmt 1 discriminator 3 view .LVU250
 889              		.loc 1 560 36 is_stmt 0 discriminator 3 view .LVU251
 890 0008 134A     		ldr	r2, .L52
 891 000a 02EB8302 		add	r2, r2, r3, lsl #2
 892 000e 0021     		movs	r1, #0
 893 0010 5160     		str	r1, [r2, #4]
 559:..//kernel/core/tos_mmheap.c ****     for (i = 0; i < K_MMHEAP_POOL_MAX; ++i) {
 894              		.loc 1 559 40 discriminator 3 view .LVU252
 895 0012 0133     		adds	r3, r3, #1
 896              	.LVL76:
 897              	.L44:
 559:..//kernel/core/tos_mmheap.c ****     for (i = 0; i < K_MMHEAP_POOL_MAX; ++i) {
 898              		.loc 1 559 5 discriminator 1 view .LVU253
 899 0014 022B     		cmp	r3, #2
 900 0016 F7DD     		ble	.L45
 561:..//kernel/core/tos_mmheap.c ****     }
 562:..//kernel/core/tos_mmheap.c **** 
 563:..//kernel/core/tos_mmheap.c ****     k_mmheap_ctl.block_null.next_free = &k_mmheap_ctl.block_null;
 901              		.loc 1 563 5 is_stmt 1 view .LVU254
 902              		.loc 1 563 39 is_stmt 0 view .LVU255
 903 0018 0F4B     		ldr	r3, .L52
 904              	.LVL77:
 905              		.loc 1 563 39 view .LVU256
 906 001a 03F11002 		add	r2, r3, #16
 907 001e 9A61     		str	r2, [r3, #24]
 564:..//kernel/core/tos_mmheap.c ****     k_mmheap_ctl.block_null.prev_free = &k_mmheap_ctl.block_null;
 908              		.loc 1 564 5 is_stmt 1 view .LVU257
 909              		.loc 1 564 39 is_stmt 0 view .LVU258
 910 0020 DA61     		str	r2, [r3, #28]
 565:..//kernel/core/tos_mmheap.c **** 
 566:..//kernel/core/tos_mmheap.c ****     k_mmheap_ctl.fl_bitmap = 0;
 911              		.loc 1 566 5 is_stmt 1 view .LVU259
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 28


 912              		.loc 1 566 28 is_stmt 0 view .LVU260
 913 0022 0020     		movs	r0, #0
 914 0024 1862     		str	r0, [r3, #32]
 567:..//kernel/core/tos_mmheap.c ****     for (i = 0; i < K_MMHEAP_FL_INDEX_COUNT; ++i) {
 915              		.loc 1 567 5 is_stmt 1 view .LVU261
 916              	.LVL78:
 917              		.loc 1 567 5 is_stmt 0 view .LVU262
 918 0026 00E0     		b	.L46
 919              	.LVL79:
 920              	.L51:
 921              		.loc 1 567 46 discriminator 2 view .LVU263
 922 0028 0130     		adds	r0, r0, #1
 923              	.LVL80:
 924              	.L46:
 925              		.loc 1 567 5 discriminator 1 view .LVU264
 926 002a 1728     		cmp	r0, #23
 927 002c 12DC     		bgt	.L50
 568:..//kernel/core/tos_mmheap.c ****         k_mmheap_ctl.sl_bitmap[i] = 0;
 928              		.loc 1 568 9 is_stmt 1 view .LVU265
 929              		.loc 1 568 35 is_stmt 0 view .LVU266
 930 002e 00F10803 		add	r3, r0, #8
 931 0032 094A     		ldr	r2, .L52
 932 0034 02EB8303 		add	r3, r2, r3, lsl #2
 933 0038 0021     		movs	r1, #0
 934 003a 5960     		str	r1, [r3, #4]
 569:..//kernel/core/tos_mmheap.c ****         for (j = 0; j < K_MMHEAP_SL_INDEX_COUNT; ++j) {
 935              		.loc 1 569 9 is_stmt 1 view .LVU267
 936              	.LVL81:
 937              	.L47:
 938              		.loc 1 569 9 is_stmt 0 discriminator 1 view .LVU268
 939 003c 1F29     		cmp	r1, #31
 940 003e F3DC     		bgt	.L51
 570:..//kernel/core/tos_mmheap.c ****             k_mmheap_ctl.blocks[i][j] = &k_mmheap_ctl.block_null;
 941              		.loc 1 570 13 is_stmt 1 discriminator 3 view .LVU269
 942              		.loc 1 570 39 is_stmt 0 discriminator 3 view .LVU270
 943 0040 054A     		ldr	r2, .L52
 944 0042 01EB4013 		add	r3, r1, r0, lsl #5
 945 0046 2033     		adds	r3, r3, #32
 946 0048 02EB8303 		add	r3, r2, r3, lsl #2
 947 004c 1032     		adds	r2, r2, #16
 948 004e 5A60     		str	r2, [r3, #4]
 569:..//kernel/core/tos_mmheap.c ****         for (j = 0; j < K_MMHEAP_SL_INDEX_COUNT; ++j) {
 949              		.loc 1 569 50 discriminator 3 view .LVU271
 950 0050 0131     		adds	r1, r1, #1
 951              	.LVL82:
 569:..//kernel/core/tos_mmheap.c ****         for (j = 0; j < K_MMHEAP_SL_INDEX_COUNT; ++j) {
 952              		.loc 1 569 50 discriminator 3 view .LVU272
 953 0052 F3E7     		b	.L47
 954              	.LVL83:
 955              	.L50:
 571:..//kernel/core/tos_mmheap.c ****         }
 572:..//kernel/core/tos_mmheap.c ****     }
 573:..//kernel/core/tos_mmheap.c **** }
 956              		.loc 1 573 1 view .LVU273
 957 0054 7047     		bx	lr
 958              	.L53:
 959 0056 00BF     		.align	2
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 29


 960              	.L52:
 961 0058 00000000 		.word	k_mmheap_ctl
 962              		.cfi_endproc
 963              	.LFE155:
 965              		.section	.text.generic_fls,"ax",%progbits
 966              		.align	1
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu softvfp
 972              	generic_fls:
 973              	.LVL84:
 974              	.LFB110:
  90:..//kernel/core/tos_mmheap.c ****     return 32 - tos_cpu_clz(x);
 975              		.loc 1 90 1 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
  90:..//kernel/core/tos_mmheap.c ****     return 32 - tos_cpu_clz(x);
 979              		.loc 1 90 1 is_stmt 0 view .LVU275
 980 0000 08B5     		push	{r3, lr}
 981              	.LCFI10:
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 3, -8
 984              		.cfi_offset 14, -4
  91:..//kernel/core/tos_mmheap.c **** }
 985              		.loc 1 91 5 is_stmt 1 view .LVU276
  91:..//kernel/core/tos_mmheap.c **** }
 986              		.loc 1 91 17 is_stmt 0 view .LVU277
 987 0002 FFF7FEFF 		bl	tos_cpu_clz
 988              	.LVL85:
  92:..//kernel/core/tos_mmheap.c **** #endif
 989              		.loc 1 92 1 view .LVU278
 990 0006 C0F12000 		rsb	r0, r0, #32
 991 000a 08BD     		pop	{r3, pc}
 992              		.cfi_endproc
 993              	.LFE110:
 995              		.section	.text.__fls,"ax",%progbits
 996              		.align	1
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1000              		.fpu softvfp
 1002              	__fls:
 1003              	.LVL86:
 1004              	.LFB112:
 101:..//kernel/core/tos_mmheap.c ****     return generic_fls(word) - 1;
 1005              		.loc 1 101 1 is_stmt 1 view -0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 101:..//kernel/core/tos_mmheap.c ****     return generic_fls(word) - 1;
 1009              		.loc 1 101 1 is_stmt 0 view .LVU280
 1010 0000 08B5     		push	{r3, lr}
 1011              	.LCFI11:
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 3, -8
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 30


 1014              		.cfi_offset 14, -4
 102:..//kernel/core/tos_mmheap.c **** }
 1015              		.loc 1 102 5 is_stmt 1 view .LVU281
 102:..//kernel/core/tos_mmheap.c **** }
 1016              		.loc 1 102 12 is_stmt 0 view .LVU282
 1017 0002 FFF7FEFF 		bl	generic_fls
 1018              	.LVL87:
 103:..//kernel/core/tos_mmheap.c **** 
 1019              		.loc 1 103 1 view .LVU283
 1020 0006 0138     		subs	r0, r0, #1
 1021 0008 08BD     		pop	{r3, pc}
 1022              		.cfi_endproc
 1023              	.LFE112:
 1025              		.section	.text.mapping_insert,"ax",%progbits
 1026              		.align	1
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1030              		.fpu softvfp
 1032              	mapping_insert:
 1033              	.LVL88:
 1034              	.LFB113:
 110:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 1035              		.loc 1 110 1 is_stmt 1 view -0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 110:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 1039              		.loc 1 110 1 is_stmt 0 view .LVU285
 1040 0000 70B5     		push	{r4, r5, r6, lr}
 1041              	.LCFI12:
 1042              		.cfi_def_cfa_offset 16
 1043              		.cfi_offset 4, -16
 1044              		.cfi_offset 5, -12
 1045              		.cfi_offset 6, -8
 1046              		.cfi_offset 14, -4
 1047 0002 0446     		mov	r4, r0
 1048 0004 0E46     		mov	r6, r1
 1049 0006 1546     		mov	r5, r2
 111:..//kernel/core/tos_mmheap.c **** 
 1050              		.loc 1 111 5 is_stmt 1 view .LVU286
 113:..//kernel/core/tos_mmheap.c ****         /* Store small blocks in first list. */
 1051              		.loc 1 113 5 view .LVU287
 113:..//kernel/core/tos_mmheap.c ****         /* Store small blocks in first list. */
 1052              		.loc 1 113 8 is_stmt 0 view .LVU288
 1053 0008 7F28     		cmp	r0, #127
 1054 000a 09D8     		bhi	.L59
 115:..//kernel/core/tos_mmheap.c ****         sl = (int)size / (K_MMHEAP_SMALL_BLOCK_SIZE / K_MMHEAP_SL_INDEX_COUNT);
 1055              		.loc 1 115 9 is_stmt 1 view .LVU289
 1056              	.LVL89:
 116:..//kernel/core/tos_mmheap.c ****     } else {
 1057              		.loc 1 116 9 view .LVU290
 116:..//kernel/core/tos_mmheap.c ****     } else {
 1058              		.loc 1 116 12 is_stmt 0 view .LVU291
 1059 000c 0346     		mov	r3, r0
 1060 000e 0028     		cmp	r0, #0
 1061 0010 04DB     		blt	.L63
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 31


 1062              	.L60:
 116:..//kernel/core/tos_mmheap.c ****     } else {
 1063              		.loc 1 116 12 view .LVU292
 1064 0012 9B10     		asrs	r3, r3, #2
 1065              	.LVL90:
 115:..//kernel/core/tos_mmheap.c ****         sl = (int)size / (K_MMHEAP_SMALL_BLOCK_SIZE / K_MMHEAP_SL_INDEX_COUNT);
 1066              		.loc 1 115 12 view .LVU293
 1067 0014 0020     		movs	r0, #0
 1068              	.LVL91:
 1069              	.L61:
 122:..//kernel/core/tos_mmheap.c ****     *sli = sl;
 1070              		.loc 1 122 5 is_stmt 1 view .LVU294
 122:..//kernel/core/tos_mmheap.c ****     *sli = sl;
 1071              		.loc 1 122 10 is_stmt 0 view .LVU295
 1072 0016 3060     		str	r0, [r6]
 123:..//kernel/core/tos_mmheap.c **** }
 1073              		.loc 1 123 5 is_stmt 1 view .LVU296
 123:..//kernel/core/tos_mmheap.c **** }
 1074              		.loc 1 123 10 is_stmt 0 view .LVU297
 1075 0018 2B60     		str	r3, [r5]
 124:..//kernel/core/tos_mmheap.c **** 
 1076              		.loc 1 124 1 view .LVU298
 1077 001a 70BD     		pop	{r4, r5, r6, pc}
 1078              	.LVL92:
 1079              	.L63:
 116:..//kernel/core/tos_mmheap.c ****     } else {
 1080              		.loc 1 116 12 view .LVU299
 1081 001c C31C     		adds	r3, r0, #3
 1082 001e F8E7     		b	.L60
 1083              	.LVL93:
 1084              	.L59:
 118:..//kernel/core/tos_mmheap.c ****         sl = ((int)size >> (fl - K_MMHEAP_SL_INDEX_COUNT_LOG2)) ^ (1 << K_MMHEAP_SL_INDEX_COUNT_LOG
 1085              		.loc 1 118 9 is_stmt 1 view .LVU300
 118:..//kernel/core/tos_mmheap.c ****         sl = ((int)size >> (fl - K_MMHEAP_SL_INDEX_COUNT_LOG2)) ^ (1 << K_MMHEAP_SL_INDEX_COUNT_LOG
 1086              		.loc 1 118 14 is_stmt 0 view .LVU301
 1087 0020 FFF7FEFF 		bl	__fls
 1088              	.LVL94:
 119:..//kernel/core/tos_mmheap.c ****         fl -= (K_MMHEAP_FL_INDEX_SHIFT - 1);
 1089              		.loc 1 119 9 is_stmt 1 view .LVU302
 119:..//kernel/core/tos_mmheap.c ****         fl -= (K_MMHEAP_FL_INDEX_SHIFT - 1);
 1090              		.loc 1 119 32 is_stmt 0 view .LVU303
 1091 0024 431F     		subs	r3, r0, #5
 119:..//kernel/core/tos_mmheap.c ****         fl -= (K_MMHEAP_FL_INDEX_SHIFT - 1);
 1092              		.loc 1 119 25 view .LVU304
 1093 0026 1C41     		asrs	r4, r4, r3
 1094              	.LVL95:
 119:..//kernel/core/tos_mmheap.c ****         fl -= (K_MMHEAP_FL_INDEX_SHIFT - 1);
 1095              		.loc 1 119 12 view .LVU305
 1096 0028 84F02003 		eor	r3, r4, #32
 1097              	.LVL96:
 120:..//kernel/core/tos_mmheap.c ****     }
 1098              		.loc 1 120 9 is_stmt 1 view .LVU306
 120:..//kernel/core/tos_mmheap.c ****     }
 1099              		.loc 1 120 12 is_stmt 0 view .LVU307
 1100 002c 0638     		subs	r0, r0, #6
 1101              	.LVL97:
 120:..//kernel/core/tos_mmheap.c ****     }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 32


 1102              		.loc 1 120 12 view .LVU308
 1103 002e F2E7     		b	.L61
 1104              		.cfi_endproc
 1105              	.LFE113:
 1107              		.section	.text.blk_insert,"ax",%progbits
 1108              		.align	1
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1112              		.fpu softvfp
 1114              	blk_insert:
 1115              	.LVL98:
 1116              	.LFB138:
 315:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 1117              		.loc 1 315 1 is_stmt 1 view -0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 8
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 315:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 1121              		.loc 1 315 1 is_stmt 0 view .LVU310
 1122 0000 10B5     		push	{r4, lr}
 1123              	.LCFI13:
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 4, -8
 1126              		.cfi_offset 14, -4
 1127 0002 82B0     		sub	sp, sp, #8
 1128              	.LCFI14:
 1129              		.cfi_def_cfa_offset 16
 1130 0004 0446     		mov	r4, r0
 316:..//kernel/core/tos_mmheap.c **** 
 1131              		.loc 1 316 5 is_stmt 1 view .LVU311
 318:..//kernel/core/tos_mmheap.c ****     insert_free_block(blk, fl, sl);
 1132              		.loc 1 318 5 view .LVU312
 1133              	.LVL99:
 1134              	.LBB126:
 1135              	.LBI126:
 138:..//kernel/core/tos_mmheap.c **** {
 1136              		.loc 1 138 26 view .LVU313
 1137              	.LBB127:
 140:..//kernel/core/tos_mmheap.c **** }
 1138              		.loc 1 140 5 view .LVU314
 140:..//kernel/core/tos_mmheap.c **** }
 1139              		.loc 1 140 15 is_stmt 0 view .LVU315
 1140 0006 4068     		ldr	r0, [r0, #4]
 1141              	.LVL100:
 140:..//kernel/core/tos_mmheap.c **** }
 1142              		.loc 1 140 15 view .LVU316
 1143              	.LBE127:
 1144              	.LBE126:
 318:..//kernel/core/tos_mmheap.c ****     insert_free_block(blk, fl, sl);
 1145              		.loc 1 318 5 view .LVU317
 1146 0008 6A46     		mov	r2, sp
 1147 000a 01A9     		add	r1, sp, #4
 1148 000c 20F00300 		bic	r0, r0, #3
 1149 0010 FFF7FEFF 		bl	mapping_insert
 1150              	.LVL101:
 319:..//kernel/core/tos_mmheap.c **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 33


 1151              		.loc 1 319 5 is_stmt 1 view .LVU318
 1152 0014 009A     		ldr	r2, [sp]
 1153 0016 0199     		ldr	r1, [sp, #4]
 1154 0018 2046     		mov	r0, r4
 1155 001a FFF7FEFF 		bl	insert_free_block
 1156              	.LVL102:
 320:..//kernel/core/tos_mmheap.c **** 
 1157              		.loc 1 320 1 is_stmt 0 view .LVU319
 1158 001e 02B0     		add	sp, sp, #8
 1159              	.LCFI15:
 1160              		.cfi_def_cfa_offset 8
 1161              		@ sp needed
 1162 0020 10BD     		pop	{r4, pc}
 320:..//kernel/core/tos_mmheap.c **** 
 1163              		.loc 1 320 1 view .LVU320
 1164              		.cfi_endproc
 1165              	.LFE138:
 1167              		.section	.text.blk_trim_free,"ax",%progbits
 1168              		.align	1
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1172              		.fpu softvfp
 1174              	blk_trim_free:
 1175              	.LVL103:
 1176              	.LFB144:
 383:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *remaining_blk;
 1177              		.loc 1 383 1 is_stmt 1 view -0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 383:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *remaining_blk;
 1181              		.loc 1 383 1 is_stmt 0 view .LVU322
 1182 0000 38B5     		push	{r3, r4, r5, lr}
 1183              	.LCFI16:
 1184              		.cfi_def_cfa_offset 16
 1185              		.cfi_offset 3, -16
 1186              		.cfi_offset 4, -12
 1187              		.cfi_offset 5, -8
 1188              		.cfi_offset 14, -4
 1189 0002 0446     		mov	r4, r0
 1190 0004 0D46     		mov	r5, r1
 384:..//kernel/core/tos_mmheap.c **** 
 1191              		.loc 1 384 5 is_stmt 1 view .LVU323
 386:..//kernel/core/tos_mmheap.c ****         remaining_blk = blk_split(blk, size);
 1192              		.loc 1 386 5 view .LVU324
 386:..//kernel/core/tos_mmheap.c ****         remaining_blk = blk_split(blk, size);
 1193              		.loc 1 386 9 is_stmt 0 view .LVU325
 1194 0006 FFF7FEFF 		bl	blk_can_split
 1195              	.LVL104:
 386:..//kernel/core/tos_mmheap.c ****         remaining_blk = blk_split(blk, size);
 1196              		.loc 1 386 8 view .LVU326
 1197 000a 00B9     		cbnz	r0, .L69
 1198              	.LVL105:
 1199              	.L66:
 392:..//kernel/core/tos_mmheap.c **** 
 1200              		.loc 1 392 1 view .LVU327
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 34


 1201 000c 38BD     		pop	{r3, r4, r5, pc}
 1202              	.LVL106:
 1203              	.L69:
 387:..//kernel/core/tos_mmheap.c ****         blk_link_next(blk);
 1204              		.loc 1 387 9 is_stmt 1 view .LVU328
 387:..//kernel/core/tos_mmheap.c ****         blk_link_next(blk);
 1205              		.loc 1 387 25 is_stmt 0 view .LVU329
 1206 000e 2946     		mov	r1, r5
 1207 0010 2046     		mov	r0, r4
 1208 0012 FFF7FEFF 		bl	blk_split
 1209              	.LVL107:
 1210 0016 0546     		mov	r5, r0
 1211              	.LVL108:
 388:..//kernel/core/tos_mmheap.c ****         blk_set_prev_free(remaining_blk);
 1212              		.loc 1 388 9 is_stmt 1 view .LVU330
 1213 0018 2046     		mov	r0, r4
 1214              	.LVL109:
 388:..//kernel/core/tos_mmheap.c ****         blk_set_prev_free(remaining_blk);
 1215              		.loc 1 388 9 is_stmt 0 view .LVU331
 1216 001a FFF7FEFF 		bl	blk_link_next
 1217              	.LVL110:
 389:..//kernel/core/tos_mmheap.c ****         blk_insert(remaining_blk);
 1218              		.loc 1 389 9 is_stmt 1 view .LVU332
 1219              	.LBB128:
 1220              	.LBI128:
 173:..//kernel/core/tos_mmheap.c **** {
 1221              		.loc 1 173 24 view .LVU333
 1222              	.LBB129:
 175:..//kernel/core/tos_mmheap.c **** }
 1223              		.loc 1 175 5 view .LVU334
 175:..//kernel/core/tos_mmheap.c **** }
 1224              		.loc 1 175 15 is_stmt 0 view .LVU335
 1225 001e 6B68     		ldr	r3, [r5, #4]
 1226 0020 43F00203 		orr	r3, r3, #2
 1227 0024 6B60     		str	r3, [r5, #4]
 1228              	.LVL111:
 175:..//kernel/core/tos_mmheap.c **** }
 1229              		.loc 1 175 15 view .LVU336
 1230              	.LBE129:
 1231              	.LBE128:
 390:..//kernel/core/tos_mmheap.c ****     }
 1232              		.loc 1 390 9 is_stmt 1 view .LVU337
 1233 0026 2846     		mov	r0, r5
 1234 0028 FFF7FEFF 		bl	blk_insert
 1235              	.LVL112:
 392:..//kernel/core/tos_mmheap.c **** 
 1236              		.loc 1 392 1 is_stmt 0 view .LVU338
 1237 002c EEE7     		b	.L66
 1238              		.cfi_endproc
 1239              	.LFE144:
 1241              		.section	.text.blk_prepare_used,"ax",%progbits
 1242              		.align	1
 1243              		.syntax unified
 1244              		.thumb
 1245              		.thumb_func
 1246              		.fpu softvfp
 1248              	blk_prepare_used:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 35


 1249              	.LVL113:
 1250              	.LFB150:
 508:..//kernel/core/tos_mmheap.c ****     if (!blk) {
 1251              		.loc 1 508 1 is_stmt 1 view -0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 0
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 508:..//kernel/core/tos_mmheap.c ****     if (!blk) {
 1255              		.loc 1 508 1 is_stmt 0 view .LVU340
 1256 0000 10B5     		push	{r4, lr}
 1257              	.LCFI17:
 1258              		.cfi_def_cfa_offset 8
 1259              		.cfi_offset 4, -8
 1260              		.cfi_offset 14, -4
 509:..//kernel/core/tos_mmheap.c ****         return K_NULL;
 1261              		.loc 1 509 5 is_stmt 1 view .LVU341
 509:..//kernel/core/tos_mmheap.c ****         return K_NULL;
 1262              		.loc 1 509 8 is_stmt 0 view .LVU342
 1263 0002 0446     		mov	r4, r0
 1264 0004 30B1     		cbz	r0, .L70
 512:..//kernel/core/tos_mmheap.c ****     blk_mark_as_used(blk);
 1265              		.loc 1 512 5 is_stmt 1 view .LVU343
 1266 0006 FFF7FEFF 		bl	blk_trim_free
 1267              	.LVL114:
 513:..//kernel/core/tos_mmheap.c ****     return blk_to_ptr(blk);
 1268              		.loc 1 513 5 view .LVU344
 1269 000a 2046     		mov	r0, r4
 1270 000c FFF7FEFF 		bl	blk_mark_as_used
 1271              	.LVL115:
 514:..//kernel/core/tos_mmheap.c **** }
 1272              		.loc 1 514 5 view .LVU345
 1273              	.LBB130:
 1274              	.LBI130:
 188:..//kernel/core/tos_mmheap.c **** {
 1275              		.loc 1 188 25 view .LVU346
 1276              	.LBB131:
 190:..//kernel/core/tos_mmheap.c **** }
 1277              		.loc 1 190 5 view .LVU347
 190:..//kernel/core/tos_mmheap.c **** }
 1278              		.loc 1 190 37 is_stmt 0 view .LVU348
 1279 0010 04F10800 		add	r0, r4, #8
 1280              	.LVL116:
 1281              	.L70:
 190:..//kernel/core/tos_mmheap.c **** }
 1282              		.loc 1 190 37 view .LVU349
 1283              	.LBE131:
 1284              	.LBE130:
 515:..//kernel/core/tos_mmheap.c **** 
 1285              		.loc 1 515 1 view .LVU350
 1286 0014 10BD     		pop	{r4, pc}
 515:..//kernel/core/tos_mmheap.c **** 
 1287              		.loc 1 515 1 view .LVU351
 1288              		.cfi_endproc
 1289              	.LFE150:
 1291              		.section	.text.blk_trim_free_leading,"ax",%progbits
 1292              		.align	1
 1293              		.syntax unified
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 36


 1294              		.thumb
 1295              		.thumb_func
 1296              		.fpu softvfp
 1298              	blk_trim_free_leading:
 1299              	.LVL117:
 1300              	.LFB146:
 410:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *remaining_blk;
 1301              		.loc 1 410 1 is_stmt 1 view -0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 410:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *remaining_blk;
 1305              		.loc 1 410 1 is_stmt 0 view .LVU353
 1306 0000 38B5     		push	{r3, r4, r5, lr}
 1307              	.LCFI18:
 1308              		.cfi_def_cfa_offset 16
 1309              		.cfi_offset 3, -16
 1310              		.cfi_offset 4, -12
 1311              		.cfi_offset 5, -8
 1312              		.cfi_offset 14, -4
 1313 0002 0446     		mov	r4, r0
 1314 0004 0D46     		mov	r5, r1
 411:..//kernel/core/tos_mmheap.c **** 
 1315              		.loc 1 411 5 is_stmt 1 view .LVU354
 413:..//kernel/core/tos_mmheap.c ****     if (blk_can_split(blk, size)) {
 1316              		.loc 1 413 5 view .LVU355
 1317              	.LVL118:
 414:..//kernel/core/tos_mmheap.c ****         /* We want the 2nd block. */
 1318              		.loc 1 414 5 view .LVU356
 414:..//kernel/core/tos_mmheap.c ****         /* We want the 2nd block. */
 1319              		.loc 1 414 9 is_stmt 0 view .LVU357
 1320 0006 FFF7FEFF 		bl	blk_can_split
 1321              	.LVL119:
 414:..//kernel/core/tos_mmheap.c ****         /* We want the 2nd block. */
 1322              		.loc 1 414 8 view .LVU358
 1323 000a 08B9     		cbnz	r0, .L77
 1324              	.LVL120:
 1325              	.L75:
 423:..//kernel/core/tos_mmheap.c **** }
 1326              		.loc 1 423 5 is_stmt 1 view .LVU359
 424:..//kernel/core/tos_mmheap.c **** 
 1327              		.loc 1 424 1 is_stmt 0 view .LVU360
 1328 000c 2046     		mov	r0, r4
 1329 000e 38BD     		pop	{r3, r4, r5, pc}
 1330              	.LVL121:
 1331              	.L77:
 416:..//kernel/core/tos_mmheap.c ****         blk_set_prev_free(remaining_blk);
 1332              		.loc 1 416 9 is_stmt 1 view .LVU361
 416:..//kernel/core/tos_mmheap.c ****         blk_set_prev_free(remaining_blk);
 1333              		.loc 1 416 25 is_stmt 0 view .LVU362
 1334 0010 291F     		subs	r1, r5, #4
 1335 0012 2046     		mov	r0, r4
 1336 0014 FFF7FEFF 		bl	blk_split
 1337              	.LVL122:
 1338 0018 0546     		mov	r5, r0
 1339              	.LVL123:
 417:..//kernel/core/tos_mmheap.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 37


 1340              		.loc 1 417 9 is_stmt 1 view .LVU363
 1341              	.LBB132:
 1342              	.LBI132:
 173:..//kernel/core/tos_mmheap.c **** {
 1343              		.loc 1 173 24 view .LVU364
 1344              	.LBB133:
 175:..//kernel/core/tos_mmheap.c **** }
 1345              		.loc 1 175 5 view .LVU365
 175:..//kernel/core/tos_mmheap.c **** }
 1346              		.loc 1 175 15 is_stmt 0 view .LVU366
 1347 001a 4368     		ldr	r3, [r0, #4]
 1348 001c 43F00203 		orr	r3, r3, #2
 1349 0020 4360     		str	r3, [r0, #4]
 1350              	.LVL124:
 175:..//kernel/core/tos_mmheap.c **** }
 1351              		.loc 1 175 15 view .LVU367
 1352              	.LBE133:
 1353              	.LBE132:
 419:..//kernel/core/tos_mmheap.c ****         blk_insert(blk);
 1354              		.loc 1 419 9 is_stmt 1 view .LVU368
 1355 0022 2046     		mov	r0, r4
 1356              	.LVL125:
 419:..//kernel/core/tos_mmheap.c ****         blk_insert(blk);
 1357              		.loc 1 419 9 is_stmt 0 view .LVU369
 1358 0024 FFF7FEFF 		bl	blk_link_next
 1359              	.LVL126:
 420:..//kernel/core/tos_mmheap.c ****     }
 1360              		.loc 1 420 9 is_stmt 1 view .LVU370
 1361 0028 2046     		mov	r0, r4
 1362 002a FFF7FEFF 		bl	blk_insert
 1363              	.LVL127:
 416:..//kernel/core/tos_mmheap.c ****         blk_set_prev_free(remaining_blk);
 1364              		.loc 1 416 25 is_stmt 0 view .LVU371
 1365 002e 2C46     		mov	r4, r5
 1366              	.LVL128:
 416:..//kernel/core/tos_mmheap.c ****         blk_set_prev_free(remaining_blk);
 1367              		.loc 1 416 25 view .LVU372
 1368 0030 ECE7     		b	.L75
 1369              		.cfi_endproc
 1370              	.LFE146:
 1372              		.section	.text.blk_remove,"ax",%progbits
 1373              		.align	1
 1374              		.syntax unified
 1375              		.thumb
 1376              		.thumb_func
 1377              		.fpu softvfp
 1379              	blk_remove:
 1380              	.LVL129:
 1381              	.LFB137:
 306:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 1382              		.loc 1 306 1 is_stmt 1 view -0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 8
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 306:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 1386              		.loc 1 306 1 is_stmt 0 view .LVU374
 1387 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 38


 1388              	.LCFI19:
 1389              		.cfi_def_cfa_offset 8
 1390              		.cfi_offset 4, -8
 1391              		.cfi_offset 14, -4
 1392 0002 82B0     		sub	sp, sp, #8
 1393              	.LCFI20:
 1394              		.cfi_def_cfa_offset 16
 1395 0004 0446     		mov	r4, r0
 307:..//kernel/core/tos_mmheap.c **** 
 1396              		.loc 1 307 5 is_stmt 1 view .LVU375
 309:..//kernel/core/tos_mmheap.c ****     remove_free_block(blk, fl, sl);
 1397              		.loc 1 309 5 view .LVU376
 1398              	.LVL130:
 1399              	.LBB134:
 1400              	.LBI134:
 138:..//kernel/core/tos_mmheap.c **** {
 1401              		.loc 1 138 26 view .LVU377
 1402              	.LBB135:
 140:..//kernel/core/tos_mmheap.c **** }
 1403              		.loc 1 140 5 view .LVU378
 140:..//kernel/core/tos_mmheap.c **** }
 1404              		.loc 1 140 15 is_stmt 0 view .LVU379
 1405 0006 4068     		ldr	r0, [r0, #4]
 1406              	.LVL131:
 140:..//kernel/core/tos_mmheap.c **** }
 1407              		.loc 1 140 15 view .LVU380
 1408              	.LBE135:
 1409              	.LBE134:
 309:..//kernel/core/tos_mmheap.c ****     remove_free_block(blk, fl, sl);
 1410              		.loc 1 309 5 view .LVU381
 1411 0008 6A46     		mov	r2, sp
 1412 000a 01A9     		add	r1, sp, #4
 1413 000c 20F00300 		bic	r0, r0, #3
 1414 0010 FFF7FEFF 		bl	mapping_insert
 1415              	.LVL132:
 310:..//kernel/core/tos_mmheap.c **** }
 1416              		.loc 1 310 5 is_stmt 1 view .LVU382
 1417 0014 009A     		ldr	r2, [sp]
 1418 0016 0199     		ldr	r1, [sp, #4]
 1419 0018 2046     		mov	r0, r4
 1420 001a FFF7FEFF 		bl	remove_free_block
 1421              	.LVL133:
 311:..//kernel/core/tos_mmheap.c **** 
 1422              		.loc 1 311 1 is_stmt 0 view .LVU383
 1423 001e 02B0     		add	sp, sp, #8
 1424              	.LCFI21:
 1425              		.cfi_def_cfa_offset 8
 1426              		@ sp needed
 1427 0020 10BD     		pop	{r4, pc}
 311:..//kernel/core/tos_mmheap.c **** 
 1428              		.loc 1 311 1 view .LVU384
 1429              		.cfi_endproc
 1430              	.LFE137:
 1432              		.section	.text.blk_merge_prev,"ax",%progbits
 1433              		.align	1
 1434              		.syntax unified
 1435              		.thumb
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 39


 1436              		.thumb_func
 1437              		.fpu softvfp
 1439              	blk_merge_prev:
 1440              	.LVL134:
 1441              	.LFB142:
 355:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *prev_blk;
 1442              		.loc 1 355 1 is_stmt 1 view -0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 0
 1445              		@ frame_needed = 0, uses_anonymous_args = 0
 355:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *prev_blk;
 1446              		.loc 1 355 1 is_stmt 0 view .LVU386
 1447 0000 38B5     		push	{r3, r4, r5, lr}
 1448              	.LCFI22:
 1449              		.cfi_def_cfa_offset 16
 1450              		.cfi_offset 3, -16
 1451              		.cfi_offset 4, -12
 1452              		.cfi_offset 5, -8
 1453              		.cfi_offset 14, -4
 1454 0002 0446     		mov	r4, r0
 356:..//kernel/core/tos_mmheap.c **** 
 1455              		.loc 1 356 5 is_stmt 1 view .LVU387
 358:..//kernel/core/tos_mmheap.c ****         prev_blk = blk_prev(blk);
 1456              		.loc 1 358 5 view .LVU388
 1457              	.LVL135:
 1458              	.LBB136:
 1459              	.LBI136:
 168:..//kernel/core/tos_mmheap.c **** {
 1460              		.loc 1 168 23 view .LVU389
 1461              	.LBB137:
 170:..//kernel/core/tos_mmheap.c **** }
 1462              		.loc 1 170 5 view .LVU390
 170:..//kernel/core/tos_mmheap.c **** }
 1463              		.loc 1 170 15 is_stmt 0 view .LVU391
 1464 0004 4368     		ldr	r3, [r0, #4]
 1465              	.LVL136:
 170:..//kernel/core/tos_mmheap.c **** }
 1466              		.loc 1 170 15 view .LVU392
 1467              	.LBE137:
 1468              	.LBE136:
 358:..//kernel/core/tos_mmheap.c ****         prev_blk = blk_prev(blk);
 1469              		.loc 1 358 8 view .LVU393
 1470 0006 13F0020F 		tst	r3, #2
 1471 000a 01D1     		bne	.L83
 1472              	.L81:
 364:..//kernel/core/tos_mmheap.c **** }
 1473              		.loc 1 364 5 is_stmt 1 view .LVU394
 365:..//kernel/core/tos_mmheap.c **** 
 1474              		.loc 1 365 1 is_stmt 0 view .LVU395
 1475 000c 2046     		mov	r0, r4
 365:..//kernel/core/tos_mmheap.c **** 
 1476              		.loc 1 365 1 view .LVU396
 1477 000e 38BD     		pop	{r3, r4, r5, pc}
 1478              	.L83:
 359:..//kernel/core/tos_mmheap.c ****         blk_remove(prev_blk);
 1479              		.loc 1 359 9 is_stmt 1 view .LVU397
 1480              	.LVL137:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 40


 1481              	.LBB138:
 1482              	.LBI138:
 200:..//kernel/core/tos_mmheap.c **** {
 1483              		.loc 1 200 33 view .LVU398
 1484              	.LBB139:
 202:..//kernel/core/tos_mmheap.c **** }
 1485              		.loc 1 202 5 view .LVU399
 202:..//kernel/core/tos_mmheap.c **** }
 1486              		.loc 1 202 15 is_stmt 0 view .LVU400
 1487 0010 0568     		ldr	r5, [r0]
 1488              	.LVL138:
 202:..//kernel/core/tos_mmheap.c **** }
 1489              		.loc 1 202 15 view .LVU401
 1490              	.LBE139:
 1491              	.LBE138:
 360:..//kernel/core/tos_mmheap.c ****         blk = blk_absorb(prev_blk, blk);
 1492              		.loc 1 360 9 is_stmt 1 view .LVU402
 1493 0012 2846     		mov	r0, r5
 1494              	.LVL139:
 360:..//kernel/core/tos_mmheap.c ****         blk = blk_absorb(prev_blk, blk);
 1495              		.loc 1 360 9 is_stmt 0 view .LVU403
 1496 0014 FFF7FEFF 		bl	blk_remove
 1497              	.LVL140:
 361:..//kernel/core/tos_mmheap.c ****     }
 1498              		.loc 1 361 9 is_stmt 1 view .LVU404
 361:..//kernel/core/tos_mmheap.c ****     }
 1499              		.loc 1 361 15 is_stmt 0 view .LVU405
 1500 0018 2146     		mov	r1, r4
 1501 001a 2846     		mov	r0, r5
 1502 001c FFF7FEFF 		bl	blk_absorb
 1503              	.LVL141:
 1504 0020 0446     		mov	r4, r0
 1505              	.LVL142:
 361:..//kernel/core/tos_mmheap.c ****     }
 1506              		.loc 1 361 15 view .LVU406
 1507 0022 F3E7     		b	.L81
 1508              		.cfi_endproc
 1509              	.LFE142:
 1511              		.section	.text.blk_merge_next,"ax",%progbits
 1512              		.align	1
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1516              		.fpu softvfp
 1518              	blk_merge_next:
 1519              	.LVL143:
 1520              	.LFB143:
 369:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *next_blk;
 1521              		.loc 1 369 1 is_stmt 1 view -0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 369:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *next_blk;
 1525              		.loc 1 369 1 is_stmt 0 view .LVU408
 1526 0000 38B5     		push	{r3, r4, r5, lr}
 1527              	.LCFI23:
 1528              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 41


 1529              		.cfi_offset 3, -16
 1530              		.cfi_offset 4, -12
 1531              		.cfi_offset 5, -8
 1532              		.cfi_offset 14, -4
 1533 0002 0446     		mov	r4, r0
 370:..//kernel/core/tos_mmheap.c **** 
 1534              		.loc 1 370 5 is_stmt 1 view .LVU409
 372:..//kernel/core/tos_mmheap.c ****     if (blk_is_free(next_blk)) {
 1535              		.loc 1 372 5 view .LVU410
 372:..//kernel/core/tos_mmheap.c ****     if (blk_is_free(next_blk)) {
 1536              		.loc 1 372 16 is_stmt 0 view .LVU411
 1537 0004 FFF7FEFF 		bl	blk_next
 1538              	.LVL144:
 373:..//kernel/core/tos_mmheap.c ****         blk_remove(next_blk);
 1539              		.loc 1 373 5 is_stmt 1 view .LVU412
 1540              	.LBB140:
 1541              	.LBI140:
 153:..//kernel/core/tos_mmheap.c **** {
 1542              		.loc 1 153 23 view .LVU413
 1543              	.LBB141:
 155:..//kernel/core/tos_mmheap.c **** }
 1544              		.loc 1 155 5 view .LVU414
 155:..//kernel/core/tos_mmheap.c **** }
 1545              		.loc 1 155 15 is_stmt 0 view .LVU415
 1546 0008 4368     		ldr	r3, [r0, #4]
 1547              	.LVL145:
 155:..//kernel/core/tos_mmheap.c **** }
 1548              		.loc 1 155 15 view .LVU416
 1549              	.LBE141:
 1550              	.LBE140:
 373:..//kernel/core/tos_mmheap.c ****         blk_remove(next_blk);
 1551              		.loc 1 373 8 view .LVU417
 1552 000a 13F0010F 		tst	r3, #1
 1553 000e 01D1     		bne	.L87
 1554              	.LVL146:
 1555              	.L85:
 378:..//kernel/core/tos_mmheap.c **** }
 1556              		.loc 1 378 5 is_stmt 1 view .LVU418
 379:..//kernel/core/tos_mmheap.c **** 
 1557              		.loc 1 379 1 is_stmt 0 view .LVU419
 1558 0010 2046     		mov	r0, r4
 1559 0012 38BD     		pop	{r3, r4, r5, pc}
 1560              	.LVL147:
 1561              	.L87:
 379:..//kernel/core/tos_mmheap.c **** 
 1562              		.loc 1 379 1 view .LVU420
 1563 0014 0546     		mov	r5, r0
 374:..//kernel/core/tos_mmheap.c ****         blk = blk_absorb(blk, next_blk);
 1564              		.loc 1 374 9 is_stmt 1 view .LVU421
 1565 0016 FFF7FEFF 		bl	blk_remove
 1566              	.LVL148:
 375:..//kernel/core/tos_mmheap.c ****     }
 1567              		.loc 1 375 9 view .LVU422
 375:..//kernel/core/tos_mmheap.c ****     }
 1568              		.loc 1 375 15 is_stmt 0 view .LVU423
 1569 001a 2946     		mov	r1, r5
 1570 001c 2046     		mov	r0, r4
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 42


 1571 001e FFF7FEFF 		bl	blk_absorb
 1572              	.LVL149:
 1573 0022 0446     		mov	r4, r0
 1574              	.LVL150:
 375:..//kernel/core/tos_mmheap.c ****     }
 1575              		.loc 1 375 15 view .LVU424
 1576 0024 F4E7     		b	.L85
 1577              		.cfi_endproc
 1578              	.LFE143:
 1580              		.section	.text.blk_trim_used,"ax",%progbits
 1581              		.align	1
 1582              		.syntax unified
 1583              		.thumb
 1584              		.thumb_func
 1585              		.fpu softvfp
 1587              	blk_trim_used:
 1588              	.LVL151:
 1589              	.LFB145:
 396:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *remaining_blk;
 1590              		.loc 1 396 1 is_stmt 1 view -0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 0
 1593              		@ frame_needed = 0, uses_anonymous_args = 0
 396:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *remaining_blk;
 1594              		.loc 1 396 1 is_stmt 0 view .LVU426
 1595 0000 38B5     		push	{r3, r4, r5, lr}
 1596              	.LCFI24:
 1597              		.cfi_def_cfa_offset 16
 1598              		.cfi_offset 3, -16
 1599              		.cfi_offset 4, -12
 1600              		.cfi_offset 5, -8
 1601              		.cfi_offset 14, -4
 1602 0002 0446     		mov	r4, r0
 1603 0004 0D46     		mov	r5, r1
 397:..//kernel/core/tos_mmheap.c **** 
 1604              		.loc 1 397 5 is_stmt 1 view .LVU427
 399:..//kernel/core/tos_mmheap.c ****         /* If the next block is free, we must coalesce. */
 1605              		.loc 1 399 5 view .LVU428
 399:..//kernel/core/tos_mmheap.c ****         /* If the next block is free, we must coalesce. */
 1606              		.loc 1 399 9 is_stmt 0 view .LVU429
 1607 0006 FFF7FEFF 		bl	blk_can_split
 1608              	.LVL152:
 399:..//kernel/core/tos_mmheap.c ****         /* If the next block is free, we must coalesce. */
 1609              		.loc 1 399 8 view .LVU430
 1610 000a 00B9     		cbnz	r0, .L91
 1611              	.LVL153:
 1612              	.L88:
 407:..//kernel/core/tos_mmheap.c **** 
 1613              		.loc 1 407 1 view .LVU431
 1614 000c 38BD     		pop	{r3, r4, r5, pc}
 1615              	.LVL154:
 1616              	.L91:
 401:..//kernel/core/tos_mmheap.c ****         blk_set_prev_used(remaining_blk);
 1617              		.loc 1 401 9 is_stmt 1 view .LVU432
 401:..//kernel/core/tos_mmheap.c ****         blk_set_prev_used(remaining_blk);
 1618              		.loc 1 401 25 is_stmt 0 view .LVU433
 1619 000e 2946     		mov	r1, r5
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 43


 1620 0010 2046     		mov	r0, r4
 1621 0012 FFF7FEFF 		bl	blk_split
 1622              	.LVL155:
 1623 0016 0446     		mov	r4, r0
 1624              	.LVL156:
 402:..//kernel/core/tos_mmheap.c **** 
 1625              		.loc 1 402 9 is_stmt 1 view .LVU434
 1626 0018 FFF7FEFF 		bl	blk_set_prev_used
 1627              	.LVL157:
 404:..//kernel/core/tos_mmheap.c ****         blk_insert(remaining_blk);
 1628              		.loc 1 404 9 view .LVU435
 404:..//kernel/core/tos_mmheap.c ****         blk_insert(remaining_blk);
 1629              		.loc 1 404 25 is_stmt 0 view .LVU436
 1630 001c 2046     		mov	r0, r4
 1631 001e FFF7FEFF 		bl	blk_merge_next
 1632              	.LVL158:
 405:..//kernel/core/tos_mmheap.c ****     }
 1633              		.loc 1 405 9 is_stmt 1 view .LVU437
 1634 0022 FFF7FEFF 		bl	blk_insert
 1635              	.LVL159:
 407:..//kernel/core/tos_mmheap.c **** 
 1636              		.loc 1 407 1 is_stmt 0 view .LVU438
 1637 0026 F1E7     		b	.L88
 1638              		.cfi_endproc
 1639              	.LFE145:
 1641              		.section	.text.mapping_search,"ax",%progbits
 1642              		.align	1
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1646              		.fpu softvfp
 1648              	mapping_search:
 1649              	.LVL160:
 1650              	.LFB114:
 128:..//kernel/core/tos_mmheap.c ****     size_t round;
 1651              		.loc 1 128 1 is_stmt 1 view -0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 0, uses_anonymous_args = 0
 128:..//kernel/core/tos_mmheap.c ****     size_t round;
 1655              		.loc 1 128 1 is_stmt 0 view .LVU440
 1656 0000 70B5     		push	{r4, r5, r6, lr}
 1657              	.LCFI25:
 1658              		.cfi_def_cfa_offset 16
 1659              		.cfi_offset 4, -16
 1660              		.cfi_offset 5, -12
 1661              		.cfi_offset 6, -8
 1662              		.cfi_offset 14, -4
 1663 0002 0446     		mov	r4, r0
 1664 0004 0D46     		mov	r5, r1
 1665 0006 1646     		mov	r6, r2
 129:..//kernel/core/tos_mmheap.c **** 
 1666              		.loc 1 129 5 is_stmt 1 view .LVU441
 131:..//kernel/core/tos_mmheap.c ****         round = (1 << (__fls(size) - K_MMHEAP_SL_INDEX_COUNT_LOG2)) - 1;
 1667              		.loc 1 131 5 view .LVU442
 131:..//kernel/core/tos_mmheap.c ****         round = (1 << (__fls(size) - K_MMHEAP_SL_INDEX_COUNT_LOG2)) - 1;
 1668              		.loc 1 131 8 is_stmt 0 view .LVU443
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 44


 1669 0008 7F28     		cmp	r0, #127
 1670 000a 05D8     		bhi	.L95
 1671              	.LVL161:
 1672              	.L93:
 135:..//kernel/core/tos_mmheap.c **** }
 1673              		.loc 1 135 5 is_stmt 1 view .LVU444
 1674 000c 3246     		mov	r2, r6
 1675 000e 2946     		mov	r1, r5
 1676 0010 2046     		mov	r0, r4
 1677 0012 FFF7FEFF 		bl	mapping_insert
 1678              	.LVL162:
 136:..//kernel/core/tos_mmheap.c **** 
 1679              		.loc 1 136 1 is_stmt 0 view .LVU445
 1680 0016 70BD     		pop	{r4, r5, r6, pc}
 1681              	.LVL163:
 1682              	.L95:
 132:..//kernel/core/tos_mmheap.c ****         size += round;
 1683              		.loc 1 132 9 is_stmt 1 view .LVU446
 132:..//kernel/core/tos_mmheap.c ****         size += round;
 1684              		.loc 1 132 24 is_stmt 0 view .LVU447
 1685 0018 FFF7FEFF 		bl	__fls
 1686              	.LVL164:
 132:..//kernel/core/tos_mmheap.c ****         size += round;
 1687              		.loc 1 132 36 view .LVU448
 1688 001c 0538     		subs	r0, r0, #5
 132:..//kernel/core/tos_mmheap.c ****         size += round;
 1689              		.loc 1 132 20 view .LVU449
 1690 001e 0123     		movs	r3, #1
 1691 0020 8340     		lsls	r3, r3, r0
 132:..//kernel/core/tos_mmheap.c ****         size += round;
 1692              		.loc 1 132 69 view .LVU450
 1693 0022 013B     		subs	r3, r3, #1
 1694              	.LVL165:
 133:..//kernel/core/tos_mmheap.c ****     }
 1695              		.loc 1 133 9 is_stmt 1 view .LVU451
 133:..//kernel/core/tos_mmheap.c ****     }
 1696              		.loc 1 133 14 is_stmt 0 view .LVU452
 1697 0024 1C44     		add	r4, r4, r3
 1698              	.LVL166:
 133:..//kernel/core/tos_mmheap.c ****     }
 1699              		.loc 1 133 14 view .LVU453
 1700 0026 F1E7     		b	.L93
 1701              		.cfi_endproc
 1702              	.LFE114:
 1704              		.section	.text.__ffs,"ax",%progbits
 1705              		.align	1
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1709              		.fpu softvfp
 1711              	__ffs:
 1712              	.LVL167:
 1713              	.LFB111:
  96:..//kernel/core/tos_mmheap.c ****     return generic_fls(word & (~word + 1)) - 1;
 1714              		.loc 1 96 1 is_stmt 1 view -0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 45


 1717              		@ frame_needed = 0, uses_anonymous_args = 0
  96:..//kernel/core/tos_mmheap.c ****     return generic_fls(word & (~word + 1)) - 1;
 1718              		.loc 1 96 1 is_stmt 0 view .LVU455
 1719 0000 08B5     		push	{r3, lr}
 1720              	.LCFI26:
 1721              		.cfi_def_cfa_offset 8
 1722              		.cfi_offset 3, -8
 1723              		.cfi_offset 14, -4
  97:..//kernel/core/tos_mmheap.c **** }
 1724              		.loc 1 97 5 is_stmt 1 view .LVU456
  97:..//kernel/core/tos_mmheap.c **** }
 1725              		.loc 1 97 38 is_stmt 0 view .LVU457
 1726 0002 4342     		rsbs	r3, r0, #0
  97:..//kernel/core/tos_mmheap.c **** }
 1727              		.loc 1 97 12 view .LVU458
 1728 0004 1840     		ands	r0, r0, r3
 1729              	.LVL168:
  97:..//kernel/core/tos_mmheap.c **** }
 1730              		.loc 1 97 12 view .LVU459
 1731 0006 FFF7FEFF 		bl	generic_fls
 1732              	.LVL169:
  98:..//kernel/core/tos_mmheap.c **** 
 1733              		.loc 1 98 1 view .LVU460
 1734 000a 0138     		subs	r0, r0, #1
 1735 000c 08BD     		pop	{r3, pc}
 1736              		.cfi_endproc
 1737              	.LFE111:
 1739              		.section	.text.blk_search_suitable,"ax",%progbits
 1740              		.align	1
 1741              		.syntax unified
 1742              		.thumb
 1743              		.thumb_func
 1744              		.fpu softvfp
 1746              	blk_search_suitable:
 1747              	.LVL170:
 1748              	.LFB147:
 427:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 1749              		.loc 1 427 1 is_stmt 1 view -0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 0, uses_anonymous_args = 0
 427:..//kernel/core/tos_mmheap.c ****     int fl, sl;
 1753              		.loc 1 427 1 is_stmt 0 view .LVU462
 1754 0000 70B5     		push	{r4, r5, r6, lr}
 1755              	.LCFI27:
 1756              		.cfi_def_cfa_offset 16
 1757              		.cfi_offset 4, -16
 1758              		.cfi_offset 5, -12
 1759              		.cfi_offset 6, -8
 1760              		.cfi_offset 14, -4
 1761 0002 0646     		mov	r6, r0
 1762 0004 0D46     		mov	r5, r1
 428:..//kernel/core/tos_mmheap.c ****     uint32_t sl_map, fl_map;
 1763              		.loc 1 428 5 is_stmt 1 view .LVU463
 429:..//kernel/core/tos_mmheap.c **** 
 1764              		.loc 1 429 5 view .LVU464
 431:..//kernel/core/tos_mmheap.c ****     sl = *sli;
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 46


 1765              		.loc 1 431 5 view .LVU465
 431:..//kernel/core/tos_mmheap.c ****     sl = *sli;
 1766              		.loc 1 431 8 is_stmt 0 view .LVU466
 1767 0006 0468     		ldr	r4, [r0]
 1768              	.LVL171:
 432:..//kernel/core/tos_mmheap.c **** 
 1769              		.loc 1 432 5 is_stmt 1 view .LVU467
 432:..//kernel/core/tos_mmheap.c **** 
 1770              		.loc 1 432 8 is_stmt 0 view .LVU468
 1771 0008 0968     		ldr	r1, [r1]
 1772              	.LVL172:
 438:..//kernel/core/tos_mmheap.c ****     if (!sl_map) {
 1773              		.loc 1 438 5 is_stmt 1 view .LVU469
 438:..//kernel/core/tos_mmheap.c ****     if (!sl_map) {
 1774              		.loc 1 438 36 is_stmt 0 view .LVU470
 1775 000a 04F10803 		add	r3, r4, #8
 1776 000e 144A     		ldr	r2, .L103
 1777 0010 02EB8302 		add	r2, r2, r3, lsl #2
 1778 0014 5068     		ldr	r0, [r2, #4]
 1779              	.LVL173:
 438:..//kernel/core/tos_mmheap.c ****     if (!sl_map) {
 1780              		.loc 1 438 48 view .LVU471
 1781 0016 4FF0FF33 		mov	r3, #-1
 1782 001a 8B40     		lsls	r3, r3, r1
 1783              	.LVL174:
 439:..//kernel/core/tos_mmheap.c ****         /* No block exists. Search in the next largest first-level list. */
 1784              		.loc 1 439 5 is_stmt 1 view .LVU472
 439:..//kernel/core/tos_mmheap.c ****         /* No block exists. Search in the next largest first-level list. */
 1785              		.loc 1 439 8 is_stmt 0 view .LVU473
 1786 001c 1840     		ands	r0, r0, r3
 1787              	.LVL175:
 439:..//kernel/core/tos_mmheap.c ****         /* No block exists. Search in the next largest first-level list. */
 1788              		.loc 1 439 8 view .LVU474
 1789 001e 12D1     		bne	.L99
 441:..//kernel/core/tos_mmheap.c ****         if (!fl_map) {
 1790              		.loc 1 441 9 is_stmt 1 view .LVU475
 441:..//kernel/core/tos_mmheap.c ****         if (!fl_map) {
 1791              		.loc 1 441 30 is_stmt 0 view .LVU476
 1792 0020 0F4B     		ldr	r3, .L103
 1793 0022 186A     		ldr	r0, [r3, #32]
 1794              	.LVL176:
 441:..//kernel/core/tos_mmheap.c ****         if (!fl_map) {
 1795              		.loc 1 441 55 view .LVU477
 1796 0024 0134     		adds	r4, r4, #1
 1797              	.LVL177:
 441:..//kernel/core/tos_mmheap.c ****         if (!fl_map) {
 1798              		.loc 1 441 48 view .LVU478
 1799 0026 4FF0FF33 		mov	r3, #-1
 1800              	.LVL178:
 441:..//kernel/core/tos_mmheap.c ****         if (!fl_map) {
 1801              		.loc 1 441 48 view .LVU479
 1802 002a 03FA04F4 		lsl	r4, r3, r4
 1803              	.LVL179:
 442:..//kernel/core/tos_mmheap.c ****             /* No free blocks available, memory has been exhausted. */
 1804              		.loc 1 442 9 is_stmt 1 view .LVU480
 442:..//kernel/core/tos_mmheap.c ****             /* No free blocks available, memory has been exhausted. */
 1805              		.loc 1 442 12 is_stmt 0 view .LVU481
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 47


 1806 002e 2040     		ands	r0, r0, r4
 1807              	.LVL180:
 442:..//kernel/core/tos_mmheap.c ****             /* No free blocks available, memory has been exhausted. */
 1808              		.loc 1 442 12 view .LVU482
 1809 0030 14D0     		beq	.L101
 447:..//kernel/core/tos_mmheap.c ****         *fli = fl;
 1810              		.loc 1 447 9 is_stmt 1 view .LVU483
 447:..//kernel/core/tos_mmheap.c ****         *fli = fl;
 1811              		.loc 1 447 14 is_stmt 0 view .LVU484
 1812 0032 FFF7FEFF 		bl	__ffs
 1813              	.LVL181:
 447:..//kernel/core/tos_mmheap.c ****         *fli = fl;
 1814              		.loc 1 447 14 view .LVU485
 1815 0036 0446     		mov	r4, r0
 1816              	.LVL182:
 448:..//kernel/core/tos_mmheap.c ****         sl_map = k_mmheap_ctl.sl_bitmap[fl];
 1817              		.loc 1 448 9 is_stmt 1 view .LVU486
 448:..//kernel/core/tos_mmheap.c ****         sl_map = k_mmheap_ctl.sl_bitmap[fl];
 1818              		.loc 1 448 14 is_stmt 0 view .LVU487
 1819 0038 3060     		str	r0, [r6]
 449:..//kernel/core/tos_mmheap.c ****     }
 1820              		.loc 1 449 9 is_stmt 1 view .LVU488
 449:..//kernel/core/tos_mmheap.c ****     }
 1821              		.loc 1 449 16 is_stmt 0 view .LVU489
 1822 003a 00F10802 		add	r2, r0, #8
 1823 003e 084B     		ldr	r3, .L103
 1824 0040 03EB8203 		add	r3, r3, r2, lsl #2
 1825 0044 5868     		ldr	r0, [r3, #4]
 1826              	.LVL183:
 1827              	.L99:
 451:..//kernel/core/tos_mmheap.c ****     *sli = sl;
 1828              		.loc 1 451 5 is_stmt 1 view .LVU490
 451:..//kernel/core/tos_mmheap.c ****     *sli = sl;
 1829              		.loc 1 451 10 is_stmt 0 view .LVU491
 1830 0046 FFF7FEFF 		bl	__ffs
 1831              	.LVL184:
 452:..//kernel/core/tos_mmheap.c **** 
 1832              		.loc 1 452 5 is_stmt 1 view .LVU492
 452:..//kernel/core/tos_mmheap.c **** 
 1833              		.loc 1 452 10 is_stmt 0 view .LVU493
 1834 004a 2860     		str	r0, [r5]
 455:..//kernel/core/tos_mmheap.c **** }
 1835              		.loc 1 455 5 is_stmt 1 view .LVU494
 455:..//kernel/core/tos_mmheap.c **** }
 1836              		.loc 1 455 35 is_stmt 0 view .LVU495
 1837 004c 00EB4410 		add	r0, r0, r4, lsl #5
 1838              	.LVL185:
 455:..//kernel/core/tos_mmheap.c **** }
 1839              		.loc 1 455 35 view .LVU496
 1840 0050 2030     		adds	r0, r0, #32
 1841 0052 034C     		ldr	r4, .L103
 1842              	.LVL186:
 455:..//kernel/core/tos_mmheap.c **** }
 1843              		.loc 1 455 35 view .LVU497
 1844 0054 04EB8000 		add	r0, r4, r0, lsl #2
 1845 0058 4068     		ldr	r0, [r0, #4]
 1846              	.LVL187:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 48


 1847              	.L98:
 456:..//kernel/core/tos_mmheap.c **** 
 1848              		.loc 1 456 1 view .LVU498
 1849 005a 70BD     		pop	{r4, r5, r6, pc}
 1850              	.LVL188:
 1851              	.L101:
 444:..//kernel/core/tos_mmheap.c ****         }
 1852              		.loc 1 444 20 view .LVU499
 1853 005c 0020     		movs	r0, #0
 1854              	.LVL189:
 444:..//kernel/core/tos_mmheap.c ****         }
 1855              		.loc 1 444 20 view .LVU500
 1856 005e FCE7     		b	.L98
 1857              	.L104:
 1858              		.align	2
 1859              	.L103:
 1860 0060 00000000 		.word	k_mmheap_ctl
 1861              		.cfi_endproc
 1862              	.LFE147:
 1864              		.section	.text.blk_locate_free,"ax",%progbits
 1865              		.align	1
 1866              		.syntax unified
 1867              		.thumb
 1868              		.thumb_func
 1869              		.fpu softvfp
 1871              	blk_locate_free:
 1872              	.LVL190:
 1873              	.LFB148:
 459:..//kernel/core/tos_mmheap.c ****     int fl = 0, sl = 0;
 1874              		.loc 1 459 1 is_stmt 1 view -0
 1875              		.cfi_startproc
 1876              		@ args = 0, pretend = 0, frame = 8
 1877              		@ frame_needed = 0, uses_anonymous_args = 0
 459:..//kernel/core/tos_mmheap.c ****     int fl = 0, sl = 0;
 1878              		.loc 1 459 1 is_stmt 0 view .LVU502
 1879 0000 10B5     		push	{r4, lr}
 1880              	.LCFI28:
 1881              		.cfi_def_cfa_offset 8
 1882              		.cfi_offset 4, -8
 1883              		.cfi_offset 14, -4
 1884 0002 82B0     		sub	sp, sp, #8
 1885              	.LCFI29:
 1886              		.cfi_def_cfa_offset 16
 460:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *blk = K_NULL;
 1887              		.loc 1 460 5 is_stmt 1 view .LVU503
 460:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *blk = K_NULL;
 1888              		.loc 1 460 9 is_stmt 0 view .LVU504
 1889 0004 0023     		movs	r3, #0
 1890 0006 0193     		str	r3, [sp, #4]
 460:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *blk = K_NULL;
 1891              		.loc 1 460 17 view .LVU505
 1892 0008 0093     		str	r3, [sp]
 461:..//kernel/core/tos_mmheap.c **** 
 1893              		.loc 1 461 5 is_stmt 1 view .LVU506
 1894              	.LVL191:
 463:..//kernel/core/tos_mmheap.c ****         return K_NULL;
 1895              		.loc 1 463 5 view .LVU507
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 49


 463:..//kernel/core/tos_mmheap.c ****         return K_NULL;
 1896              		.loc 1 463 8 is_stmt 0 view .LVU508
 1897 000a 88B1     		cbz	r0, .L107
 467:..//kernel/core/tos_mmheap.c **** 
 1898              		.loc 1 467 5 is_stmt 1 view .LVU509
 1899 000c 6A46     		mov	r2, sp
 1900 000e 01A9     		add	r1, sp, #4
 1901 0010 FFF7FEFF 		bl	mapping_search
 1902              	.LVL192:
 475:..//kernel/core/tos_mmheap.c ****         blk = blk_search_suitable(&fl, &sl);
 1903              		.loc 1 475 5 view .LVU510
 475:..//kernel/core/tos_mmheap.c ****         blk = blk_search_suitable(&fl, &sl);
 1904              		.loc 1 475 12 is_stmt 0 view .LVU511
 1905 0014 019B     		ldr	r3, [sp, #4]
 475:..//kernel/core/tos_mmheap.c ****         blk = blk_search_suitable(&fl, &sl);
 1906              		.loc 1 475 8 view .LVU512
 1907 0016 172B     		cmp	r3, #23
 1908 0018 0CDC     		bgt	.L108
 476:..//kernel/core/tos_mmheap.c ****     }
 1909              		.loc 1 476 9 is_stmt 1 view .LVU513
 476:..//kernel/core/tos_mmheap.c ****     }
 1910              		.loc 1 476 15 is_stmt 0 view .LVU514
 1911 001a 6946     		mov	r1, sp
 1912 001c 01A8     		add	r0, sp, #4
 1913 001e FFF7FEFF 		bl	blk_search_suitable
 1914              	.LVL193:
 479:..//kernel/core/tos_mmheap.c ****         remove_free_block(blk, fl, sl);
 1915              		.loc 1 479 5 is_stmt 1 view .LVU515
 479:..//kernel/core/tos_mmheap.c ****         remove_free_block(blk, fl, sl);
 1916              		.loc 1 479 8 is_stmt 0 view .LVU516
 1917 0022 0446     		mov	r4, r0
 1918 0024 38B1     		cbz	r0, .L105
 480:..//kernel/core/tos_mmheap.c ****     }
 1919              		.loc 1 480 9 is_stmt 1 view .LVU517
 1920 0026 009A     		ldr	r2, [sp]
 1921 0028 0199     		ldr	r1, [sp, #4]
 1922 002a FFF7FEFF 		bl	remove_free_block
 1923              	.LVL194:
 480:..//kernel/core/tos_mmheap.c ****     }
 1924              		.loc 1 480 9 is_stmt 0 view .LVU518
 1925 002e 02E0     		b	.L105
 1926              	.LVL195:
 1927              	.L107:
 464:..//kernel/core/tos_mmheap.c ****     }
 1928              		.loc 1 464 16 view .LVU519
 1929 0030 0024     		movs	r4, #0
 1930 0032 00E0     		b	.L105
 1931              	.LVL196:
 1932              	.L108:
 461:..//kernel/core/tos_mmheap.c **** 
 1933              		.loc 1 461 19 view .LVU520
 1934 0034 0024     		movs	r4, #0
 1935              	.LVL197:
 1936              	.L105:
 484:..//kernel/core/tos_mmheap.c **** 
 1937              		.loc 1 484 1 view .LVU521
 1938 0036 2046     		mov	r0, r4
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 50


 1939 0038 02B0     		add	sp, sp, #8
 1940              	.LCFI30:
 1941              		.cfi_def_cfa_offset 8
 1942              		@ sp needed
 1943 003a 10BD     		pop	{r4, pc}
 1944              		.cfi_endproc
 1945              	.LFE148:
 1947              		.section	.text.mmheap_init,"ax",%progbits
 1948              		.align	1
 1949              		.global	mmheap_init
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1953              		.fpu softvfp
 1955              	mmheap_init:
 1956              	.LFB156:
 574:..//kernel/core/tos_mmheap.c **** 
 575:..//kernel/core/tos_mmheap.c **** __KNL__ k_err_t mmheap_init(void)
 576:..//kernel/core/tos_mmheap.c **** {
 1957              		.loc 1 576 1 is_stmt 1 view -0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 1961 0000 08B5     		push	{r3, lr}
 1962              	.LCFI31:
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 3, -8
 1965              		.cfi_offset 14, -4
 577:..//kernel/core/tos_mmheap.c ****     mmheap_ctl_init();
 1966              		.loc 1 577 5 view .LVU523
 1967 0002 FFF7FEFF 		bl	mmheap_ctl_init
 1968              	.LVL198:
 578:..//kernel/core/tos_mmheap.c ****     return K_ERR_NONE;
 1969              		.loc 1 578 5 view .LVU524
 579:..//kernel/core/tos_mmheap.c **** }
 1970              		.loc 1 579 1 is_stmt 0 view .LVU525
 1971 0006 0020     		movs	r0, #0
 1972 0008 08BD     		pop	{r3, pc}
 1973              		.cfi_endproc
 1974              	.LFE156:
 1976              		.section	.text.tos_mmheap_alloc,"ax",%progbits
 1977              		.align	1
 1978              		.global	tos_mmheap_alloc
 1979              		.syntax unified
 1980              		.thumb
 1981              		.thumb_func
 1982              		.fpu softvfp
 1984              	tos_mmheap_alloc:
 1985              	.LVL199:
 1986              	.LFB158:
 580:..//kernel/core/tos_mmheap.c **** 
 581:..//kernel/core/tos_mmheap.c **** __KNL__ k_err_t mmheap_init_with_pool(void *pool_start, size_t pool_size)
 582:..//kernel/core/tos_mmheap.c **** {
 583:..//kernel/core/tos_mmheap.c ****     mmheap_ctl_init();
 584:..//kernel/core/tos_mmheap.c **** 
 585:..//kernel/core/tos_mmheap.c ****     return tos_mmheap_pool_add(pool_start, pool_size);
 586:..//kernel/core/tos_mmheap.c **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 51


 587:..//kernel/core/tos_mmheap.c **** 
 588:..//kernel/core/tos_mmheap.c **** __API__ void *tos_mmheap_alloc(size_t size)
 589:..//kernel/core/tos_mmheap.c **** {
 1987              		.loc 1 589 1 is_stmt 1 view -0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
 1991              		.loc 1 589 1 is_stmt 0 view .LVU527
 1992 0000 10B5     		push	{r4, lr}
 1993              	.LCFI32:
 1994              		.cfi_def_cfa_offset 8
 1995              		.cfi_offset 4, -8
 1996              		.cfi_offset 14, -4
 590:..//kernel/core/tos_mmheap.c ****     size_t          adjust_size;
 1997              		.loc 1 590 5 is_stmt 1 view .LVU528
 591:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t   *blk;
 1998              		.loc 1 591 5 view .LVU529
 592:..//kernel/core/tos_mmheap.c **** 
 593:..//kernel/core/tos_mmheap.c ****     adjust_size     = adjust_request_size(size, K_MMHEAP_ALIGN_SIZE);
 1999              		.loc 1 593 5 view .LVU530
 2000              		.loc 1 593 23 is_stmt 0 view .LVU531
 2001 0002 0421     		movs	r1, #4
 2002 0004 FFF7FEFF 		bl	adjust_request_size
 2003              	.LVL200:
 2004              		.loc 1 593 23 view .LVU532
 2005 0008 0446     		mov	r4, r0
 2006              	.LVL201:
 594:..//kernel/core/tos_mmheap.c ****     blk             = blk_locate_free(adjust_size);
 2007              		.loc 1 594 5 is_stmt 1 view .LVU533
 2008              		.loc 1 594 23 is_stmt 0 view .LVU534
 2009 000a FFF7FEFF 		bl	blk_locate_free
 2010              	.LVL202:
 595:..//kernel/core/tos_mmheap.c ****     if (!blk) {
 2011              		.loc 1 595 5 is_stmt 1 view .LVU535
 2012              		.loc 1 595 8 is_stmt 0 view .LVU536
 2013 000e 0346     		mov	r3, r0
 2014 0010 18B1     		cbz	r0, .L112
 596:..//kernel/core/tos_mmheap.c ****         return K_NULL;
 597:..//kernel/core/tos_mmheap.c ****     }
 598:..//kernel/core/tos_mmheap.c **** 
 599:..//kernel/core/tos_mmheap.c ****     return blk_prepare_used(blk, adjust_size);
 2015              		.loc 1 599 5 is_stmt 1 view .LVU537
 2016              		.loc 1 599 12 is_stmt 0 view .LVU538
 2017 0012 2146     		mov	r1, r4
 2018 0014 FFF7FEFF 		bl	blk_prepare_used
 2019              	.LVL203:
 2020              		.loc 1 599 12 view .LVU539
 2021 0018 0346     		mov	r3, r0
 2022              	.L112:
 600:..//kernel/core/tos_mmheap.c **** }
 2023              		.loc 1 600 1 view .LVU540
 2024 001a 1846     		mov	r0, r3
 2025 001c 10BD     		pop	{r4, pc}
 2026              		.loc 1 600 1 view .LVU541
 2027              		.cfi_endproc
 2028              	.LFE158:
 2030              		.section	.text.tos_mmheap_calloc,"ax",%progbits
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 52


 2031              		.align	1
 2032              		.global	tos_mmheap_calloc
 2033              		.syntax unified
 2034              		.thumb
 2035              		.thumb_func
 2036              		.fpu softvfp
 2038              	tos_mmheap_calloc:
 2039              	.LVL204:
 2040              	.LFB159:
 601:..//kernel/core/tos_mmheap.c **** 
 602:..//kernel/core/tos_mmheap.c **** __API__ void *tos_mmheap_calloc(size_t num, size_t size)
 603:..//kernel/core/tos_mmheap.c **** {
 2041              		.loc 1 603 1 is_stmt 1 view -0
 2042              		.cfi_startproc
 2043              		@ args = 0, pretend = 0, frame = 0
 2044              		@ frame_needed = 0, uses_anonymous_args = 0
 2045              		.loc 1 603 1 is_stmt 0 view .LVU543
 2046 0000 38B5     		push	{r3, r4, r5, lr}
 2047              	.LCFI33:
 2048              		.cfi_def_cfa_offset 16
 2049              		.cfi_offset 3, -16
 2050              		.cfi_offset 4, -12
 2051              		.cfi_offset 5, -8
 2052              		.cfi_offset 14, -4
 604:..//kernel/core/tos_mmheap.c ****     void *ptr;
 2053              		.loc 1 604 5 is_stmt 1 view .LVU544
 605:..//kernel/core/tos_mmheap.c **** 
 606:..//kernel/core/tos_mmheap.c ****     ptr = tos_mmheap_alloc(num * size);
 2054              		.loc 1 606 5 view .LVU545
 2055              		.loc 1 606 11 is_stmt 0 view .LVU546
 2056 0002 01FB00F5 		mul	r5, r1, r0
 2057 0006 2846     		mov	r0, r5
 2058              	.LVL205:
 2059              		.loc 1 606 11 view .LVU547
 2060 0008 FFF7FEFF 		bl	tos_mmheap_alloc
 2061              	.LVL206:
 607:..//kernel/core/tos_mmheap.c ****     if (ptr) {
 2062              		.loc 1 607 5 is_stmt 1 view .LVU548
 2063              		.loc 1 607 8 is_stmt 0 view .LVU549
 2064 000c 0446     		mov	r4, r0
 2065 000e 18B1     		cbz	r0, .L115
 608:..//kernel/core/tos_mmheap.c ****         memset(ptr, 0, num * size);
 2066              		.loc 1 608 9 is_stmt 1 view .LVU550
 2067 0010 2A46     		mov	r2, r5
 2068 0012 0021     		movs	r1, #0
 2069 0014 FFF7FEFF 		bl	memset
 2070              	.LVL207:
 609:..//kernel/core/tos_mmheap.c ****     }
 610:..//kernel/core/tos_mmheap.c **** 
 611:..//kernel/core/tos_mmheap.c ****     return ptr;
 2071              		.loc 1 611 5 view .LVU551
 2072              	.L115:
 612:..//kernel/core/tos_mmheap.c **** }
 2073              		.loc 1 612 1 is_stmt 0 view .LVU552
 2074 0018 2046     		mov	r0, r4
 2075 001a 38BD     		pop	{r3, r4, r5, pc}
 2076              		.loc 1 612 1 view .LVU553
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 53


 2077              		.cfi_endproc
 2078              	.LFE159:
 2080              		.section	.text.tos_mmheap_aligned_alloc,"ax",%progbits
 2081              		.align	1
 2082              		.global	tos_mmheap_aligned_alloc
 2083              		.syntax unified
 2084              		.thumb
 2085              		.thumb_func
 2086              		.fpu softvfp
 2088              	tos_mmheap_aligned_alloc:
 2089              	.LVL208:
 2090              	.LFB160:
 613:..//kernel/core/tos_mmheap.c **** 
 614:..//kernel/core/tos_mmheap.c **** __API__ void *tos_mmheap_aligned_alloc(size_t size, size_t align)
 615:..//kernel/core/tos_mmheap.c **** {
 2091              		.loc 1 615 1 is_stmt 1 view -0
 2092              		.cfi_startproc
 2093              		@ args = 0, pretend = 0, frame = 0
 2094              		@ frame_needed = 0, uses_anonymous_args = 0
 2095              		.loc 1 615 1 is_stmt 0 view .LVU555
 2096 0000 70B5     		push	{r4, r5, r6, lr}
 2097              	.LCFI34:
 2098              		.cfi_def_cfa_offset 16
 2099              		.cfi_offset 4, -16
 2100              		.cfi_offset 5, -12
 2101              		.cfi_offset 6, -8
 2102              		.cfi_offset 14, -4
 2103 0002 0C46     		mov	r4, r1
 616:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *blk;
 2104              		.loc 1 616 5 is_stmt 1 view .LVU556
 617:..//kernel/core/tos_mmheap.c ****     void *ptr, *aligned, *next_aligned;
 2105              		.loc 1 617 5 view .LVU557
 618:..//kernel/core/tos_mmheap.c ****     size_t adjust_size, aligned_size;
 2106              		.loc 1 618 5 view .LVU558
 619:..//kernel/core/tos_mmheap.c ****     size_t gap_minimum, size_with_gap, gap, gap_remain, offset;
 2107              		.loc 1 619 5 view .LVU559
 620:..//kernel/core/tos_mmheap.c **** 
 621:..//kernel/core/tos_mmheap.c ****     adjust_size     = adjust_request_size(size, K_MMHEAP_ALIGN_SIZE);
 2108              		.loc 1 621 5 view .LVU560
 2109              		.loc 1 621 23 is_stmt 0 view .LVU561
 2110 0004 0421     		movs	r1, #4
 2111              	.LVL209:
 2112              		.loc 1 621 23 view .LVU562
 2113 0006 FFF7FEFF 		bl	adjust_request_size
 2114              	.LVL210:
 2115              		.loc 1 621 23 view .LVU563
 2116 000a 0546     		mov	r5, r0
 2117              	.LVL211:
 622:..//kernel/core/tos_mmheap.c ****     gap_minimum     = sizeof(mmheap_blk_t);
 2118              		.loc 1 622 5 is_stmt 1 view .LVU564
 623:..//kernel/core/tos_mmheap.c ****     size_with_gap   = adjust_request_size(adjust_size + align + gap_minimum, align);
 2119              		.loc 1 623 5 view .LVU565
 2120              		.loc 1 623 55 is_stmt 0 view .LVU566
 2121 000c 2044     		add	r0, r0, r4
 2122              	.LVL212:
 2123              		.loc 1 623 23 view .LVU567
 2124 000e 2146     		mov	r1, r4
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 54


 2125 0010 1030     		adds	r0, r0, #16
 2126 0012 FFF7FEFF 		bl	adjust_request_size
 2127              	.LVL213:
 624:..//kernel/core/tos_mmheap.c ****     aligned_size    = (adjust_size && align > K_MMHEAP_ALIGN_SIZE) ? size_with_gap : adjust_size;
 2128              		.loc 1 624 5 is_stmt 1 view .LVU568
 2129              		.loc 1 624 84 is_stmt 0 view .LVU569
 2130 0016 1DB1     		cbz	r5, .L123
 2131              		.loc 1 624 36 discriminator 1 view .LVU570
 2132 0018 042C     		cmp	r4, #4
 2133 001a 02D8     		bhi	.L119
 2134              		.loc 1 624 84 view .LVU571
 2135 001c 2846     		mov	r0, r5
 2136              	.LVL214:
 2137              		.loc 1 624 84 view .LVU572
 2138 001e 00E0     		b	.L119
 2139              	.LVL215:
 2140              	.L123:
 2141              		.loc 1 624 84 view .LVU573
 2142 0020 2846     		mov	r0, r5
 2143              	.LVL216:
 2144              	.L119:
 625:..//kernel/core/tos_mmheap.c **** 
 626:..//kernel/core/tos_mmheap.c ****     blk = blk_locate_free(aligned_size);
 2145              		.loc 1 626 5 is_stmt 1 discriminator 6 view .LVU574
 2146              		.loc 1 626 11 is_stmt 0 discriminator 6 view .LVU575
 2147 0022 FFF7FEFF 		bl	blk_locate_free
 2148              	.LVL217:
 627:..//kernel/core/tos_mmheap.c ****     if (!blk) {
 2149              		.loc 1 627 5 is_stmt 1 discriminator 6 view .LVU576
 2150              		.loc 1 627 8 is_stmt 0 discriminator 6 view .LVU577
 2151 0026 0246     		mov	r2, r0
 2152 0028 C8B1     		cbz	r0, .L118
 628:..//kernel/core/tos_mmheap.c ****         return K_NULL;
 629:..//kernel/core/tos_mmheap.c ****     }
 630:..//kernel/core/tos_mmheap.c **** 
 631:..//kernel/core/tos_mmheap.c ****     ptr = blk_to_ptr(blk);
 2153              		.loc 1 631 5 is_stmt 1 view .LVU578
 2154              	.LVL218:
 2155              	.LBB142:
 2156              	.LBI142:
 188:..//kernel/core/tos_mmheap.c **** {
 2157              		.loc 1 188 25 view .LVU579
 2158              	.LBB143:
 190:..//kernel/core/tos_mmheap.c **** }
 2159              		.loc 1 190 5 view .LVU580
 190:..//kernel/core/tos_mmheap.c **** }
 2160              		.loc 1 190 37 is_stmt 0 view .LVU581
 2161 002a 0830     		adds	r0, r0, #8
 2162              	.LVL219:
 190:..//kernel/core/tos_mmheap.c **** }
 2163              		.loc 1 190 37 view .LVU582
 2164              	.LBE143:
 2165              	.LBE142:
 632:..//kernel/core/tos_mmheap.c ****     aligned = align_ptr(ptr, align);
 2166              		.loc 1 632 5 is_stmt 1 view .LVU583
 2167              	.LBB144:
 2168              	.LBI144:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 55


 253:..//kernel/core/tos_mmheap.c **** {
 2169              		.loc 1 253 25 view .LVU584
 2170              	.LBB145:
 255:..//kernel/core/tos_mmheap.c **** }
 2171              		.loc 1 255 5 view .LVU585
 255:..//kernel/core/tos_mmheap.c **** }
 2172              		.loc 1 255 38 is_stmt 0 view .LVU586
 2173 002c 2318     		adds	r3, r4, r0
 2174 002e 013B     		subs	r3, r3, #1
 255:..//kernel/core/tos_mmheap.c **** }
 2175              		.loc 1 255 54 view .LVU587
 2176 0030 6642     		rsbs	r6, r4, #0
 255:..//kernel/core/tos_mmheap.c **** }
 2177              		.loc 1 255 52 view .LVU588
 2178 0032 3340     		ands	r3, r3, r6
 2179              	.LVL220:
 255:..//kernel/core/tos_mmheap.c **** }
 2180              		.loc 1 255 52 view .LVU589
 2181              	.LBE145:
 2182              	.LBE144:
 633:..//kernel/core/tos_mmheap.c ****     gap = (size_t)((cpu_addr_t)aligned - (cpu_addr_t)ptr);
 2183              		.loc 1 633 5 is_stmt 1 view .LVU590
 634:..//kernel/core/tos_mmheap.c **** 
 635:..//kernel/core/tos_mmheap.c ****     if (gap && gap < gap_minimum) {
 2184              		.loc 1 635 5 view .LVU591
 2185              		.loc 1 635 8 is_stmt 0 view .LVU592
 2186 0034 191A     		subs	r1, r3, r0
 2187              	.LVL221:
 2188              		.loc 1 635 8 view .LVU593
 2189 0036 0CD0     		beq	.L121
 2190              		.loc 1 635 13 discriminator 1 view .LVU594
 2191 0038 0F29     		cmp	r1, #15
 2192 003a 0AD8     		bhi	.L121
 636:..//kernel/core/tos_mmheap.c ****         gap_remain = gap_minimum - gap;
 2193              		.loc 1 636 9 is_stmt 1 view .LVU595
 2194              		.loc 1 636 20 is_stmt 0 view .LVU596
 2195 003c C11A     		subs	r1, r0, r3
 2196              	.LVL222:
 2197              		.loc 1 636 20 view .LVU597
 2198 003e 1031     		adds	r1, r1, #16
 2199              	.LVL223:
 637:..//kernel/core/tos_mmheap.c ****         offset = gap_remain > align ? gap_remain : align;
 2200              		.loc 1 637 9 is_stmt 1 view .LVU598
 638:..//kernel/core/tos_mmheap.c ****         next_aligned = (void *)((cpu_data_t)aligned + offset);
 2201              		.loc 1 638 9 view .LVU599
 2202              		.loc 1 638 53 is_stmt 0 view .LVU600
 2203 0040 8C42     		cmp	r4, r1
 2204 0042 2CBF     		ite	cs
 2205 0044 1B19     		addcs	r3, r3, r4
 2206 0046 5B18     		addcc	r3, r3, r1
 2207              	.LVL224:
 639:..//kernel/core/tos_mmheap.c **** 
 640:..//kernel/core/tos_mmheap.c ****         aligned = align_ptr(next_aligned, align);
 2208              		.loc 1 640 9 is_stmt 1 view .LVU601
 2209              	.LBB146:
 2210              	.LBI146:
 253:..//kernel/core/tos_mmheap.c **** {
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 56


 2211              		.loc 1 253 25 view .LVU602
 2212              	.LBB147:
 255:..//kernel/core/tos_mmheap.c **** }
 2213              		.loc 1 255 5 view .LVU603
 255:..//kernel/core/tos_mmheap.c **** }
 2214              		.loc 1 255 38 is_stmt 0 view .LVU604
 2215 0048 2344     		add	r3, r3, r4
 2216              	.LVL225:
 255:..//kernel/core/tos_mmheap.c **** }
 2217              		.loc 1 255 38 view .LVU605
 2218 004a 013B     		subs	r3, r3, #1
 255:..//kernel/core/tos_mmheap.c **** }
 2219              		.loc 1 255 52 view .LVU606
 2220 004c 06EA0301 		and	r1, r6, r3
 2221              	.LVL226:
 255:..//kernel/core/tos_mmheap.c **** }
 2222              		.loc 1 255 52 view .LVU607
 2223              	.LBE147:
 2224              	.LBE146:
 641:..//kernel/core/tos_mmheap.c ****         gap = (size_t)((cpu_addr_t)aligned - (cpu_addr_t)ptr);
 2225              		.loc 1 641 9 is_stmt 1 view .LVU608
 2226              		.loc 1 641 13 is_stmt 0 view .LVU609
 2227 0050 091A     		subs	r1, r1, r0
 2228              	.LVL227:
 2229              	.L121:
 642:..//kernel/core/tos_mmheap.c ****     }
 643:..//kernel/core/tos_mmheap.c **** 
 644:..//kernel/core/tos_mmheap.c ****     if (gap) {
 2230              		.loc 1 644 5 is_stmt 1 view .LVU610
 2231              		.loc 1 644 8 is_stmt 0 view .LVU611
 2232 0052 31B9     		cbnz	r1, .L125
 2233              	.LVL228:
 2234              	.L122:
 645:..//kernel/core/tos_mmheap.c ****         blk = blk_trim_free_leading(blk, gap);
 646:..//kernel/core/tos_mmheap.c ****     }
 647:..//kernel/core/tos_mmheap.c **** 
 648:..//kernel/core/tos_mmheap.c ****     return blk_prepare_used(blk, adjust_size);
 2235              		.loc 1 648 5 is_stmt 1 view .LVU612
 2236              		.loc 1 648 12 is_stmt 0 view .LVU613
 2237 0054 2946     		mov	r1, r5
 2238 0056 1046     		mov	r0, r2
 2239 0058 FFF7FEFF 		bl	blk_prepare_used
 2240              	.LVL229:
 2241              		.loc 1 648 12 view .LVU614
 2242 005c 0246     		mov	r2, r0
 2243              	.L118:
 649:..//kernel/core/tos_mmheap.c **** }
 2244              		.loc 1 649 1 view .LVU615
 2245 005e 1046     		mov	r0, r2
 2246 0060 70BD     		pop	{r4, r5, r6, pc}
 2247              	.LVL230:
 2248              	.L125:
 645:..//kernel/core/tos_mmheap.c ****         blk = blk_trim_free_leading(blk, gap);
 2249              		.loc 1 645 9 is_stmt 1 view .LVU616
 645:..//kernel/core/tos_mmheap.c ****         blk = blk_trim_free_leading(blk, gap);
 2250              		.loc 1 645 15 is_stmt 0 view .LVU617
 2251 0062 1046     		mov	r0, r2
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 57


 2252              	.LVL231:
 645:..//kernel/core/tos_mmheap.c ****         blk = blk_trim_free_leading(blk, gap);
 2253              		.loc 1 645 15 view .LVU618
 2254 0064 FFF7FEFF 		bl	blk_trim_free_leading
 2255              	.LVL232:
 645:..//kernel/core/tos_mmheap.c ****         blk = blk_trim_free_leading(blk, gap);
 2256              		.loc 1 645 15 view .LVU619
 2257 0068 0246     		mov	r2, r0
 2258              	.LVL233:
 645:..//kernel/core/tos_mmheap.c ****         blk = blk_trim_free_leading(blk, gap);
 2259              		.loc 1 645 15 view .LVU620
 2260 006a F3E7     		b	.L122
 2261              		.cfi_endproc
 2262              	.LFE160:
 2264              		.section	.text.tos_mmheap_free,"ax",%progbits
 2265              		.align	1
 2266              		.global	tos_mmheap_free
 2267              		.syntax unified
 2268              		.thumb
 2269              		.thumb_func
 2270              		.fpu softvfp
 2272              	tos_mmheap_free:
 2273              	.LVL234:
 2274              	.LFB161:
 650:..//kernel/core/tos_mmheap.c **** 
 651:..//kernel/core/tos_mmheap.c **** __API__ void tos_mmheap_free(void *ptr)
 652:..//kernel/core/tos_mmheap.c **** {
 2275              		.loc 1 652 1 is_stmt 1 view -0
 2276              		.cfi_startproc
 2277              		@ args = 0, pretend = 0, frame = 0
 2278              		@ frame_needed = 0, uses_anonymous_args = 0
 653:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *blk;
 2279              		.loc 1 653 5 view .LVU622
 654:..//kernel/core/tos_mmheap.c **** 
 655:..//kernel/core/tos_mmheap.c ****     if (!ptr) {
 2280              		.loc 1 655 5 view .LVU623
 2281              		.loc 1 655 8 is_stmt 0 view .LVU624
 2282 0000 68B1     		cbz	r0, .L129
 652:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *blk;
 2283              		.loc 1 652 1 view .LVU625
 2284 0002 10B5     		push	{r4, lr}
 2285              	.LCFI35:
 2286              		.cfi_def_cfa_offset 8
 2287              		.cfi_offset 4, -8
 2288              		.cfi_offset 14, -4
 656:..//kernel/core/tos_mmheap.c ****         return;
 657:..//kernel/core/tos_mmheap.c ****     }
 658:..//kernel/core/tos_mmheap.c **** 
 659:..//kernel/core/tos_mmheap.c ****     blk = blk_from_ptr(ptr);
 2289              		.loc 1 659 5 is_stmt 1 view .LVU626
 2290              	.LVL235:
 2291              	.LBB148:
 2292              	.LBI148:
 183:..//kernel/core/tos_mmheap.c **** {
 2293              		.loc 1 183 33 view .LVU627
 2294              	.LBB149:
 185:..//kernel/core/tos_mmheap.c **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 58


 2295              		.loc 1 185 5 view .LVU628
 185:..//kernel/core/tos_mmheap.c **** }
 2296              		.loc 1 185 45 is_stmt 0 view .LVU629
 2297 0004 A0F10804 		sub	r4, r0, #8
 2298              	.LVL236:
 185:..//kernel/core/tos_mmheap.c **** }
 2299              		.loc 1 185 45 view .LVU630
 2300              	.LBE149:
 2301              	.LBE148:
 660:..//kernel/core/tos_mmheap.c ****     blk_mark_as_free(blk);
 2302              		.loc 1 660 5 is_stmt 1 view .LVU631
 2303 0008 2046     		mov	r0, r4
 2304              	.LVL237:
 2305              		.loc 1 660 5 is_stmt 0 view .LVU632
 2306 000a FFF7FEFF 		bl	blk_mark_as_free
 2307              	.LVL238:
 661:..//kernel/core/tos_mmheap.c ****     blk = blk_merge_prev(blk);
 2308              		.loc 1 661 5 is_stmt 1 view .LVU633
 2309              		.loc 1 661 11 is_stmt 0 view .LVU634
 2310 000e 2046     		mov	r0, r4
 2311 0010 FFF7FEFF 		bl	blk_merge_prev
 2312              	.LVL239:
 662:..//kernel/core/tos_mmheap.c ****     blk = blk_merge_next(blk);
 2313              		.loc 1 662 5 is_stmt 1 view .LVU635
 2314              		.loc 1 662 11 is_stmt 0 view .LVU636
 2315 0014 FFF7FEFF 		bl	blk_merge_next
 2316              	.LVL240:
 663:..//kernel/core/tos_mmheap.c ****     blk_insert(blk);
 2317              		.loc 1 663 5 is_stmt 1 view .LVU637
 2318 0018 FFF7FEFF 		bl	blk_insert
 2319              	.LVL241:
 664:..//kernel/core/tos_mmheap.c **** }
 2320              		.loc 1 664 1 is_stmt 0 view .LVU638
 2321 001c 10BD     		pop	{r4, pc}
 2322              	.LVL242:
 2323              	.L129:
 2324              	.LCFI36:
 2325              		.cfi_def_cfa_offset 0
 2326              		.cfi_restore 4
 2327              		.cfi_restore 14
 2328              		.loc 1 664 1 view .LVU639
 2329 001e 7047     		bx	lr
 2330              		.cfi_endproc
 2331              	.LFE161:
 2333              		.section	.text.tos_mmheap_realloc,"ax",%progbits
 2334              		.align	1
 2335              		.global	tos_mmheap_realloc
 2336              		.syntax unified
 2337              		.thumb
 2338              		.thumb_func
 2339              		.fpu softvfp
 2341              	tos_mmheap_realloc:
 2342              	.LVL243:
 2343              	.LFB162:
 665:..//kernel/core/tos_mmheap.c **** 
 666:..//kernel/core/tos_mmheap.c **** __API__ void *tos_mmheap_realloc(void *ptr, size_t size)
 667:..//kernel/core/tos_mmheap.c **** {
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 59


 2344              		.loc 1 667 1 is_stmt 1 view -0
 2345              		.cfi_startproc
 2346              		@ args = 0, pretend = 0, frame = 0
 2347              		@ frame_needed = 0, uses_anonymous_args = 0
 2348              		.loc 1 667 1 is_stmt 0 view .LVU641
 2349 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2350              	.LCFI37:
 2351              		.cfi_def_cfa_offset 32
 2352              		.cfi_offset 4, -32
 2353              		.cfi_offset 5, -28
 2354              		.cfi_offset 6, -24
 2355              		.cfi_offset 7, -20
 2356              		.cfi_offset 8, -16
 2357              		.cfi_offset 9, -12
 2358              		.cfi_offset 10, -8
 2359              		.cfi_offset 14, -4
 2360 0004 8846     		mov	r8, r1
 668:..//kernel/core/tos_mmheap.c ****     void *p = 0;
 2361              		.loc 1 668 5 is_stmt 1 view .LVU642
 2362              	.LVL244:
 669:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *curr_blk, *next_blk;
 2363              		.loc 1 669 5 view .LVU643
 670:..//kernel/core/tos_mmheap.c ****     size_t curr_size, combined_size, adjust_size, min_size;
 2364              		.loc 1 670 5 view .LVU644
 671:..//kernel/core/tos_mmheap.c **** 
 672:..//kernel/core/tos_mmheap.c ****     if (ptr && size == 0) {
 2365              		.loc 1 672 5 view .LVU645
 2366              		.loc 1 672 8 is_stmt 0 view .LVU646
 2367 0006 0646     		mov	r6, r0
 2368 0008 00B1     		cbz	r0, .L133
 2369              		.loc 1 672 13 discriminator 1 view .LVU647
 2370 000a 51B3     		cbz	r1, .L140
 2371              	.L133:
 673:..//kernel/core/tos_mmheap.c ****         tos_mmheap_free(ptr);
 674:..//kernel/core/tos_mmheap.c ****         return K_NULL;
 675:..//kernel/core/tos_mmheap.c ****     }
 676:..//kernel/core/tos_mmheap.c **** 
 677:..//kernel/core/tos_mmheap.c ****     if (!ptr) {
 2372              		.loc 1 677 5 is_stmt 1 view .LVU648
 2373              		.loc 1 677 8 is_stmt 0 view .LVU649
 2374 000c 6EB3     		cbz	r6, .L141
 678:..//kernel/core/tos_mmheap.c ****         return tos_mmheap_alloc(size);
 679:..//kernel/core/tos_mmheap.c ****     }
 680:..//kernel/core/tos_mmheap.c **** 
 681:..//kernel/core/tos_mmheap.c ****     curr_blk = blk_from_ptr(ptr);
 2375              		.loc 1 681 5 is_stmt 1 view .LVU650
 2376              	.LVL245:
 2377              	.LBB150:
 2378              	.LBI150:
 183:..//kernel/core/tos_mmheap.c **** {
 2379              		.loc 1 183 33 view .LVU651
 2380              	.LBB151:
 185:..//kernel/core/tos_mmheap.c **** }
 2381              		.loc 1 185 5 view .LVU652
 185:..//kernel/core/tos_mmheap.c **** }
 2382              		.loc 1 185 45 is_stmt 0 view .LVU653
 2383 000e A6F10807 		sub	r7, r6, #8
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 60


 2384              	.LVL246:
 185:..//kernel/core/tos_mmheap.c **** }
 2385              		.loc 1 185 45 view .LVU654
 2386              	.LBE151:
 2387              	.LBE150:
 682:..//kernel/core/tos_mmheap.c ****     next_blk = blk_next(curr_blk);
 2388              		.loc 1 682 5 is_stmt 1 view .LVU655
 2389              		.loc 1 682 16 is_stmt 0 view .LVU656
 2390 0012 3846     		mov	r0, r7
 2391              	.LVL247:
 2392              		.loc 1 682 16 view .LVU657
 2393 0014 FFF7FEFF 		bl	blk_next
 2394              	.LVL248:
 683:..//kernel/core/tos_mmheap.c **** 
 684:..//kernel/core/tos_mmheap.c ****     curr_size = blk_size(curr_blk);
 2395              		.loc 1 684 5 is_stmt 1 view .LVU658
 2396              	.LBB152:
 2397              	.LBI152:
 138:..//kernel/core/tos_mmheap.c **** {
 2398              		.loc 1 138 26 view .LVU659
 2399              	.LBB153:
 140:..//kernel/core/tos_mmheap.c **** }
 2400              		.loc 1 140 5 view .LVU660
 140:..//kernel/core/tos_mmheap.c **** }
 2401              		.loc 1 140 15 is_stmt 0 view .LVU661
 2402 0018 7C68     		ldr	r4, [r7, #4]
 140:..//kernel/core/tos_mmheap.c **** }
 2403              		.loc 1 140 22 view .LVU662
 2404 001a 24F00304 		bic	r4, r4, #3
 2405              	.LVL249:
 140:..//kernel/core/tos_mmheap.c **** }
 2406              		.loc 1 140 22 view .LVU663
 2407              	.LBE153:
 2408              	.LBE152:
 685:..//kernel/core/tos_mmheap.c ****     combined_size = curr_size + blk_size(next_blk) + K_MMHEAP_BLK_HEADER_OVERHEAD;
 2409              		.loc 1 685 5 is_stmt 1 view .LVU664
 2410              	.LBB154:
 2411              	.LBI154:
 138:..//kernel/core/tos_mmheap.c **** {
 2412              		.loc 1 138 26 view .LVU665
 2413              	.LBB155:
 140:..//kernel/core/tos_mmheap.c **** }
 2414              		.loc 1 140 5 view .LVU666
 140:..//kernel/core/tos_mmheap.c **** }
 2415              		.loc 1 140 15 is_stmt 0 view .LVU667
 2416 001e D0F80490 		ldr	r9, [r0, #4]
 140:..//kernel/core/tos_mmheap.c **** }
 2417              		.loc 1 140 22 view .LVU668
 2418 0022 29F00303 		bic	r3, r9, #3
 2419              	.LVL250:
 140:..//kernel/core/tos_mmheap.c **** }
 2420              		.loc 1 140 22 view .LVU669
 2421              	.LBE155:
 2422              	.LBE154:
 2423              		.loc 1 685 31 view .LVU670
 2424 0026 2344     		add	r3, r3, r4
 2425              		.loc 1 685 19 view .LVU671
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 61


 2426 0028 1D1D     		adds	r5, r3, #4
 2427              	.LVL251:
 686:..//kernel/core/tos_mmheap.c ****     adjust_size = adjust_request_size(size, K_MMHEAP_ALIGN_SIZE);
 2428              		.loc 1 686 5 is_stmt 1 view .LVU672
 2429              		.loc 1 686 19 is_stmt 0 view .LVU673
 2430 002a 0421     		movs	r1, #4
 2431 002c 4046     		mov	r0, r8
 2432              	.LVL252:
 2433              		.loc 1 686 19 view .LVU674
 2434 002e FFF7FEFF 		bl	adjust_request_size
 2435              	.LVL253:
 2436 0032 8246     		mov	r10, r0
 2437              	.LVL254:
 687:..//kernel/core/tos_mmheap.c **** 
 688:..//kernel/core/tos_mmheap.c ****     if (adjust_size > curr_size && (!blk_is_free(next_blk) || adjust_size > combined_size)) {
 2438              		.loc 1 688 5 is_stmt 1 view .LVU675
 2439              		.loc 1 688 8 is_stmt 0 view .LVU676
 2440 0034 8442     		cmp	r4, r0
 2441 0036 1DD2     		bcs	.L136
 2442              	.LVL255:
 2443              	.LBB156:
 2444              	.LBI156:
 153:..//kernel/core/tos_mmheap.c **** {
 2445              		.loc 1 153 23 is_stmt 1 view .LVU677
 2446              	.LBB157:
 155:..//kernel/core/tos_mmheap.c **** }
 2447              		.loc 1 155 5 view .LVU678
 155:..//kernel/core/tos_mmheap.c **** }
 2448              		.loc 1 155 5 is_stmt 0 view .LVU679
 2449              	.LBE157:
 2450              	.LBE156:
 2451              		.loc 1 688 33 view .LVU680
 2452 0038 19F0010F 		tst	r9, #1
 2453 003c 01D0     		beq	.L137
 2454              		.loc 1 688 60 discriminator 2 view .LVU681
 2455 003e 8542     		cmp	r5, r0
 2456 0040 18D2     		bcs	.L136
 2457              	.L137:
 689:..//kernel/core/tos_mmheap.c ****         p = tos_mmheap_alloc(size);
 2458              		.loc 1 689 9 is_stmt 1 view .LVU682
 2459              		.loc 1 689 13 is_stmt 0 view .LVU683
 2460 0042 4046     		mov	r0, r8
 2461              	.LVL256:
 2462              		.loc 1 689 13 view .LVU684
 2463 0044 FFF7FEFF 		bl	tos_mmheap_alloc
 2464              	.LVL257:
 690:..//kernel/core/tos_mmheap.c ****         if (p) {
 2465              		.loc 1 690 9 is_stmt 1 view .LVU685
 2466              		.loc 1 690 12 is_stmt 0 view .LVU686
 2467 0048 0546     		mov	r5, r0
 2468              	.LVL258:
 2469              		.loc 1 690 12 view .LVU687
 2470 004a D0B1     		cbz	r0, .L132
 691:..//kernel/core/tos_mmheap.c ****             min_size = curr_size < size ? curr_size : size;
 2471              		.loc 1 691 13 is_stmt 1 view .LVU688
 2472              	.LVL259:
 692:..//kernel/core/tos_mmheap.c ****             memcpy(p, ptr, min_size);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 62


 2473              		.loc 1 692 13 view .LVU689
 2474 004c 4246     		mov	r2, r8
 2475 004e A045     		cmp	r8, r4
 2476 0050 28BF     		it	cs
 2477 0052 2246     		movcs	r2, r4
 2478 0054 3146     		mov	r1, r6
 2479 0056 FFF7FEFF 		bl	memcpy
 2480              	.LVL260:
 693:..//kernel/core/tos_mmheap.c ****             tos_mmheap_free(ptr);
 2481              		.loc 1 693 13 view .LVU690
 2482 005a 3046     		mov	r0, r6
 2483 005c FFF7FEFF 		bl	tos_mmheap_free
 2484              	.LVL261:
 2485 0060 0FE0     		b	.L132
 2486              	.LVL262:
 2487              	.L140:
 673:..//kernel/core/tos_mmheap.c ****         return K_NULL;
 2488              		.loc 1 673 9 view .LVU691
 2489 0062 FFF7FEFF 		bl	tos_mmheap_free
 2490              	.LVL263:
 674:..//kernel/core/tos_mmheap.c ****     }
 2491              		.loc 1 674 9 view .LVU692
 674:..//kernel/core/tos_mmheap.c ****     }
 2492              		.loc 1 674 16 is_stmt 0 view .LVU693
 2493 0066 0025     		movs	r5, #0
 2494 0068 0BE0     		b	.L132
 2495              	.LVL264:
 2496              	.L141:
 678:..//kernel/core/tos_mmheap.c ****     }
 2497              		.loc 1 678 9 is_stmt 1 view .LVU694
 678:..//kernel/core/tos_mmheap.c ****     }
 2498              		.loc 1 678 16 is_stmt 0 view .LVU695
 2499 006a 4046     		mov	r0, r8
 2500              	.LVL265:
 678:..//kernel/core/tos_mmheap.c ****     }
 2501              		.loc 1 678 16 view .LVU696
 2502 006c FFF7FEFF 		bl	tos_mmheap_alloc
 2503              	.LVL266:
 678:..//kernel/core/tos_mmheap.c ****     }
 2504              		.loc 1 678 16 view .LVU697
 2505 0070 0546     		mov	r5, r0
 2506 0072 06E0     		b	.L132
 2507              	.LVL267:
 2508              	.L136:
 694:..//kernel/core/tos_mmheap.c ****         }
 695:..//kernel/core/tos_mmheap.c ****     } else {
 696:..//kernel/core/tos_mmheap.c ****         if (adjust_size > curr_size) {
 2509              		.loc 1 696 9 is_stmt 1 view .LVU698
 2510              		.loc 1 696 12 is_stmt 0 view .LVU699
 2511 0074 5445     		cmp	r4, r10
 2512 0076 07D3     		bcc	.L142
 2513              	.LVL268:
 2514              	.L138:
 697:..//kernel/core/tos_mmheap.c ****             blk_merge_next(curr_blk);
 698:..//kernel/core/tos_mmheap.c ****             blk_mark_as_used(curr_blk);
 699:..//kernel/core/tos_mmheap.c ****         }
 700:..//kernel/core/tos_mmheap.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 63


 701:..//kernel/core/tos_mmheap.c ****         blk_trim_used(curr_blk, adjust_size);
 2515              		.loc 1 701 9 is_stmt 1 view .LVU700
 2516 0078 5146     		mov	r1, r10
 2517 007a 3846     		mov	r0, r7
 2518 007c FFF7FEFF 		bl	blk_trim_used
 2519              	.LVL269:
 702:..//kernel/core/tos_mmheap.c ****         p = ptr;
 2520              		.loc 1 702 9 view .LVU701
 2521              		.loc 1 702 11 is_stmt 0 view .LVU702
 2522 0080 3546     		mov	r5, r6
 2523              	.LVL270:
 2524              	.L132:
 703:..//kernel/core/tos_mmheap.c ****     }
 704:..//kernel/core/tos_mmheap.c **** 
 705:..//kernel/core/tos_mmheap.c ****     return p;
 706:..//kernel/core/tos_mmheap.c **** }
 2525              		.loc 1 706 1 view .LVU703
 2526 0082 2846     		mov	r0, r5
 2527 0084 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2528              	.LVL271:
 2529              	.L142:
 697:..//kernel/core/tos_mmheap.c ****             blk_mark_as_used(curr_blk);
 2530              		.loc 1 697 13 is_stmt 1 view .LVU704
 2531 0088 3846     		mov	r0, r7
 2532              	.LVL272:
 697:..//kernel/core/tos_mmheap.c ****             blk_mark_as_used(curr_blk);
 2533              		.loc 1 697 13 is_stmt 0 view .LVU705
 2534 008a FFF7FEFF 		bl	blk_merge_next
 2535              	.LVL273:
 698:..//kernel/core/tos_mmheap.c ****         }
 2536              		.loc 1 698 13 is_stmt 1 view .LVU706
 2537 008e 3846     		mov	r0, r7
 2538 0090 FFF7FEFF 		bl	blk_mark_as_used
 2539              	.LVL274:
 2540 0094 F0E7     		b	.L138
 2541              		.cfi_endproc
 2542              	.LFE162:
 2544              		.section	.text.tos_mmheap_pool_add,"ax",%progbits
 2545              		.align	1
 2546              		.global	tos_mmheap_pool_add
 2547              		.syntax unified
 2548              		.thumb
 2549              		.thumb_func
 2550              		.fpu softvfp
 2552              	tos_mmheap_pool_add:
 2553              	.LVL275:
 2554              	.LFB163:
 707:..//kernel/core/tos_mmheap.c **** 
 708:..//kernel/core/tos_mmheap.c **** __API__ k_err_t tos_mmheap_pool_add(void *pool_start, size_t pool_size)
 709:..//kernel/core/tos_mmheap.c **** {
 2555              		.loc 1 709 1 view -0
 2556              		.cfi_startproc
 2557              		@ args = 0, pretend = 0, frame = 0
 2558              		@ frame_needed = 0, uses_anonymous_args = 0
 2559              		.loc 1 709 1 is_stmt 0 view .LVU708
 2560 0000 38B5     		push	{r3, r4, r5, lr}
 2561              	.LCFI38:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 64


 2562              		.cfi_def_cfa_offset 16
 2563              		.cfi_offset 3, -16
 2564              		.cfi_offset 4, -12
 2565              		.cfi_offset 5, -8
 2566              		.cfi_offset 14, -4
 710:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t   *curr_blk;
 2567              		.loc 1 710 5 is_stmt 1 view .LVU709
 711:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t   *next_blk;
 2568              		.loc 1 711 5 view .LVU710
 712:..//kernel/core/tos_mmheap.c ****     size_t          size_aligned;
 2569              		.loc 1 712 5 view .LVU711
 713:..//kernel/core/tos_mmheap.c **** 
 714:..//kernel/core/tos_mmheap.c ****     if (mmheap_pool_is_full()) {
 2570              		.loc 1 714 5 view .LVU712
 2571              	.LBB158:
 2572              	.LBI158:
 517:..//kernel/core/tos_mmheap.c **** {
 2573              		.loc 1 517 23 view .LVU713
 2574              	.LBB159:
 519:..//kernel/core/tos_mmheap.c **** }
 2575              		.loc 1 519 5 view .LVU714
 519:..//kernel/core/tos_mmheap.c **** }
 2576              		.loc 1 519 24 is_stmt 0 view .LVU715
 2577 0002 1F4B     		ldr	r3, .L150
 2578 0004 1B68     		ldr	r3, [r3]
 2579              	.LBE159:
 2580              	.LBE158:
 2581              		.loc 1 714 8 view .LVU716
 2582 0006 032B     		cmp	r3, #3
 2583 0008 2DD0     		beq	.L145
 2584 000a 0C46     		mov	r4, r1
 2585 000c 0546     		mov	r5, r0
 715:..//kernel/core/tos_mmheap.c ****         return K_ERR_MMHEAP_POOL_OVERFLOW;
 716:..//kernel/core/tos_mmheap.c ****     }
 717:..//kernel/core/tos_mmheap.c **** 
 718:..//kernel/core/tos_mmheap.c ****     if (mmheap_pool_is_exist(pool_start)) {
 2586              		.loc 1 718 5 is_stmt 1 view .LVU717
 2587              		.loc 1 718 9 is_stmt 0 view .LVU718
 2588 000e FFF7FEFF 		bl	mmheap_pool_is_exist
 2589              	.LVL276:
 2590              		.loc 1 718 8 view .LVU719
 2591 0012 58BB     		cbnz	r0, .L146
 719:..//kernel/core/tos_mmheap.c ****         return K_ERR_MMHEAP_POOL_ALREADY_EXIST;
 720:..//kernel/core/tos_mmheap.c ****     }
 721:..//kernel/core/tos_mmheap.c **** 
 722:..//kernel/core/tos_mmheap.c ****     size_aligned = align_down(pool_size - 2 * K_MMHEAP_BLK_HEADER_OVERHEAD, K_MMHEAP_ALIGN_SIZE);
 2592              		.loc 1 722 5 is_stmt 1 view .LVU720
 2593              		.loc 1 722 20 is_stmt 0 view .LVU721
 2594 0014 A4F10801 		sub	r1, r4, #8
 2595              	.LVL277:
 2596              	.LBB160:
 2597              	.LBI160:
 248:..//kernel/core/tos_mmheap.c **** {
 2598              		.loc 1 248 26 is_stmt 1 view .LVU722
 2599              	.LBB161:
 250:..//kernel/core/tos_mmheap.c **** }
 2600              		.loc 1 250 5 view .LVU723
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 65


 250:..//kernel/core/tos_mmheap.c **** }
 2601              		.loc 1 250 14 is_stmt 0 view .LVU724
 2602 0018 21F00301 		bic	r1, r1, #3
 2603              	.LVL278:
 250:..//kernel/core/tos_mmheap.c **** }
 2604              		.loc 1 250 14 view .LVU725
 2605              	.LBE161:
 2606              	.LBE160:
 723:..//kernel/core/tos_mmheap.c **** 
 724:..//kernel/core/tos_mmheap.c ****     if (((cpu_addr_t)pool_start % K_MMHEAP_ALIGN_SIZE) != 0u) {
 2607              		.loc 1 724 5 is_stmt 1 view .LVU726
 2608              		.loc 1 724 8 is_stmt 0 view .LVU727
 2609 001c 15F0030F 		tst	r5, #3
 2610 0020 27D1     		bne	.L147
 725:..//kernel/core/tos_mmheap.c ****         return K_ERR_MMHEAP_INVALID_POOL_ADDR;
 726:..//kernel/core/tos_mmheap.c ****     }
 727:..//kernel/core/tos_mmheap.c **** 
 728:..//kernel/core/tos_mmheap.c ****     if (size_aligned < K_MMHEAP_BLK_SIZE_MIN ||
 2611              		.loc 1 728 5 is_stmt 1 view .LVU728
 2612              		.loc 1 728 46 is_stmt 0 view .LVU729
 2613 0022 A1F10C02 		sub	r2, r1, #12
 2614              		.loc 1 728 8 view .LVU730
 2615 0026 174B     		ldr	r3, .L150+4
 2616 0028 9A42     		cmp	r2, r3
 2617 002a 25D8     		bhi	.L148
 729:..//kernel/core/tos_mmheap.c ****         size_aligned > K_MMHEAP_BLK_SIZE_MAX) {
 730:..//kernel/core/tos_mmheap.c ****         return K_ERR_MMHEAP_INVALID_POOL_SIZE;
 731:..//kernel/core/tos_mmheap.c ****     }
 732:..//kernel/core/tos_mmheap.c **** 
 733:..//kernel/core/tos_mmheap.c ****     /*
 734:..//kernel/core/tos_mmheap.c ****      ** Create the main free block. Offset the start of the block slightly
 735:..//kernel/core/tos_mmheap.c ****      ** so that the prev_phys_block field falls outside of the pool -
 736:..//kernel/core/tos_mmheap.c ****      ** it will never be used.
 737:..//kernel/core/tos_mmheap.c ****      */
 738:..//kernel/core/tos_mmheap.c ****     curr_blk = offset_to_blk(pool_start, -K_MMHEAP_BLK_HEADER_OVERHEAD);
 2618              		.loc 1 738 5 is_stmt 1 view .LVU731
 2619              	.LVL279:
 2620              	.LBB162:
 2621              	.LBI162:
 194:..//kernel/core/tos_mmheap.c **** {
 2622              		.loc 1 194 33 view .LVU732
 2623              	.LBB163:
 196:..//kernel/core/tos_mmheap.c **** }
 2624              		.loc 1 196 5 view .LVU733
 196:..//kernel/core/tos_mmheap.c **** }
 2625              		.loc 1 196 45 is_stmt 0 view .LVU734
 2626 002c 2C46     		mov	r4, r5
 2627              	.LVL280:
 196:..//kernel/core/tos_mmheap.c **** }
 2628              		.loc 1 196 45 view .LVU735
 2629              	.LBE163:
 2630              	.LBE162:
 739:..//kernel/core/tos_mmheap.c ****     blk_set_size(curr_blk, size_aligned);
 2631              		.loc 1 739 5 is_stmt 1 view .LVU736
 2632              	.LBB164:
 2633              	.LBI164:
 148:..//kernel/core/tos_mmheap.c **** {
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 66


 2634              		.loc 1 148 24 view .LVU737
 2635              	.LBB165:
 150:..//kernel/core/tos_mmheap.c **** }
 2636              		.loc 1 150 5 view .LVU738
 150:..//kernel/core/tos_mmheap.c **** }
 2637              		.loc 1 150 28 is_stmt 0 view .LVU739
 2638 002e 54F80439 		ldr	r3, [r4], #-4
 150:..//kernel/core/tos_mmheap.c **** }
 2639              		.loc 1 150 35 view .LVU740
 2640 0032 03F00303 		and	r3, r3, #3
 150:..//kernel/core/tos_mmheap.c **** }
 2641              		.loc 1 150 22 view .LVU741
 2642 0036 1943     		orrs	r1, r1, r3
 2643              	.LVL281:
 150:..//kernel/core/tos_mmheap.c **** }
 2644              		.loc 1 150 22 view .LVU742
 2645              	.LBE165:
 2646              	.LBE164:
 740:..//kernel/core/tos_mmheap.c ****     blk_set_free(curr_blk);
 2647              		.loc 1 740 5 is_stmt 1 view .LVU743
 2648              	.LBB166:
 2649              	.LBI166:
 158:..//kernel/core/tos_mmheap.c **** {
 2650              		.loc 1 158 24 view .LVU744
 2651              	.LBB167:
 160:..//kernel/core/tos_mmheap.c **** }
 2652              		.loc 1 160 5 view .LVU745
 160:..//kernel/core/tos_mmheap.c **** }
 2653              		.loc 1 160 15 is_stmt 0 view .LVU746
 2654 0038 41F00101 		orr	r1, r1, #1
 2655 003c 6160     		str	r1, [r4, #4]
 2656              	.LVL282:
 160:..//kernel/core/tos_mmheap.c **** }
 2657              		.loc 1 160 15 view .LVU747
 2658              	.LBE167:
 2659              	.LBE166:
 741:..//kernel/core/tos_mmheap.c ****     blk_set_prev_used(curr_blk);
 2660              		.loc 1 741 5 is_stmt 1 view .LVU748
 2661 003e 2046     		mov	r0, r4
 2662 0040 FFF7FEFF 		bl	blk_set_prev_used
 2663              	.LVL283:
 742:..//kernel/core/tos_mmheap.c ****     blk_insert(curr_blk);
 2664              		.loc 1 742 5 view .LVU749
 2665 0044 2046     		mov	r0, r4
 2666 0046 FFF7FEFF 		bl	blk_insert
 2667              	.LVL284:
 743:..//kernel/core/tos_mmheap.c **** 
 744:..//kernel/core/tos_mmheap.c ****     /* Split the block to create a zero-size sentinel block. */
 745:..//kernel/core/tos_mmheap.c ****     next_blk = blk_link_next(curr_blk);
 2668              		.loc 1 745 5 view .LVU750
 2669              		.loc 1 745 16 is_stmt 0 view .LVU751
 2670 004a 2046     		mov	r0, r4
 2671 004c FFF7FEFF 		bl	blk_link_next
 2672              	.LVL285:
 746:..//kernel/core/tos_mmheap.c ****     blk_set_size(next_blk, 0);
 2673              		.loc 1 746 5 is_stmt 1 view .LVU752
 2674              	.LBB168:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 67


 2675              	.LBI168:
 148:..//kernel/core/tos_mmheap.c **** {
 2676              		.loc 1 148 24 view .LVU753
 2677              	.LBB169:
 150:..//kernel/core/tos_mmheap.c **** }
 2678              		.loc 1 150 5 view .LVU754
 150:..//kernel/core/tos_mmheap.c **** }
 2679              		.loc 1 150 5 is_stmt 0 view .LVU755
 2680              	.LBE169:
 2681              	.LBE168:
 747:..//kernel/core/tos_mmheap.c ****     blk_set_used(next_blk);
 2682              		.loc 1 747 5 is_stmt 1 view .LVU756
 2683              	.LBB170:
 2684              	.LBI170:
 163:..//kernel/core/tos_mmheap.c **** {
 2685              		.loc 1 163 24 view .LVU757
 2686              	.LBB171:
 165:..//kernel/core/tos_mmheap.c **** }
 2687              		.loc 1 165 5 view .LVU758
 165:..//kernel/core/tos_mmheap.c **** }
 2688              		.loc 1 165 5 is_stmt 0 view .LVU759
 2689              	.LBE171:
 2690              	.LBE170:
 748:..//kernel/core/tos_mmheap.c ****     blk_set_prev_free(next_blk);
 2691              		.loc 1 748 5 is_stmt 1 view .LVU760
 2692              	.LBB172:
 2693              	.LBI172:
 173:..//kernel/core/tos_mmheap.c **** {
 2694              		.loc 1 173 24 view .LVU761
 2695              	.LBB173:
 175:..//kernel/core/tos_mmheap.c **** }
 2696              		.loc 1 175 5 view .LVU762
 175:..//kernel/core/tos_mmheap.c **** }
 2697              		.loc 1 175 15 is_stmt 0 view .LVU763
 2698 0050 0223     		movs	r3, #2
 2699 0052 4360     		str	r3, [r0, #4]
 2700              	.LVL286:
 175:..//kernel/core/tos_mmheap.c **** }
 2701              		.loc 1 175 15 view .LVU764
 2702              	.LBE173:
 2703              	.LBE172:
 749:..//kernel/core/tos_mmheap.c **** 
 750:..//kernel/core/tos_mmheap.c ****     mmheap_pool_record(pool_start);
 2704              		.loc 1 750 5 is_stmt 1 view .LVU765
 2705              	.LBB174:
 2706              	.LBI174:
 534:..//kernel/core/tos_mmheap.c **** {
 2707              		.loc 1 534 24 view .LVU766
 2708              	.LBB175:
 536:..//kernel/core/tos_mmheap.c **** }
 2709              		.loc 1 536 5 view .LVU767
 536:..//kernel/core/tos_mmheap.c **** }
 2710              		.loc 1 536 41 is_stmt 0 view .LVU768
 2711 0054 0A4B     		ldr	r3, .L150
 2712 0056 1A68     		ldr	r2, [r3]
 536:..//kernel/core/tos_mmheap.c **** }
 2713              		.loc 1 536 50 view .LVU769
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 68


 2714 0058 511C     		adds	r1, r2, #1
 2715 005a 1960     		str	r1, [r3]
 536:..//kernel/core/tos_mmheap.c **** }
 2716              		.loc 1 536 54 view .LVU770
 2717 005c 03EB8203 		add	r3, r3, r2, lsl #2
 2718 0060 5D60     		str	r5, [r3, #4]
 2719              	.LVL287:
 536:..//kernel/core/tos_mmheap.c **** }
 2720              		.loc 1 536 54 view .LVU771
 2721              	.LBE175:
 2722              	.LBE174:
 751:..//kernel/core/tos_mmheap.c **** 
 752:..//kernel/core/tos_mmheap.c ****     return K_ERR_NONE;
 2723              		.loc 1 752 5 is_stmt 1 view .LVU772
 2724              		.loc 1 752 12 is_stmt 0 view .LVU773
 2725 0062 0020     		movs	r0, #0
 2726              	.LVL288:
 2727              	.L144:
 753:..//kernel/core/tos_mmheap.c **** }
 2728              		.loc 1 753 1 view .LVU774
 2729 0064 38BD     		pop	{r3, r4, r5, pc}
 2730              	.LVL289:
 2731              	.L145:
 715:..//kernel/core/tos_mmheap.c ****     }
 2732              		.loc 1 715 16 view .LVU775
 2733 0066 40F22230 		movw	r0, #802
 2734              	.LVL290:
 715:..//kernel/core/tos_mmheap.c ****     }
 2735              		.loc 1 715 16 view .LVU776
 2736 006a FBE7     		b	.L144
 2737              	.LVL291:
 2738              	.L146:
 719:..//kernel/core/tos_mmheap.c ****     }
 2739              		.loc 1 719 16 view .LVU777
 2740 006c 40F22330 		movw	r0, #803
 2741 0070 F8E7     		b	.L144
 2742              	.LVL292:
 2743              	.L147:
 725:..//kernel/core/tos_mmheap.c ****     }
 2744              		.loc 1 725 16 view .LVU778
 2745 0072 4FF44870 		mov	r0, #800
 2746 0076 F5E7     		b	.L144
 2747              	.L148:
 730:..//kernel/core/tos_mmheap.c ****     }
 2748              		.loc 1 730 16 view .LVU779
 2749 0078 40F22130 		movw	r0, #801
 2750 007c F2E7     		b	.L144
 2751              	.L151:
 2752 007e 00BF     		.align	2
 2753              	.L150:
 2754 0080 00000000 		.word	k_mmheap_ctl
 2755 0084 F4FFFF3F 		.word	1073741812
 2756              		.cfi_endproc
 2757              	.LFE163:
 2759              		.section	.text.mmheap_init_with_pool,"ax",%progbits
 2760              		.align	1
 2761              		.global	mmheap_init_with_pool
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 69


 2762              		.syntax unified
 2763              		.thumb
 2764              		.thumb_func
 2765              		.fpu softvfp
 2767              	mmheap_init_with_pool:
 2768              	.LVL293:
 2769              	.LFB157:
 582:..//kernel/core/tos_mmheap.c ****     mmheap_ctl_init();
 2770              		.loc 1 582 1 is_stmt 1 view -0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 0, uses_anonymous_args = 0
 582:..//kernel/core/tos_mmheap.c ****     mmheap_ctl_init();
 2774              		.loc 1 582 1 is_stmt 0 view .LVU781
 2775 0000 38B5     		push	{r3, r4, r5, lr}
 2776              	.LCFI39:
 2777              		.cfi_def_cfa_offset 16
 2778              		.cfi_offset 3, -16
 2779              		.cfi_offset 4, -12
 2780              		.cfi_offset 5, -8
 2781              		.cfi_offset 14, -4
 2782 0002 0446     		mov	r4, r0
 2783 0004 0D46     		mov	r5, r1
 583:..//kernel/core/tos_mmheap.c **** 
 2784              		.loc 1 583 5 is_stmt 1 view .LVU782
 2785 0006 FFF7FEFF 		bl	mmheap_ctl_init
 2786              	.LVL294:
 585:..//kernel/core/tos_mmheap.c **** }
 2787              		.loc 1 585 5 view .LVU783
 585:..//kernel/core/tos_mmheap.c **** }
 2788              		.loc 1 585 12 is_stmt 0 view .LVU784
 2789 000a 2946     		mov	r1, r5
 2790 000c 2046     		mov	r0, r4
 2791 000e FFF7FEFF 		bl	tos_mmheap_pool_add
 2792              	.LVL295:
 586:..//kernel/core/tos_mmheap.c **** 
 2793              		.loc 1 586 1 view .LVU785
 2794 0012 38BD     		pop	{r3, r4, r5, pc}
 586:..//kernel/core/tos_mmheap.c **** 
 2795              		.loc 1 586 1 view .LVU786
 2796              		.cfi_endproc
 2797              	.LFE157:
 2799              		.section	.text.tos_mmheap_pool_rmv,"ax",%progbits
 2800              		.align	1
 2801              		.global	tos_mmheap_pool_rmv
 2802              		.syntax unified
 2803              		.thumb
 2804              		.thumb_func
 2805              		.fpu softvfp
 2807              	tos_mmheap_pool_rmv:
 2808              	.LVL296:
 2809              	.LFB164:
 754:..//kernel/core/tos_mmheap.c **** 
 755:..//kernel/core/tos_mmheap.c **** __API__ k_err_t tos_mmheap_pool_rmv(void *pool_start)
 756:..//kernel/core/tos_mmheap.c **** {
 2810              		.loc 1 756 1 is_stmt 1 view -0
 2811              		.cfi_startproc
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 70


 2812              		@ args = 0, pretend = 0, frame = 8
 2813              		@ frame_needed = 0, uses_anonymous_args = 0
 2814              		.loc 1 756 1 is_stmt 0 view .LVU788
 2815 0000 30B5     		push	{r4, r5, lr}
 2816              	.LCFI40:
 2817              		.cfi_def_cfa_offset 12
 2818              		.cfi_offset 4, -12
 2819              		.cfi_offset 5, -8
 2820              		.cfi_offset 14, -4
 2821 0002 83B0     		sub	sp, sp, #12
 2822              	.LCFI41:
 2823              		.cfi_def_cfa_offset 24
 757:..//kernel/core/tos_mmheap.c ****     int fl = 0, sl = 0;
 2824              		.loc 1 757 5 is_stmt 1 view .LVU789
 2825              		.loc 1 757 9 is_stmt 0 view .LVU790
 2826 0004 0023     		movs	r3, #0
 2827 0006 0193     		str	r3, [sp, #4]
 2828              		.loc 1 757 17 view .LVU791
 2829 0008 0093     		str	r3, [sp]
 758:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t *blk;
 2830              		.loc 1 758 5 is_stmt 1 view .LVU792
 759:..//kernel/core/tos_mmheap.c **** 
 760:..//kernel/core/tos_mmheap.c ****     TOS_PTR_SANITY_CHECK(pool_start);
 2831              		.loc 1 760 5 view .LVU793
 2832              		.loc 1 760 5 view .LVU794
 2833 000a B8B1     		cbz	r0, .L156
 2834 000c 0446     		mov	r4, r0
 761:..//kernel/core/tos_mmheap.c **** 
 762:..//kernel/core/tos_mmheap.c ****     if (!mmheap_pool_is_exist(pool_start)) {
 2835              		.loc 1 762 5 view .LVU795
 2836              		.loc 1 762 10 is_stmt 0 view .LVU796
 2837 000e FFF7FEFF 		bl	mmheap_pool_is_exist
 2838              	.LVL297:
 2839              		.loc 1 762 8 view .LVU797
 2840 0012 B0B1     		cbz	r0, .L157
 763:..//kernel/core/tos_mmheap.c ****         return K_ERR_MMHEAP_POOL_NOT_EXIST;
 764:..//kernel/core/tos_mmheap.c ****     }
 765:..//kernel/core/tos_mmheap.c **** 
 766:..//kernel/core/tos_mmheap.c ****     blk = offset_to_blk(pool_start, -K_MMHEAP_BLK_HEADER_OVERHEAD);
 2841              		.loc 1 766 5 is_stmt 1 view .LVU798
 2842              	.LVL298:
 2843              	.LBB176:
 2844              	.LBI176:
 194:..//kernel/core/tos_mmheap.c **** {
 2845              		.loc 1 194 33 view .LVU799
 2846              	.LBB177:
 196:..//kernel/core/tos_mmheap.c **** }
 2847              		.loc 1 196 5 view .LVU800
 196:..//kernel/core/tos_mmheap.c **** }
 2848              		.loc 1 196 45 is_stmt 0 view .LVU801
 2849 0014 2546     		mov	r5, r4
 2850              	.LVL299:
 196:..//kernel/core/tos_mmheap.c **** }
 2851              		.loc 1 196 45 view .LVU802
 2852              	.LBE177:
 2853              	.LBE176:
 767:..//kernel/core/tos_mmheap.c ****     mapping_insert(blk_size(blk), &fl, &sl);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 71


 2854              		.loc 1 767 5 is_stmt 1 view .LVU803
 2855              	.LBB178:
 2856              	.LBI178:
 138:..//kernel/core/tos_mmheap.c **** {
 2857              		.loc 1 138 26 view .LVU804
 2858              	.LBB179:
 140:..//kernel/core/tos_mmheap.c **** }
 2859              		.loc 1 140 5 view .LVU805
 140:..//kernel/core/tos_mmheap.c **** }
 2860              		.loc 1 140 15 is_stmt 0 view .LVU806
 2861 0016 55F80409 		ldr	r0, [r5], #-4
 2862              	.LVL300:
 140:..//kernel/core/tos_mmheap.c **** }
 2863              		.loc 1 140 15 view .LVU807
 2864              	.LBE179:
 2865              	.LBE178:
 2866              		.loc 1 767 5 view .LVU808
 2867 001a 6A46     		mov	r2, sp
 2868 001c 01A9     		add	r1, sp, #4
 2869 001e 20F00300 		bic	r0, r0, #3
 2870 0022 FFF7FEFF 		bl	mapping_insert
 2871              	.LVL301:
 768:..//kernel/core/tos_mmheap.c ****     remove_free_block(blk, fl, sl);
 2872              		.loc 1 768 5 is_stmt 1 view .LVU809
 2873 0026 009A     		ldr	r2, [sp]
 2874 0028 0199     		ldr	r1, [sp, #4]
 2875 002a 2846     		mov	r0, r5
 2876 002c FFF7FEFF 		bl	remove_free_block
 2877              	.LVL302:
 769:..//kernel/core/tos_mmheap.c **** 
 770:..//kernel/core/tos_mmheap.c ****     mmheap_pool_unrecord(pool_start);
 2878              		.loc 1 770 5 view .LVU810
 2879 0030 2046     		mov	r0, r4
 2880 0032 FFF7FEFF 		bl	mmheap_pool_unrecord
 2881              	.LVL303:
 771:..//kernel/core/tos_mmheap.c ****     return K_ERR_NONE;
 2882              		.loc 1 771 5 view .LVU811
 2883              		.loc 1 771 12 is_stmt 0 view .LVU812
 2884 0036 0020     		movs	r0, #0
 2885              	.LVL304:
 2886              	.L155:
 772:..//kernel/core/tos_mmheap.c **** }
 2887              		.loc 1 772 1 view .LVU813
 2888 0038 03B0     		add	sp, sp, #12
 2889              	.LCFI42:
 2890              		.cfi_remember_state
 2891              		.cfi_def_cfa_offset 12
 2892              		@ sp needed
 2893 003a 30BD     		pop	{r4, r5, pc}
 2894              	.LVL305:
 2895              	.L156:
 2896              	.LCFI43:
 2897              		.cfi_restore_state
 760:..//kernel/core/tos_mmheap.c **** 
 2898              		.loc 1 760 5 view .LVU814
 2899 003c 40F24C40 		movw	r0, #1100
 2900              	.LVL306:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 72


 760:..//kernel/core/tos_mmheap.c **** 
 2901              		.loc 1 760 5 view .LVU815
 2902 0040 FAE7     		b	.L155
 2903              	.LVL307:
 2904              	.L157:
 763:..//kernel/core/tos_mmheap.c ****     }
 2905              		.loc 1 763 16 view .LVU816
 2906 0042 4FF44970 		mov	r0, #804
 2907 0046 F7E7     		b	.L155
 2908              		.cfi_endproc
 2909              	.LFE164:
 2911              		.section	.text.tos_mmheap_pool_check,"ax",%progbits
 2912              		.align	1
 2913              		.global	tos_mmheap_pool_check
 2914              		.syntax unified
 2915              		.thumb
 2916              		.thumb_func
 2917              		.fpu softvfp
 2919              	tos_mmheap_pool_check:
 2920              	.LVL308:
 2921              	.LFB165:
 773:..//kernel/core/tos_mmheap.c **** 
 774:..//kernel/core/tos_mmheap.c **** __API__ k_err_t tos_mmheap_pool_check(void *pool_start, k_mmheap_info_t *info)
 775:..//kernel/core/tos_mmheap.c **** {
 2922              		.loc 1 775 1 is_stmt 1 view -0
 2923              		.cfi_startproc
 2924              		@ args = 0, pretend = 0, frame = 0
 2925              		@ frame_needed = 0, uses_anonymous_args = 0
 776:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t* blk;
 2926              		.loc 1 776 5 view .LVU818
 777:..//kernel/core/tos_mmheap.c **** 
 778:..//kernel/core/tos_mmheap.c ****     TOS_PTR_SANITY_CHECK(pool_start);
 2927              		.loc 1 778 5 view .LVU819
 2928              		.loc 1 778 5 view .LVU820
 2929 0000 D0B1     		cbz	r0, .L165
 779:..//kernel/core/tos_mmheap.c ****     TOS_PTR_SANITY_CHECK(info);
 2930              		.loc 1 779 5 view .LVU821
 2931              		.loc 1 779 5 view .LVU822
 2932 0002 E1B1     		cbz	r1, .L166
 775:..//kernel/core/tos_mmheap.c ****     mmheap_blk_t* blk;
 2933              		.loc 1 775 1 is_stmt 0 view .LVU823
 2934 0004 10B5     		push	{r4, lr}
 2935              	.LCFI44:
 2936              		.cfi_def_cfa_offset 8
 2937              		.cfi_offset 4, -8
 2938              		.cfi_offset 14, -4
 2939 0006 0C46     		mov	r4, r1
 780:..//kernel/core/tos_mmheap.c **** 
 781:..//kernel/core/tos_mmheap.c ****     memset(info, 0, sizeof(k_mmheap_info_t));
 2940              		.loc 1 781 5 is_stmt 1 view .LVU824
 2941 0008 0022     		movs	r2, #0
 2942 000a 0A60     		str	r2, [r1]	@ unaligned
 2943 000c 4A60     		str	r2, [r1, #4]	@ unaligned
 782:..//kernel/core/tos_mmheap.c **** 
 783:..//kernel/core/tos_mmheap.c ****     blk = offset_to_blk(pool_start, -K_MMHEAP_BLK_HEADER_OVERHEAD);
 2944              		.loc 1 783 5 view .LVU825
 2945              	.LVL309:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 73


 2946              	.LBB180:
 2947              	.LBI180:
 194:..//kernel/core/tos_mmheap.c **** {
 2948              		.loc 1 194 33 view .LVU826
 2949              	.LBB181:
 196:..//kernel/core/tos_mmheap.c **** }
 2950              		.loc 1 196 5 view .LVU827
 196:..//kernel/core/tos_mmheap.c **** }
 2951              		.loc 1 196 45 is_stmt 0 view .LVU828
 2952 000e 0438     		subs	r0, r0, #4
 2953              	.LVL310:
 196:..//kernel/core/tos_mmheap.c **** }
 2954              		.loc 1 196 45 view .LVU829
 2955              	.LBE181:
 2956              	.LBE180:
 784:..//kernel/core/tos_mmheap.c **** 
 785:..//kernel/core/tos_mmheap.c ****     while (blk && !blk_is_last(blk)) {
 2957              		.loc 1 785 5 is_stmt 1 view .LVU830
 2958              		.loc 1 785 11 is_stmt 0 view .LVU831
 2959 0010 04E0     		b	.L161
 2960              	.LVL311:
 2961              	.L162:
 786:..//kernel/core/tos_mmheap.c ****         if (blk_is_free(blk)) {
 787:..//kernel/core/tos_mmheap.c ****             info->free += blk_size(blk);
 788:..//kernel/core/tos_mmheap.c ****         } else {
 789:..//kernel/core/tos_mmheap.c ****             info->used += blk_size(blk);
 2962              		.loc 1 789 13 is_stmt 1 view .LVU832
 140:..//kernel/core/tos_mmheap.c **** }
 2963              		.loc 1 140 5 view .LVU833
 2964              		.loc 1 789 24 is_stmt 0 view .LVU834
 2965 0012 2368     		ldr	r3, [r4]
 2966 0014 1A44     		add	r2, r2, r3
 2967 0016 2260     		str	r2, [r4]
 2968              	.L163:
 790:..//kernel/core/tos_mmheap.c ****         }
 791:..//kernel/core/tos_mmheap.c ****         blk = blk_next(blk);
 2969              		.loc 1 791 9 is_stmt 1 view .LVU835
 2970              		.loc 1 791 15 is_stmt 0 view .LVU836
 2971 0018 FFF7FEFF 		bl	blk_next
 2972              	.LVL312:
 2973              	.L161:
 785:..//kernel/core/tos_mmheap.c ****         if (blk_is_free(blk)) {
 2974              		.loc 1 785 11 view .LVU837
 2975 001c 90B1     		cbz	r0, .L167
 2976              	.LVL313:
 2977              	.LBB182:
 2978              	.LBI182:
 143:..//kernel/core/tos_mmheap.c **** {
 2979              		.loc 1 143 23 is_stmt 1 view .LVU838
 2980              	.LBE182:
 145:..//kernel/core/tos_mmheap.c **** }
 2981              		.loc 1 145 2 view .LVU839
 2982              	.LBB185:
 2983              	.LBB183:
 2984              	.LBI183:
 138:..//kernel/core/tos_mmheap.c **** {
 2985              		.loc 1 138 26 view .LVU840
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 74


 2986              	.LBB184:
 140:..//kernel/core/tos_mmheap.c **** }
 2987              		.loc 1 140 5 view .LVU841
 140:..//kernel/core/tos_mmheap.c **** }
 2988              		.loc 1 140 15 is_stmt 0 view .LVU842
 2989 001e 4368     		ldr	r3, [r0, #4]
 2990              	.LVL314:
 140:..//kernel/core/tos_mmheap.c **** }
 2991              		.loc 1 140 15 view .LVU843
 2992              	.LBE184:
 2993              	.LBE183:
 2994              	.LBE185:
 785:..//kernel/core/tos_mmheap.c ****         if (blk_is_free(blk)) {
 2995              		.loc 1 785 16 view .LVU844
 2996 0020 33F00302 		bics	r2, r3, #3
 2997 0024 06D0     		beq	.L172
 786:..//kernel/core/tos_mmheap.c ****             info->free += blk_size(blk);
 2998              		.loc 1 786 9 is_stmt 1 view .LVU845
 2999              	.LVL315:
 3000              	.LBB186:
 3001              	.LBI186:
 153:..//kernel/core/tos_mmheap.c **** {
 3002              		.loc 1 153 23 view .LVU846
 3003              	.LBB187:
 155:..//kernel/core/tos_mmheap.c **** }
 3004              		.loc 1 155 5 view .LVU847
 155:..//kernel/core/tos_mmheap.c **** }
 3005              		.loc 1 155 5 is_stmt 0 view .LVU848
 3006              	.LBE187:
 3007              	.LBE186:
 786:..//kernel/core/tos_mmheap.c ****             info->free += blk_size(blk);
 3008              		.loc 1 786 12 view .LVU849
 3009 0026 13F0010F 		tst	r3, #1
 3010 002a F2D0     		beq	.L162
 787:..//kernel/core/tos_mmheap.c ****         } else {
 3011              		.loc 1 787 13 is_stmt 1 view .LVU850
 3012              	.LVL316:
 140:..//kernel/core/tos_mmheap.c **** }
 3013              		.loc 1 140 5 view .LVU851
 787:..//kernel/core/tos_mmheap.c ****         } else {
 3014              		.loc 1 787 24 is_stmt 0 view .LVU852
 3015 002c 6368     		ldr	r3, [r4, #4]
 3016 002e 1A44     		add	r2, r2, r3
 3017 0030 6260     		str	r2, [r4, #4]
 3018 0032 F1E7     		b	.L163
 3019              	.L172:
 792:..//kernel/core/tos_mmheap.c ****     }
 793:..//kernel/core/tos_mmheap.c **** 
 794:..//kernel/core/tos_mmheap.c ****     return K_ERR_NONE;
 3020              		.loc 1 794 12 view .LVU853
 3021 0034 0020     		movs	r0, #0
 3022              	.LVL317:
 3023              		.loc 1 794 12 view .LVU854
 3024 0036 06E0     		b	.L160
 3025              	.LVL318:
 3026              	.L165:
 3027              	.LCFI45:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 75


 3028              		.cfi_def_cfa_offset 0
 3029              		.cfi_restore 4
 3030              		.cfi_restore 14
 778:..//kernel/core/tos_mmheap.c ****     TOS_PTR_SANITY_CHECK(info);
 3031              		.loc 1 778 5 view .LVU855
 3032 0038 40F24C40 		movw	r0, #1100
 3033              	.LVL319:
 778:..//kernel/core/tos_mmheap.c ****     TOS_PTR_SANITY_CHECK(info);
 3034              		.loc 1 778 5 view .LVU856
 3035 003c 7047     		bx	lr
 3036              	.LVL320:
 3037              	.L166:
 779:..//kernel/core/tos_mmheap.c **** 
 3038              		.loc 1 779 5 view .LVU857
 3039 003e 40F24C40 		movw	r0, #1100
 3040              	.LVL321:
 795:..//kernel/core/tos_mmheap.c **** }
 3041              		.loc 1 795 1 view .LVU858
 3042 0042 7047     		bx	lr
 3043              	.LVL322:
 3044              	.L167:
 3045              	.LCFI46:
 3046              		.cfi_def_cfa_offset 8
 3047              		.cfi_offset 4, -8
 3048              		.cfi_offset 14, -4
 794:..//kernel/core/tos_mmheap.c **** }
 3049              		.loc 1 794 12 view .LVU859
 3050 0044 0020     		movs	r0, #0
 3051              	.LVL323:
 3052              	.L160:
 3053              		.loc 1 795 1 view .LVU860
 3054 0046 10BD     		pop	{r4, pc}
 3055              		.loc 1 795 1 view .LVU861
 3056              		.cfi_endproc
 3057              	.LFE165:
 3059              		.section	.text.tos_mmheap_check,"ax",%progbits
 3060              		.align	1
 3061              		.global	tos_mmheap_check
 3062              		.syntax unified
 3063              		.thumb
 3064              		.thumb_func
 3065              		.fpu softvfp
 3067              	tos_mmheap_check:
 3068              	.LVL324:
 3069              	.LFB166:
 796:..//kernel/core/tos_mmheap.c **** 
 797:..//kernel/core/tos_mmheap.c **** __API__ k_err_t tos_mmheap_check(k_mmheap_info_t *info)
 798:..//kernel/core/tos_mmheap.c **** {
 3070              		.loc 1 798 1 is_stmt 1 view -0
 3071              		.cfi_startproc
 3072              		@ args = 0, pretend = 0, frame = 8
 3073              		@ frame_needed = 0, uses_anonymous_args = 0
 3074              		.loc 1 798 1 is_stmt 0 view .LVU863
 3075 0000 30B5     		push	{r4, r5, lr}
 3076              	.LCFI47:
 3077              		.cfi_def_cfa_offset 12
 3078              		.cfi_offset 4, -12
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 76


 3079              		.cfi_offset 5, -8
 3080              		.cfi_offset 14, -4
 3081 0002 83B0     		sub	sp, sp, #12
 3082              	.LCFI48:
 3083              		.cfi_def_cfa_offset 24
 799:..//kernel/core/tos_mmheap.c ****     int i;
 3084              		.loc 1 799 5 is_stmt 1 view .LVU864
 800:..//kernel/core/tos_mmheap.c ****     k_err_t err;
 3085              		.loc 1 800 5 view .LVU865
 801:..//kernel/core/tos_mmheap.c ****     k_mmheap_info_t pool_info;
 3086              		.loc 1 801 5 view .LVU866
 802:..//kernel/core/tos_mmheap.c **** 
 803:..//kernel/core/tos_mmheap.c ****     TOS_PTR_SANITY_CHECK(info);
 3087              		.loc 1 803 5 view .LVU867
 3088              		.loc 1 803 5 view .LVU868
 3089 0004 B0FA80F4 		clz	r4, r0
 3090 0008 6409     		lsrs	r4, r4, #5
 3091 000a F4B9     		cbnz	r4, .L177
 3092 000c 0546     		mov	r5, r0
 804:..//kernel/core/tos_mmheap.c **** 
 805:..//kernel/core/tos_mmheap.c ****     memset(info, 0, sizeof(k_mmheap_info_t));
 3093              		.loc 1 805 5 view .LVU869
 3094 000e 0023     		movs	r3, #0
 3095 0010 0360     		str	r3, [r0]	@ unaligned
 3096 0012 4360     		str	r3, [r0, #4]	@ unaligned
 806:..//kernel/core/tos_mmheap.c **** 
 807:..//kernel/core/tos_mmheap.c ****     for (i = 0; i < k_mmheap_ctl.pool_cnt; ++i) {
 3097              		.loc 1 807 5 view .LVU870
 3098              	.LVL325:
 3099              	.L175:
 3100              		.loc 1 807 33 is_stmt 0 discriminator 1 view .LVU871
 3101 0014 0E4B     		ldr	r3, .L180
 3102 0016 1B68     		ldr	r3, [r3]
 3103              		.loc 1 807 5 discriminator 1 view .LVU872
 3104 0018 A342     		cmp	r3, r4
 3105 001a 12DD     		ble	.L179
 808:..//kernel/core/tos_mmheap.c ****         err = tos_mmheap_pool_check(k_mmheap_ctl.pool_start[i], &pool_info);
 3106              		.loc 1 808 9 is_stmt 1 view .LVU873
 3107              		.loc 1 808 15 is_stmt 0 view .LVU874
 3108 001c 0C4B     		ldr	r3, .L180
 3109 001e 03EB8403 		add	r3, r3, r4, lsl #2
 3110 0022 6946     		mov	r1, sp
 3111 0024 5868     		ldr	r0, [r3, #4]
 3112 0026 FFF7FEFF 		bl	tos_mmheap_pool_check
 3113              	.LVL326:
 809:..//kernel/core/tos_mmheap.c ****         if (err != K_ERR_NONE) {
 3114              		.loc 1 809 9 is_stmt 1 view .LVU875
 3115              		.loc 1 809 12 is_stmt 0 view .LVU876
 3116 002a 0346     		mov	r3, r0
 3117 002c 50B9     		cbnz	r0, .L174
 810:..//kernel/core/tos_mmheap.c ****             return err;
 811:..//kernel/core/tos_mmheap.c ****         }
 812:..//kernel/core/tos_mmheap.c **** 
 813:..//kernel/core/tos_mmheap.c ****         info->free += pool_info.free;
 3118              		.loc 1 813 9 is_stmt 1 discriminator 2 view .LVU877
 3119              		.loc 1 813 20 is_stmt 0 discriminator 2 view .LVU878
 3120 002e 6B68     		ldr	r3, [r5, #4]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 77


 3121 0030 019A     		ldr	r2, [sp, #4]
 3122 0032 1344     		add	r3, r3, r2
 3123 0034 6B60     		str	r3, [r5, #4]
 814:..//kernel/core/tos_mmheap.c ****         info->used += pool_info.used;
 3124              		.loc 1 814 9 is_stmt 1 discriminator 2 view .LVU879
 3125              		.loc 1 814 20 is_stmt 0 discriminator 2 view .LVU880
 3126 0036 2B68     		ldr	r3, [r5]
 3127 0038 009A     		ldr	r2, [sp]
 3128 003a 1344     		add	r3, r3, r2
 3129 003c 2B60     		str	r3, [r5]
 807:..//kernel/core/tos_mmheap.c ****         err = tos_mmheap_pool_check(k_mmheap_ctl.pool_start[i], &pool_info);
 3130              		.loc 1 807 44 discriminator 2 view .LVU881
 3131 003e 0134     		adds	r4, r4, #1
 3132              	.LVL327:
 807:..//kernel/core/tos_mmheap.c ****         err = tos_mmheap_pool_check(k_mmheap_ctl.pool_start[i], &pool_info);
 3133              		.loc 1 807 44 discriminator 2 view .LVU882
 3134 0040 E8E7     		b	.L175
 3135              	.LVL328:
 3136              	.L179:
 815:..//kernel/core/tos_mmheap.c ****     }
 816:..//kernel/core/tos_mmheap.c **** 
 817:..//kernel/core/tos_mmheap.c ****     return K_ERR_NONE;
 3137              		.loc 1 817 12 view .LVU883
 3138 0042 0023     		movs	r3, #0
 3139              	.LVL329:
 3140              	.L174:
 818:..//kernel/core/tos_mmheap.c **** }
 3141              		.loc 1 818 1 view .LVU884
 3142 0044 1846     		mov	r0, r3
 3143 0046 03B0     		add	sp, sp, #12
 3144              	.LCFI49:
 3145              		.cfi_remember_state
 3146              		.cfi_def_cfa_offset 12
 3147              		@ sp needed
 3148 0048 30BD     		pop	{r4, r5, pc}
 3149              	.LVL330:
 3150              	.L177:
 3151              	.LCFI50:
 3152              		.cfi_restore_state
 803:..//kernel/core/tos_mmheap.c **** 
 3153              		.loc 1 803 5 view .LVU885
 3154 004a 40F24C43 		movw	r3, #1100
 3155 004e F9E7     		b	.L174
 3156              	.L181:
 3157              		.align	2
 3158              	.L180:
 3159 0050 00000000 		.word	k_mmheap_ctl
 3160              		.cfi_endproc
 3161              	.LFE166:
 3163              		.text
 3164              	.Letext0:
 3165              		.file 2 "..//kernel/core/include/tos_kerr.h"
 3166              		.file 3 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 3167              		.file 4 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 3168              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 3169              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 3170              		.file 7 "d:\\arm_gcc\\8 2019-q3-update\\lib\\gcc\\arm-none-eabi\\8.3.1\\include\\stddef.h"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 78


 3171              		.file 8 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_types.h"
 3172              		.file 9 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\reent.h"
 3173              		.file 10 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\lock.h"
 3174              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 3175              		.file 12 "..//arch/arm/arm-v7m/common/include/tos_cpu_types.h"
 3176              		.file 13 "..//kernel/core/include/tos_ktypes.h"
 3177              		.file 14 "..//kernel/core/include/tos_task.h"
 3178              		.file 15 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\stdlib.h"
 3179              		.file 16 "..//kernel/core/include/tos_list.h"
 3180              		.file 17 "..//kernel/core/include/tos_pend.h"
 3181              		.file 18 "..//kernel/core/include/tos_sys.h"
 3182              		.file 19 "..//kernel/core/include/tos_timer.h"
 3183              		.file 20 "..//kernel/core/include/tos_mmheap.h"
 3184              		.file 21 "..//kernel/core/include/tos_sched.h"
 3185              		.file 22 "..//kernel/core/include/tos_global.h"
 3186              		.file 23 "<built-in>"
 3187              		.file 24 "..//arch/arm/arm-v7m/common/include/tos_cpu.h"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 79


DEFINED SYMBOLS
                            *ABS*:00000000 tos_mmheap.c
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:16     .text.blk_set_prev_used:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:23     .text.blk_set_prev_used:00000000 blk_set_prev_used
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:43     .text.blk_next:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:49     .text.blk_next:00000000 blk_next
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:104    .text.blk_link_next:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:110    .text.blk_link_next:00000000 blk_link_next
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:140    .text.blk_mark_as_free:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:146    .text.blk_mark_as_free:00000000 blk_mark_as_free
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:200    .text.blk_mark_as_used:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:206    .text.blk_mark_as_used:00000000 blk_mark_as_used
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:249    .text.insert_free_block:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:255    .text.insert_free_block:00000000 insert_free_block
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:331    .text.insert_free_block:0000003c $d
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:336    .text.remove_free_block:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:342    .text.remove_free_block:00000000 remove_free_block
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:443    .text.remove_free_block:0000005c $d
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:448    .text.blk_can_split:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:454    .text.blk_can_split:00000000 blk_can_split
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:491    .text.blk_split:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:497    .text.blk_split:00000000 blk_split
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:611    .text.blk_absorb:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:617    .text.blk_absorb:00000000 blk_absorb
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:664    .text.adjust_request_size:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:670    .text.adjust_request_size:00000000 adjust_request_size
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:731    .text.mmheap_pool_is_exist:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:737    .text.mmheap_pool_is_exist:00000000 mmheap_pool_is_exist
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:786    .text.mmheap_pool_is_exist:00000024 $d
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:791    .text.mmheap_pool_unrecord:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:797    .text.mmheap_pool_unrecord:00000000 mmheap_pool_unrecord
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:858    .text.mmheap_pool_unrecord:00000034 $d
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:863    .text.mmheap_ctl_init:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:869    .text.mmheap_ctl_init:00000000 mmheap_ctl_init
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:961    .text.mmheap_ctl_init:00000058 $d
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:966    .text.generic_fls:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:972    .text.generic_fls:00000000 generic_fls
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:996    .text.__fls:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1002   .text.__fls:00000000 __fls
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1026   .text.mapping_insert:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1032   .text.mapping_insert:00000000 mapping_insert
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1108   .text.blk_insert:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1114   .text.blk_insert:00000000 blk_insert
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1168   .text.blk_trim_free:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1174   .text.blk_trim_free:00000000 blk_trim_free
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1242   .text.blk_prepare_used:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1248   .text.blk_prepare_used:00000000 blk_prepare_used
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1292   .text.blk_trim_free_leading:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1298   .text.blk_trim_free_leading:00000000 blk_trim_free_leading
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1373   .text.blk_remove:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1379   .text.blk_remove:00000000 blk_remove
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1433   .text.blk_merge_prev:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1439   .text.blk_merge_prev:00000000 blk_merge_prev
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1512   .text.blk_merge_next:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1518   .text.blk_merge_next:00000000 blk_merge_next
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1581   .text.blk_trim_used:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1587   .text.blk_trim_used:00000000 blk_trim_used
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s 			page 80


C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1642   .text.mapping_search:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1648   .text.mapping_search:00000000 mapping_search
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1705   .text.__ffs:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1711   .text.__ffs:00000000 __ffs
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1740   .text.blk_search_suitable:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1746   .text.blk_search_suitable:00000000 blk_search_suitable
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1860   .text.blk_search_suitable:00000060 $d
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1865   .text.blk_locate_free:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1871   .text.blk_locate_free:00000000 blk_locate_free
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1948   .text.mmheap_init:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1955   .text.mmheap_init:00000000 mmheap_init
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1977   .text.tos_mmheap_alloc:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:1984   .text.tos_mmheap_alloc:00000000 tos_mmheap_alloc
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2031   .text.tos_mmheap_calloc:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2038   .text.tos_mmheap_calloc:00000000 tos_mmheap_calloc
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2081   .text.tos_mmheap_aligned_alloc:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2088   .text.tos_mmheap_aligned_alloc:00000000 tos_mmheap_aligned_alloc
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2265   .text.tos_mmheap_free:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2272   .text.tos_mmheap_free:00000000 tos_mmheap_free
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2334   .text.tos_mmheap_realloc:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2341   .text.tos_mmheap_realloc:00000000 tos_mmheap_realloc
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2545   .text.tos_mmheap_pool_add:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2552   .text.tos_mmheap_pool_add:00000000 tos_mmheap_pool_add
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2754   .text.tos_mmheap_pool_add:00000080 $d
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2760   .text.mmheap_init_with_pool:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2767   .text.mmheap_init_with_pool:00000000 mmheap_init_with_pool
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2800   .text.tos_mmheap_pool_rmv:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2807   .text.tos_mmheap_pool_rmv:00000000 tos_mmheap_pool_rmv
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2912   .text.tos_mmheap_pool_check:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:2919   .text.tos_mmheap_pool_check:00000000 tos_mmheap_pool_check
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:3060   .text.tos_mmheap_check:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:3067   .text.tos_mmheap_check:00000000 tos_mmheap_check
C:\Users\tianx\AppData\Local\Temp\cch9MAwP.s:3159   .text.tos_mmheap_check:00000050 $d

UNDEFINED SYMBOLS
k_mmheap_ctl
tos_cpu_clz
memset
memcpy
