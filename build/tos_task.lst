ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tos_task.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.task_free,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	task_free:
  24              	.LVL0:
  25              	.LFB117:
  26              		.file 1 "..//kernel/core/tos_task.c"
   1:..//kernel/core/tos_task.c **** /*----------------------------------------------------------------------------
   2:..//kernel/core/tos_task.c ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/tos_task.c ****  * available.
   4:..//kernel/core/tos_task.c ****  *
   5:..//kernel/core/tos_task.c ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/tos_task.c ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/tos_task.c ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/tos_task.c ****  *
   9:..//kernel/core/tos_task.c ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/tos_task.c ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/tos_task.c ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/tos_task.c ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/tos_task.c ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/tos_task.c ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/tos_task.c ****  * within TencentOS.
  16:..//kernel/core/tos_task.c ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/tos_task.c **** 
  18:..//kernel/core/tos_task.c **** #include "tos_k.h"
  19:..//kernel/core/tos_task.c **** 
  20:..//kernel/core/tos_task.c **** __STATIC_INLINE__ void task_reset(k_task_t *task)
  21:..//kernel/core/tos_task.c **** {
  22:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
  23:..//kernel/core/tos_task.c ****     knl_object_alloc_reset(&task->knl_obj);
  24:..//kernel/core/tos_task.c **** 
  25:..//kernel/core/tos_task.c ****     tos_list_init(&task->dead_list);
  26:..//kernel/core/tos_task.c **** #endif
  27:..//kernel/core/tos_task.c ****     tos_list_init(&task->stat_list);
  28:..//kernel/core/tos_task.c ****     tos_list_init(&task->tick_list);
  29:..//kernel/core/tos_task.c ****     tos_list_init(&task->pend_list);
  30:..//kernel/core/tos_task.c **** 
  31:..//kernel/core/tos_task.c **** #if TOS_CFG_MUTEX_EN > 0u
  32:..//kernel/core/tos_task.c ****     tos_list_init(&task->mutex_own_list);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 2


  33:..//kernel/core/tos_task.c ****     task->prio_pending  = K_TASK_PRIO_INVALID;
  34:..//kernel/core/tos_task.c **** #endif
  35:..//kernel/core/tos_task.c **** 
  36:..//kernel/core/tos_task.c ****     task->pend_state    = PEND_STATE_NONE;
  37:..//kernel/core/tos_task.c ****     task->pending_obj   = (pend_obj_t *)K_NULL;
  38:..//kernel/core/tos_task.c **** 
  39:..//kernel/core/tos_task.c **** #if TOS_CFG_MESSAGE_QUEUE_EN > 0u
  40:..//kernel/core/tos_task.c ****     task->msg           = K_NULL;
  41:..//kernel/core/tos_task.c **** #endif
  42:..//kernel/core/tos_task.c **** 
  43:..//kernel/core/tos_task.c **** #if TOS_CFG_MAIL_QUEUE_EN > 0u
  44:..//kernel/core/tos_task.c ****     task->mail          = K_NULL;
  45:..//kernel/core/tos_task.c ****     task->mail_size     = 0;
  46:..//kernel/core/tos_task.c **** #endif
  47:..//kernel/core/tos_task.c **** 
  48:..//kernel/core/tos_task.c ****     TOS_OBJ_DEINIT(task);
  49:..//kernel/core/tos_task.c **** }
  50:..//kernel/core/tos_task.c **** 
  51:..//kernel/core/tos_task.c **** __STATIC__ void task_exit(void)
  52:..//kernel/core/tos_task.c **** {
  53:..//kernel/core/tos_task.c ****     tos_task_destroy(K_NULL);
  54:..//kernel/core/tos_task.c **** }
  55:..//kernel/core/tos_task.c **** 
  56:..//kernel/core/tos_task.c **** #if TOS_CFG_MUTEX_EN > 0u
  57:..//kernel/core/tos_task.c **** __STATIC__ k_prio_t task_highest_pending_prio_get(k_task_t *task)
  58:..//kernel/core/tos_task.c **** {
  59:..//kernel/core/tos_task.c ****     k_mutex_t *mutex;
  60:..//kernel/core/tos_task.c ****     k_prio_t prio, highest_prio_pending = K_TASK_PRIO_INVALID;
  61:..//kernel/core/tos_task.c **** 
  62:..//kernel/core/tos_task.c ****     TOS_LIST_FOR_EACH_ENTRY(mutex, k_mutex_t, owner_anchor, &task->mutex_own_list) {
  63:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
  64:..//kernel/core/tos_task.c ****         if (prio < highest_prio_pending) {
  65:..//kernel/core/tos_task.c ****             highest_prio_pending = prio;
  66:..//kernel/core/tos_task.c ****         }
  67:..//kernel/core/tos_task.c ****     }
  68:..//kernel/core/tos_task.c **** 
  69:..//kernel/core/tos_task.c ****     return highest_prio_pending;
  70:..//kernel/core/tos_task.c **** }
  71:..//kernel/core/tos_task.c **** 
  72:..//kernel/core/tos_task.c **** __STATIC__ void task_mutex_release(k_task_t *task)
  73:..//kernel/core/tos_task.c **** {
  74:..//kernel/core/tos_task.c ****     k_mutex_t *mutex, *tmp;
  75:..//kernel/core/tos_task.c **** 
  76:..//kernel/core/tos_task.c ****     TOS_LIST_FOR_EACH_ENTRY_SAFE(mutex, tmp, k_mutex_t, owner_anchor, &task->mutex_own_list) {
  77:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  78:..//kernel/core/tos_task.c ****     }
  79:..//kernel/core/tos_task.c **** }
  80:..//kernel/core/tos_task.c **** #endif
  81:..//kernel/core/tos_task.c **** 
  82:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_create(k_task_t *task,
  83:..//kernel/core/tos_task.c ****                                             char *name,
  84:..//kernel/core/tos_task.c ****                                             k_task_entry_t entry,
  85:..//kernel/core/tos_task.c ****                                             void *arg,
  86:..//kernel/core/tos_task.c ****                                             k_prio_t prio,
  87:..//kernel/core/tos_task.c ****                                             k_stack_t *stk_base,
  88:..//kernel/core/tos_task.c ****                                             size_t stk_size,
  89:..//kernel/core/tos_task.c ****                                             k_timeslice_t timeslice)
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 3


  90:..//kernel/core/tos_task.c **** {
  91:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
  92:..//kernel/core/tos_task.c **** 
  93:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
  94:..//kernel/core/tos_task.c **** 
  95:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
  96:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
  97:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(stk_base);
  98:..//kernel/core/tos_task.c **** 
  99:..//kernel/core/tos_task.c ****     /* try to re-create a task, kind of dangerous */
 100:..//kernel/core/tos_task.c ****     TOS_OBJ_TEST_RC(task, KNL_OBJ_TYPE_TASK, K_ERR_TASK_ALREADY_CREATED);
 101:..//kernel/core/tos_task.c **** 
 102:..//kernel/core/tos_task.c ****     if (unlikely(stk_size < K_TASK_STK_SIZE_MIN)) {
 103:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 104:..//kernel/core/tos_task.c ****     }
 105:..//kernel/core/tos_task.c **** 
 106:..//kernel/core/tos_task.c ****     if (unlikely(prio == K_TASK_PRIO_IDLE && !knl_is_idle(task))) {
 107:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 108:..//kernel/core/tos_task.c ****     }
 109:..//kernel/core/tos_task.c **** 
 110:..//kernel/core/tos_task.c ****     if (unlikely(prio > K_TASK_PRIO_IDLE)) {
 111:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 112:..//kernel/core/tos_task.c ****     }
 113:..//kernel/core/tos_task.c **** 
 114:..//kernel/core/tos_task.c ****     task_reset(task);
 115:..//kernel/core/tos_task.c ****     tos_list_add(&task->stat_list, &k_stat_list);
 116:..//kernel/core/tos_task.c **** 
 117:..//kernel/core/tos_task.c ****     TOS_OBJ_INIT(task, KNL_OBJ_TYPE_TASK);
 118:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 119:..//kernel/core/tos_task.c ****     knl_object_alloc_set_static(&task->knl_obj);
 120:..//kernel/core/tos_task.c **** #endif
 121:..//kernel/core/tos_task.c **** 
 122:..//kernel/core/tos_task.c ****     task->sp        = cpu_task_stk_init((void *)entry, arg, (void *)task_exit, stk_base, stk_size);
 123:..//kernel/core/tos_task.c ****     task->entry     = entry;
 124:..//kernel/core/tos_task.c ****     task->arg       = arg;
 125:..//kernel/core/tos_task.c ****     task->prio      = prio;
 126:..//kernel/core/tos_task.c ****     task->stk_base  = stk_base;
 127:..//kernel/core/tos_task.c ****     task->stk_size  = stk_size;
 128:..//kernel/core/tos_task.c ****     strncpy(task->name, name, K_TASK_NAME_MAX);
 129:..//kernel/core/tos_task.c **** 
 130:..//kernel/core/tos_task.c **** #if TOS_CFG_ROUND_ROBIN_EN > 0u
 131:..//kernel/core/tos_task.c ****     task->timeslice_reload = timeslice;
 132:..//kernel/core/tos_task.c **** 
 133:..//kernel/core/tos_task.c ****     if (timeslice == (k_timeslice_t)0u) {
 134:..//kernel/core/tos_task.c ****         task->timeslice = k_robin_default_timeslice;
 135:..//kernel/core/tos_task.c ****     } else {
 136:..//kernel/core/tos_task.c ****         task->timeslice = timeslice;
 137:..//kernel/core/tos_task.c ****     }
 138:..//kernel/core/tos_task.c **** #endif
 139:..//kernel/core/tos_task.c **** 
 140:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 141:..//kernel/core/tos_task.c ****     task_state_set_ready(task);
 142:..//kernel/core/tos_task.c ****     readyqueue_add_tail(task);
 143:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 144:..//kernel/core/tos_task.c **** 
 145:..//kernel/core/tos_task.c ****     if (tos_knl_is_running()) {
 146:..//kernel/core/tos_task.c ****         knl_sched();
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 4


 147:..//kernel/core/tos_task.c ****     }
 148:..//kernel/core/tos_task.c **** 
 149:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 150:..//kernel/core/tos_task.c **** }
 151:..//kernel/core/tos_task.c **** 
 152:..//kernel/core/tos_task.c **** __STATIC__ k_err_t task_do_destroy(k_task_t *task)
 153:..//kernel/core/tos_task.c **** {
 154:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 155:..//kernel/core/tos_task.c **** 
 156:..//kernel/core/tos_task.c ****     if (knl_is_idle(task)) {
 157:..//kernel/core/tos_task.c ****         return K_ERR_TASK_DESTROY_IDLE;
 158:..//kernel/core/tos_task.c ****     }
 159:..//kernel/core/tos_task.c **** 
 160:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 161:..//kernel/core/tos_task.c **** 
 162:..//kernel/core/tos_task.c **** #if TOS_CFG_MUTEX_EN > 0u
 163:..//kernel/core/tos_task.c ****     // when we die, wakeup all the people in this land.
 164:..//kernel/core/tos_task.c ****     if (!tos_list_empty(&task->mutex_own_list)) {
 165:..//kernel/core/tos_task.c ****         task_mutex_release(task);
 166:..//kernel/core/tos_task.c ****     }
 167:..//kernel/core/tos_task.c **** #endif
 168:..//kernel/core/tos_task.c **** 
 169:..//kernel/core/tos_task.c ****     if (task_state_is_ready(task)) { // that's simple, good kid
 170:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 171:..//kernel/core/tos_task.c ****     }
 172:..//kernel/core/tos_task.c ****     if (task_state_is_sleeping(task)) {
 173:..//kernel/core/tos_task.c ****         tick_list_remove(task);
 174:..//kernel/core/tos_task.c ****     }
 175:..//kernel/core/tos_task.c ****     if (task_state_is_pending(task)) {
 176:..//kernel/core/tos_task.c ****         pend_list_remove(task);
 177:..//kernel/core/tos_task.c ****     }
 178:..//kernel/core/tos_task.c **** 
 179:..//kernel/core/tos_task.c ****     tos_list_del(&task->stat_list);
 180:..//kernel/core/tos_task.c ****     task_reset(task);
 181:..//kernel/core/tos_task.c **** 
 182:..//kernel/core/tos_task.c ****     task_state_set_deleted(task);
 183:..//kernel/core/tos_task.c **** 
 184:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 185:..//kernel/core/tos_task.c ****     knl_sched();
 186:..//kernel/core/tos_task.c **** 
 187:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 188:..//kernel/core/tos_task.c **** }
 189:..//kernel/core/tos_task.c **** 
 190:..//kernel/core/tos_task.c **** __STATIC__ k_err_t task_destroy_static(k_task_t *task)
 191:..//kernel/core/tos_task.c **** {
 192:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 193:..//kernel/core/tos_task.c ****     if (!knl_object_alloc_is_static(&task->knl_obj)) {
 194:..//kernel/core/tos_task.c ****         return K_ERR_OBJ_INVALID_ALLOC_TYPE;
 195:..//kernel/core/tos_task.c ****     }
 196:..//kernel/core/tos_task.c **** #endif
 197:..//kernel/core/tos_task.c **** 
 198:..//kernel/core/tos_task.c ****     return task_do_destroy(task);
 199:..//kernel/core/tos_task.c **** }
 200:..//kernel/core/tos_task.c **** 
 201:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 202:..//kernel/core/tos_task.c **** 
 203:..//kernel/core/tos_task.c **** __STATIC__ void task_free(k_task_t *task)
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 5


 204:..//kernel/core/tos_task.c **** {
  27              		.loc 1 204 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 204 1 is_stmt 0 view .LVU1
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 0446     		mov	r4, r0
 205:..//kernel/core/tos_task.c ****     tos_mmheap_free(task->stk_base);
  38              		.loc 1 205 5 is_stmt 1 view .LVU2
  39 0004 406A     		ldr	r0, [r0, #36]
  40              	.LVL1:
  41              		.loc 1 205 5 is_stmt 0 view .LVU3
  42 0006 FFF7FEFF 		bl	tos_mmheap_free
  43              	.LVL2:
 206:..//kernel/core/tos_task.c ****     tos_mmheap_free(task);
  44              		.loc 1 206 5 is_stmt 1 view .LVU4
  45 000a 2046     		mov	r0, r4
  46 000c FFF7FEFF 		bl	tos_mmheap_free
  47              	.LVL3:
 207:..//kernel/core/tos_task.c **** }
  48              		.loc 1 207 1 is_stmt 0 view .LVU5
  49 0010 10BD     		pop	{r4, pc}
  50              		.loc 1 207 1 view .LVU6
  51              		.cfi_endproc
  52              	.LFE117:
  54              		.section	.text.task_mutex_release,"ax",%progbits
  55              		.align	1
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	task_mutex_release:
  62              	.LVL4:
  63              	.LFB113:
  73:..//kernel/core/tos_task.c ****     k_mutex_t *mutex, *tmp;
  64              		.loc 1 73 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  73:..//kernel/core/tos_task.c ****     k_mutex_t *mutex, *tmp;
  68              		.loc 1 73 1 is_stmt 0 view .LVU8
  69 0000 38B5     		push	{r3, r4, r5, lr}
  70              	.LCFI1:
  71              		.cfi_def_cfa_offset 16
  72              		.cfi_offset 3, -16
  73              		.cfi_offset 4, -12
  74              		.cfi_offset 5, -8
  75              		.cfi_offset 14, -4
  76 0002 0546     		mov	r5, r0
  74:..//kernel/core/tos_task.c **** 
  77              		.loc 1 74 5 is_stmt 1 view .LVU9
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 6


  78              		.loc 1 76 5 view .LVU10
  79 0004 806D     		ldr	r0, [r0, #88]
  80              	.LVL5:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  81              		.loc 1 76 5 is_stmt 0 view .LVU11
  82 0006 50F81849 		ldr	r4, [r0], #-24
  83              	.LVL6:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  84              		.loc 1 76 5 view .LVU12
  85 000a 183C     		subs	r4, r4, #24
  86              	.LVL7:
  87              	.L4:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  88              		.loc 1 76 5 discriminator 1 view .LVU13
  89 000c 00F11803 		add	r3, r0, #24
  90 0010 05F15802 		add	r2, r5, #88
  91 0014 9342     		cmp	r3, r2
  92 0016 06D0     		beq	.L7
  77:..//kernel/core/tos_task.c ****     }
  93              		.loc 1 77 9 is_stmt 1 discriminator 3 view .LVU14
  94 0018 FFF7FEFF 		bl	mutex_release
  95              	.LVL8:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  96              		.loc 1 76 5 is_stmt 0 discriminator 3 view .LVU15
  97 001c A369     		ldr	r3, [r4, #24]
  98              	.LVL9:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  99              		.loc 1 76 5 discriminator 3 view .LVU16
 100 001e 2046     		mov	r0, r4
 101 0020 A3F11804 		sub	r4, r3, #24
 102              	.LVL10:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
 103              		.loc 1 76 5 discriminator 3 view .LVU17
 104 0024 F2E7     		b	.L4
 105              	.L7:
  79:..//kernel/core/tos_task.c **** #endif
 106              		.loc 1 79 1 view .LVU18
 107 0026 38BD     		pop	{r3, r4, r5, pc}
  79:..//kernel/core/tos_task.c **** #endif
 108              		.loc 1 79 1 view .LVU19
 109              		.cfi_endproc
 110              	.LFE113:
 112              		.section	.text.task_do_destroy,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu softvfp
 119              	task_do_destroy:
 120              	.LVL11:
 121              	.LFB115:
 153:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 122              		.loc 1 153 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 153:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 7


 126              		.loc 1 153 1 is_stmt 0 view .LVU21
 127 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 128              	.LCFI2:
 129              		.cfi_def_cfa_offset 24
 130              		.cfi_offset 3, -24
 131              		.cfi_offset 4, -20
 132              		.cfi_offset 5, -16
 133              		.cfi_offset 6, -12
 134              		.cfi_offset 7, -8
 135              		.cfi_offset 14, -4
 136 0002 0446     		mov	r4, r0
 154:..//kernel/core/tos_task.c **** 
 137              		.loc 1 154 5 is_stmt 1 view .LVU22
 138              	.LVL12:
 156:..//kernel/core/tos_task.c ****         return K_ERR_TASK_DESTROY_IDLE;
 139              		.loc 1 156 5 view .LVU23
 156:..//kernel/core/tos_task.c ****         return K_ERR_TASK_DESTROY_IDLE;
 140              		.loc 1 156 9 is_stmt 0 view .LVU24
 141 0004 FFF7FEFF 		bl	knl_is_idle
 142              	.LVL13:
 156:..//kernel/core/tos_task.c ****         return K_ERR_TASK_DESTROY_IDLE;
 143              		.loc 1 156 8 view .LVU25
 144 0008 0028     		cmp	r0, #0
 145 000a 50D1     		bne	.L14
 160:..//kernel/core/tos_task.c **** 
 146              		.loc 1 160 5 is_stmt 1 view .LVU26
 160:..//kernel/core/tos_task.c **** 
 147              		.loc 1 160 5 view .LVU27
 148 000c FFF7FEFF 		bl	tos_cpu_cpsr_save
 149              	.LVL14:
 150 0010 0746     		mov	r7, r0
 151              	.LVL15:
 164:..//kernel/core/tos_task.c ****         task_mutex_release(task);
 152              		.loc 1 164 5 view .LVU28
 164:..//kernel/core/tos_task.c ****         task_mutex_release(task);
 153              		.loc 1 164 25 is_stmt 0 view .LVU29
 154 0012 04F15806 		add	r6, r4, #88
 155              	.LVL16:
 156              	.LBB126:
 157              	.LBI126:
 158              		.file 2 "..//kernel/core/include/tos_list.h"
   1:..//kernel/core/include/tos_list.h **** /*----------------------------------------------------------------------------
   2:..//kernel/core/include/tos_list.h ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/include/tos_list.h ****  * available.
   4:..//kernel/core/include/tos_list.h ****  *
   5:..//kernel/core/include/tos_list.h ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/include/tos_list.h ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/include/tos_list.h ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/include/tos_list.h ****  *
   9:..//kernel/core/include/tos_list.h ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/include/tos_list.h ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/include/tos_list.h ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/include/tos_list.h ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/include/tos_list.h ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/include/tos_list.h ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/include/tos_list.h ****  * within TencentOS.
  16:..//kernel/core/include/tos_list.h ****  *---------------------------------------------------------------------------*/
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 8


  17:..//kernel/core/include/tos_list.h **** 
  18:..//kernel/core/include/tos_list.h **** #ifndef _TOS_LIST_H_
  19:..//kernel/core/include/tos_list.h **** #define  _TOS_LIST_H_
  20:..//kernel/core/include/tos_list.h **** 
  21:..//kernel/core/include/tos_list.h **** __CDECLS_BEGIN
  22:..//kernel/core/include/tos_list.h **** 
  23:..//kernel/core/include/tos_list.h **** typedef struct k_list_node_st {
  24:..//kernel/core/include/tos_list.h ****     struct k_list_node_st *next;
  25:..//kernel/core/include/tos_list.h ****     struct k_list_node_st *prev;
  26:..//kernel/core/include/tos_list.h **** } k_list_t;
  27:..//kernel/core/include/tos_list.h **** 
  28:..//kernel/core/include/tos_list.h **** #define TOS_LIST_NODE(node) \
  29:..//kernel/core/include/tos_list.h ****     { &(node), &(node) }
  30:..//kernel/core/include/tos_list.h **** 
  31:..//kernel/core/include/tos_list.h **** #define TOS_LIST_DEFINE(list) \
  32:..//kernel/core/include/tos_list.h ****     k_list_t list = { &(list), &(list) }
  33:..//kernel/core/include/tos_list.h **** 
  34:..//kernel/core/include/tos_list.h **** #define TOS_LIST_ENTRY(node, type, field) \
  35:..//kernel/core/include/tos_list.h ****     TOS_CONTAINER_OF_FIELD(node, type, field)
  36:..//kernel/core/include/tos_list.h **** 
  37:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FIRST_ENTRY(list, type, field) \
  38:..//kernel/core/include/tos_list.h ****     TOS_LIST_ENTRY((list)->next, type, field)
  39:..//kernel/core/include/tos_list.h **** 
  40:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FIRST_ENTRY_OR_NULL(list, type, field) \
  41:..//kernel/core/include/tos_list.h ****     (tos_list_empty(list) ? K_NULL : TOS_LIST_FIRST_ENTRY(list, type, field))
  42:..//kernel/core/include/tos_list.h **** 
  43:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH(curr, list) \
  44:..//kernel/core/include/tos_list.h ****     for (curr = (list)->next; curr != (list); curr = curr->next)
  45:..//kernel/core/include/tos_list.h **** 
  46:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_PREV(curr, list) \
  47:..//kernel/core/include/tos_list.h ****     for (curr = (list)->prev; curr != (list); curr = curr->prev)
  48:..//kernel/core/include/tos_list.h **** 
  49:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_SAFE(curr, next, list) \
  50:..//kernel/core/include/tos_list.h ****     for (curr = (list)->next, next = curr->next; curr != (list); \
  51:..//kernel/core/include/tos_list.h ****             curr = next, next = curr->next)
  52:..//kernel/core/include/tos_list.h **** 
  53:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_PREV_SAFE(curr, next, list) \
  54:..//kernel/core/include/tos_list.h ****     for (curr = (list)->prev, next = curr->prev; \
  55:..//kernel/core/include/tos_list.h ****             curr != (list); \
  56:..//kernel/core/include/tos_list.h ****             curr = next, next = curr->prev)
  57:..//kernel/core/include/tos_list.h **** 
  58:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY(entry, type, field, list) \
  59:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->next, type, field); \
  60:..//kernel/core/include/tos_list.h ****         &entry->field != (list); \
  61:..//kernel/core/include/tos_list.h ****         entry = TOS_LIST_ENTRY(entry->field.next, type, field))
  62:..//kernel/core/include/tos_list.h **** 
  63:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY_REVERSE(entry, type, field, list) \
  64:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->prev, type, field); \
  65:..//kernel/core/include/tos_list.h ****             &entry->field != (list); \
  66:..//kernel/core/include/tos_list.h ****             entry = TOS_LIST_ENTRY(entry->field.prev, type, field))
  67:..//kernel/core/include/tos_list.h **** 
  68:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY_SAFE(entry, tmp, type, field, list) \
  69:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->next, type, field), \
  70:..//kernel/core/include/tos_list.h ****             tmp = TOS_LIST_ENTRY(entry->field.next, type, field); \
  71:..//kernel/core/include/tos_list.h ****             &entry->field != (list); \
  72:..//kernel/core/include/tos_list.h ****             entry = tmp, tmp = TOS_LIST_ENTRY(entry->field.next, type, field))
  73:..//kernel/core/include/tos_list.h **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 9


  74:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY_SAFE_REVERSE(entry, tmp, type, field, list) \
  75:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->prev, type, field), \
  76:..//kernel/core/include/tos_list.h ****             tmp = TOS_LIST_ENTRY(entry->field.prev, type, field); \
  77:..//kernel/core/include/tos_list.h ****             &entry->field != (list); \
  78:..//kernel/core/include/tos_list.h ****             entry = tmp, tmp = TOS_LIST_ENTRY(entry->field.prev, type, field))
  79:..//kernel/core/include/tos_list.h **** 
  80:..//kernel/core/include/tos_list.h **** __STATIC_INLINE__ void _list_add(k_list_t *node, k_list_t *prev, k_list_t *next)
  81:..//kernel/core/include/tos_list.h **** {
  82:..//kernel/core/include/tos_list.h ****     next->prev = node;
  83:..//kernel/core/include/tos_list.h ****     node->next = next;
  84:..//kernel/core/include/tos_list.h ****     node->prev = prev;
  85:..//kernel/core/include/tos_list.h ****     prev->next = node;
  86:..//kernel/core/include/tos_list.h **** }
  87:..//kernel/core/include/tos_list.h **** 
  88:..//kernel/core/include/tos_list.h **** __STATIC_INLINE__ void _list_del(k_list_t *prev, k_list_t *next)
  89:..//kernel/core/include/tos_list.h **** {
  90:..//kernel/core/include/tos_list.h ****     next->prev = prev;
  91:..//kernel/core/include/tos_list.h ****     prev->next = next;
  92:..//kernel/core/include/tos_list.h **** }
  93:..//kernel/core/include/tos_list.h **** 
  94:..//kernel/core/include/tos_list.h **** __STATIC_INLINE__ void _list_del_node(k_list_t *node)
  95:..//kernel/core/include/tos_list.h **** {
  96:..//kernel/core/include/tos_list.h ****     _list_del(node->prev, node->next);
  97:..//kernel/core/include/tos_list.h **** }
  98:..//kernel/core/include/tos_list.h **** 
  99:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_init(k_list_t *list)
 100:..//kernel/core/include/tos_list.h **** {
 101:..//kernel/core/include/tos_list.h ****     list->next = list;
 102:..//kernel/core/include/tos_list.h ****     list->prev = list;
 103:..//kernel/core/include/tos_list.h **** }
 104:..//kernel/core/include/tos_list.h **** 
 105:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_add(k_list_t *node, k_list_t *list)
 106:..//kernel/core/include/tos_list.h **** {
 107:..//kernel/core/include/tos_list.h ****     _list_add(node, list, list->next);
 108:..//kernel/core/include/tos_list.h **** }
 109:..//kernel/core/include/tos_list.h **** 
 110:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_add_tail(k_list_t *node, k_list_t *list)
 111:..//kernel/core/include/tos_list.h **** {
 112:..//kernel/core/include/tos_list.h ****     _list_add(node, list->prev, list);
 113:..//kernel/core/include/tos_list.h **** }
 114:..//kernel/core/include/tos_list.h **** 
 115:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_del(k_list_t *node)
 116:..//kernel/core/include/tos_list.h **** {
 117:..//kernel/core/include/tos_list.h ****     _list_del(node->prev, node->next);
 118:..//kernel/core/include/tos_list.h **** }
 119:..//kernel/core/include/tos_list.h **** 
 120:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_del_init(k_list_t *node)
 121:..//kernel/core/include/tos_list.h **** {
 122:..//kernel/core/include/tos_list.h ****     _list_del_node(node);
 123:..//kernel/core/include/tos_list.h ****     tos_list_init(node);
 124:..//kernel/core/include/tos_list.h **** }
 125:..//kernel/core/include/tos_list.h **** 
 126:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_move(k_list_t *node, k_list_t *list)
 127:..//kernel/core/include/tos_list.h **** {
 128:..//kernel/core/include/tos_list.h ****     _list_del_node(node);
 129:..//kernel/core/include/tos_list.h ****     tos_list_add(node, list);
 130:..//kernel/core/include/tos_list.h **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 10


 131:..//kernel/core/include/tos_list.h **** 
 132:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_move_tail(k_list_t *node, k_list_t *list)
 133:..//kernel/core/include/tos_list.h **** {
 134:..//kernel/core/include/tos_list.h ****     _list_del_node(node);
 135:..//kernel/core/include/tos_list.h ****     tos_list_add_tail(node, list);
 136:..//kernel/core/include/tos_list.h **** }
 137:..//kernel/core/include/tos_list.h **** 
 138:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ int tos_list_empty(const k_list_t *list)
 159              		.loc 2 138 31 is_stmt 1 view .LVU30
 160              	.LBB127:
 139:..//kernel/core/include/tos_list.h **** {
 140:..//kernel/core/include/tos_list.h ****     return list->next == list;
 161              		.loc 2 140 5 view .LVU31
 162              		.loc 2 140 16 is_stmt 0 view .LVU32
 163 0016 A36D     		ldr	r3, [r4, #88]
 164              	.LVL17:
 165              		.loc 2 140 16 view .LVU33
 166              	.LBE127:
 167              	.LBE126:
 164:..//kernel/core/tos_task.c ****         task_mutex_release(task);
 168              		.loc 1 164 8 view .LVU34
 169 0018 9E42     		cmp	r6, r3
 170 001a 02D0     		beq	.L10
 165:..//kernel/core/tos_task.c ****     }
 171              		.loc 1 165 9 is_stmt 1 view .LVU35
 172 001c 2046     		mov	r0, r4
 173              	.LVL18:
 165:..//kernel/core/tos_task.c ****     }
 174              		.loc 1 165 9 is_stmt 0 view .LVU36
 175 001e FFF7FEFF 		bl	task_mutex_release
 176              	.LVL19:
 177              	.L10:
 169:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 178              		.loc 1 169 5 is_stmt 1 view .LVU37
 179              	.LBB128:
 180              	.LBI128:
 181              		.file 3 "..//kernel/core/include/tos_task.h"
   1:..//kernel/core/include/tos_task.h **** /*----------------------------------------------------------------------------
   2:..//kernel/core/include/tos_task.h ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/include/tos_task.h ****  * available.
   4:..//kernel/core/include/tos_task.h ****  *
   5:..//kernel/core/include/tos_task.h ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/include/tos_task.h ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/include/tos_task.h ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/include/tos_task.h ****  *
   9:..//kernel/core/include/tos_task.h ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/include/tos_task.h ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/include/tos_task.h ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/include/tos_task.h ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/include/tos_task.h ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/include/tos_task.h ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/include/tos_task.h ****  * within TencentOS.
  16:..//kernel/core/include/tos_task.h ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/include/tos_task.h **** 
  18:..//kernel/core/include/tos_task.h **** #ifndef _TOS_TASK_H_
  19:..//kernel/core/include/tos_task.h **** #define  _TOS_TASK_H_
  20:..//kernel/core/include/tos_task.h **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 11


  21:..//kernel/core/include/tos_task.h **** __CDECLS_BEGIN
  22:..//kernel/core/include/tos_task.h **** 
  23:..//kernel/core/include/tos_task.h **** #define K_TASK_NAME_MAX                 (16u)
  24:..//kernel/core/include/tos_task.h **** #define K_TASK_STK_SIZE_MIN             (sizeof(cpu_context_t))
  25:..//kernel/core/include/tos_task.h **** 
  26:..//kernel/core/include/tos_task.h **** // task state is just a flag, indicating which manager list we are in.
  27:..//kernel/core/include/tos_task.h **** 
  28:..//kernel/core/include/tos_task.h **** // ready to schedule
  29:..//kernel/core/include/tos_task.h **** // a task's pend_list is in readyqueue
  30:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_READY                (k_task_state_t)0x0000
  31:..//kernel/core/include/tos_task.h **** 
  32:..//kernel/core/include/tos_task.h **** // delayed, or pend for a timeout
  33:..//kernel/core/include/tos_task.h **** // a task's tick_list is in k_tick_list
  34:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_SLEEP                (k_task_state_t)0x0001
  35:..//kernel/core/include/tos_task.h **** 
  36:..//kernel/core/include/tos_task.h **** // pend for something
  37:..//kernel/core/include/tos_task.h **** // a task's pend_list is in some pend object's list
  38:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_PEND                 (k_task_state_t)0x0002
  39:..//kernel/core/include/tos_task.h **** 
  40:..//kernel/core/include/tos_task.h **** // suspended
  41:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_SUSPENDED            (k_task_state_t)0x0004
  42:..//kernel/core/include/tos_task.h **** 
  43:..//kernel/core/include/tos_task.h **** // deleted
  44:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_DELETED              (k_task_state_t)0x0008
  45:..//kernel/core/include/tos_task.h **** 
  46:..//kernel/core/include/tos_task.h **** // actually we don't really need those TASK_STATE below, if you understand the task state deeply, t
  47:..//kernel/core/include/tos_task.h **** 
  48:..//kernel/core/include/tos_task.h **** // we are pending, also we are waitting for a timeout(eg. tos_sem_pend with a valid timeout, not TO
  49:..//kernel/core/include/tos_task.h **** // both a task's tick_list and pend_list is not empty
  50:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_PENDTIMEOUT                      (k_task_state_t)(K_TASK_STATE_PEND | K_TASK_S
  51:..//kernel/core/include/tos_task.h **** 
  52:..//kernel/core/include/tos_task.h **** // suspended when sleeping
  53:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_SLEEP_SUSPENDED                  (k_task_state_t)(K_TASK_STATE_SLEEP | K_TASK_
  54:..//kernel/core/include/tos_task.h **** 
  55:..//kernel/core/include/tos_task.h **** // suspended when pending
  56:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_PEND_SUSPENDED                   (k_task_state_t)(K_TASK_STATE_PEND | K_TASK_S
  57:..//kernel/core/include/tos_task.h **** 
  58:..//kernel/core/include/tos_task.h **** // suspended when pendtimeout
  59:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_PENDTIMEOUT_SUSPENDED            (k_task_state_t)(K_TASK_STATE_PENDTIMEOUT | K
  60:..//kernel/core/include/tos_task.h **** 
  61:..//kernel/core/include/tos_task.h **** 
  62:..//kernel/core/include/tos_task.h **** // if you configure TOS_CFG_TASK_PRIO_MAX as 10, means the priority for kernel is (0 ... 9]
  63:..//kernel/core/include/tos_task.h **** // the priority 9(TOS_CFG_TASK_PRIO_MAX - 1) is only for idle, so avaliable priority for you is (0 
  64:..//kernel/core/include/tos_task.h **** #define K_TASK_PRIO_IDLE                                (k_prio_t)(TOS_CFG_TASK_PRIO_MAX - (k_prio_
  65:..//kernel/core/include/tos_task.h **** #define K_TASK_PRIO_INVALID                             (k_prio_t)(TOS_CFG_TASK_PRIO_MAX)
  66:..//kernel/core/include/tos_task.h **** 
  67:..//kernel/core/include/tos_task.h **** typedef void (*k_task_entry_t)(void *arg);
  68:..//kernel/core/include/tos_task.h **** 
  69:..//kernel/core/include/tos_task.h **** typedef void (*k_task_walker_t)(k_task_t *task);
  70:..//kernel/core/include/tos_task.h **** 
  71:..//kernel/core/include/tos_task.h **** /**
  72:..//kernel/core/include/tos_task.h ****  * task control block
  73:..//kernel/core/include/tos_task.h ****  */
  74:..//kernel/core/include/tos_task.h **** struct k_task_st {
  75:..//kernel/core/include/tos_task.h ****     k_stack_t          *sp;                     /**< task stack pointer. This lady always comes fir
  76:..//kernel/core/include/tos_task.h **** 
  77:..//kernel/core/include/tos_task.h ****     knl_obj_t           knl_obj;                /**< just for verification, test whether current ob
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 12


  78:..//kernel/core/include/tos_task.h **** 
  79:..//kernel/core/include/tos_task.h ****     char                name[K_TASK_NAME_MAX];  /**< task name */
  80:..//kernel/core/include/tos_task.h ****     k_task_entry_t      entry;                  /**< task entry */
  81:..//kernel/core/include/tos_task.h ****     void               *arg;                    /**< argument for task entry */
  82:..//kernel/core/include/tos_task.h ****     k_task_state_t      state;                  /**< just state */
  83:..//kernel/core/include/tos_task.h ****     k_prio_t            prio;                   /**< just priority */
  84:..//kernel/core/include/tos_task.h **** 
  85:..//kernel/core/include/tos_task.h ****     k_stack_t          *stk_base;               /**< task stack base address */
  86:..//kernel/core/include/tos_task.h ****     size_t              stk_size;               /**< stack size of the task */
  87:..//kernel/core/include/tos_task.h **** 
  88:..//kernel/core/include/tos_task.h **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
  89:..//kernel/core/include/tos_task.h ****     k_list_t            dead_list;              /**< when a dynamic allocated task destroyed, we ho
  90:..//kernel/core/include/tos_task.h **** #endif
  91:..//kernel/core/include/tos_task.h **** 
  92:..//kernel/core/include/tos_task.h ****     k_list_t            stat_list;              /**< list for hooking us to the k_stat_list */
  93:..//kernel/core/include/tos_task.h **** 
  94:..//kernel/core/include/tos_task.h ****     k_tick_t            tick_expires;           /**< if we are in k_tick_list, how much time will w
  95:..//kernel/core/include/tos_task.h **** 
  96:..//kernel/core/include/tos_task.h ****     k_list_t            tick_list;              /**< list for hooking us to the k_tick_list */
  97:..//kernel/core/include/tos_task.h ****     k_list_t            pend_list;              /**< when we are ready, our pend_list is in readyqu
  98:..//kernel/core/include/tos_task.h **** 
  99:..//kernel/core/include/tos_task.h **** #if TOS_CFG_MUTEX_EN > 0u
 100:..//kernel/core/include/tos_task.h ****     k_list_t            mutex_own_list;         /**< the list hold all the mutex we own.
 101:..//kernel/core/include/tos_task.h ****                                                     When we die(tos_task_destroy), we have an oblig
 102:..//kernel/core/include/tos_task.h ****                                                     if not, those pending tasks may never get a cha
 103:..//kernel/core/include/tos_task.h ****     k_prio_t            prio_pending;           /*< when tos_task_prio_change called, we may be jus
 104:..//kernel/core/include/tos_task.h ****                                                     to avoid PRIORITY INVERSION, must make sure our
 105:..//kernel/core/include/tos_task.h ****                                                     the mutex we hold. So, if the prio_new of tos_t
 106:..//kernel/core/include/tos_task.h ****                                                     (may against the principle of PRIORITY INVERSIO
 107:..//kernel/core/include/tos_task.h ****                                                     change in the right time(mutex_old_owner_releas
 108:..//kernel/core/include/tos_task.h **** #endif
 109:..//kernel/core/include/tos_task.h **** 
 110:..//kernel/core/include/tos_task.h ****     pend_obj_t         *pending_obj;            /**< if we are pending, which pend object's list we
 111:..//kernel/core/include/tos_task.h ****     pend_state_t        pend_state;             /**< why we wakeup from a pend */
 112:..//kernel/core/include/tos_task.h **** 
 113:..//kernel/core/include/tos_task.h **** #if TOS_CFG_ROUND_ROBIN_EN > 0u
 114:..//kernel/core/include/tos_task.h ****     k_timeslice_t       timeslice_reload;   /**< if current time slice is used up, use time_slice_r
 115:..//kernel/core/include/tos_task.h ****     k_timeslice_t       timeslice;          /**< how much time slice left for us? */
 116:..//kernel/core/include/tos_task.h **** #endif
 117:..//kernel/core/include/tos_task.h **** 
 118:..//kernel/core/include/tos_task.h **** #if (TOS_CFG_MESSAGE_QUEUE_EN > 0u) || (TOS_CFG_PRIORITY_MESSAGE_QUEUE_EN > 0u)
 119:..//kernel/core/include/tos_task.h ****     void               *msg;                /**< if we pend a message queue successfully, our msg w
 120:..//kernel/core/include/tos_task.h **** #endif
 121:..//kernel/core/include/tos_task.h **** 
 122:..//kernel/core/include/tos_task.h **** #if (TOS_CFG_MAIL_QUEUE_EN > 0u) || (TOS_CFG_PRIORITY_MAIL_QUEUE_EN > 0u)
 123:..//kernel/core/include/tos_task.h ****     void               *mail;               /**< if we pend a mail queue successfully, our mail and
 124:..//kernel/core/include/tos_task.h ****     size_t              mail_size;
 125:..//kernel/core/include/tos_task.h **** #endif
 126:..//kernel/core/include/tos_task.h **** 
 127:..//kernel/core/include/tos_task.h **** #if TOS_CFG_EVENT_EN > 0u
 128:..//kernel/core/include/tos_task.h ****     k_opt_t             opt_event_pend;     /**< if we are pending an event, what's the option for 
 129:..//kernel/core/include/tos_task.h ****     k_event_flag_t      flag_expect;        /**< if we are pending an event, what event flag are we
 130:..//kernel/core/include/tos_task.h ****     k_event_flag_t     *flag_match;         /**< if we pend an event successfully, flag_match will 
 131:..//kernel/core/include/tos_task.h ****                                                     by tos_event_pend to the caller */
 132:..//kernel/core/include/tos_task.h **** #endif
 133:..//kernel/core/include/tos_task.h **** };
 134:..//kernel/core/include/tos_task.h **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 13


 135:..//kernel/core/include/tos_task.h **** /**
 136:..//kernel/core/include/tos_task.h ****  * @brief Create a task.
 137:..//kernel/core/include/tos_task.h ****  * create a task.
 138:..//kernel/core/include/tos_task.h ****  *
 139:..//kernel/core/include/tos_task.h ****  * @attention None
 140:..//kernel/core/include/tos_task.h ****  *
 141:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task.
 142:..//kernel/core/include/tos_task.h ****  * @param[in]   name        name of the task.
 143:..//kernel/core/include/tos_task.h ****  * @param[in]   entry       running entry of the task.
 144:..//kernel/core/include/tos_task.h ****  * @param[in]   arg         argument for the entry of the task.
 145:..//kernel/core/include/tos_task.h ****  * @param[in]   prio        priority of the task.
 146:..//kernel/core/include/tos_task.h ****  * @param[in]   stk_base    stack base address of the task.
 147:..//kernel/core/include/tos_task.h ****  * @param[in]   stk_size    stack size of the task.
 148:..//kernel/core/include/tos_task.h ****  * @param[in]   timeslice   time slice of the task.
 149:..//kernel/core/include/tos_task.h ****  *
 150:..//kernel/core/include/tos_task.h ****  * @return  errcode
 151:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_STK_SIZE_INVALID    stack size is invalid.
 152:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_PRIO_INVALID        priority is invalid.
 153:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE                     return successfully.
 154:..//kernel/core/include/tos_task.h ****  */
 155:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_create(k_task_t *task,
 156:..//kernel/core/include/tos_task.h ****                                             char *name,
 157:..//kernel/core/include/tos_task.h ****                                             k_task_entry_t entry,
 158:..//kernel/core/include/tos_task.h ****                                             void *arg,
 159:..//kernel/core/include/tos_task.h ****                                             k_prio_t prio,
 160:..//kernel/core/include/tos_task.h ****                                             k_stack_t *stk_base,
 161:..//kernel/core/include/tos_task.h ****                                             size_t stk_size,
 162:..//kernel/core/include/tos_task.h ****                                             k_timeslice_t timeslice);
 163:..//kernel/core/include/tos_task.h **** 
 164:..//kernel/core/include/tos_task.h **** /**
 165:..//kernel/core/include/tos_task.h ****  * @brief Destroy a task.
 166:..//kernel/core/include/tos_task.h ****  * delete a task.
 167:..//kernel/core/include/tos_task.h ****  *
 168:..//kernel/core/include/tos_task.h ****  * @attention None
 169:..//kernel/core/include/tos_task.h ****  *
 170:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task to be deleted.
 171:..//kernel/core/include/tos_task.h ****  *
 172:..//kernel/core/include/tos_task.h ****  * @return  errcode
 173:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_DESTROY_IDLE    attempt to destroy idle task.
 174:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE                 return successfully.
 175:..//kernel/core/include/tos_task.h ****  */
 176:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_destroy(k_task_t *task);
 177:..//kernel/core/include/tos_task.h **** 
 178:..//kernel/core/include/tos_task.h **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 179:..//kernel/core/include/tos_task.h **** 
 180:..//kernel/core/include/tos_task.h **** /**
 181:..//kernel/core/include/tos_task.h ****  * @brief Create a task with a dynamic allocated task handler and stack.
 182:..//kernel/core/include/tos_task.h ****  * create a task with a dynamic allocated task handler and stack.
 183:..//kernel/core/include/tos_task.h ****  *
 184:..//kernel/core/include/tos_task.h ****  * @param[out]  task        dynamic allocated task handler.
 185:..//kernel/core/include/tos_task.h ****  * @param[in]   name        name of the task.
 186:..//kernel/core/include/tos_task.h ****  * @param[in]   entry       running entry of the task.
 187:..//kernel/core/include/tos_task.h ****  * @param[in]   arg         argument for the entry of the task.
 188:..//kernel/core/include/tos_task.h ****  * @param[in]   prio        priority of the task.
 189:..//kernel/core/include/tos_task.h ****  * @param[in]   stk_size    stack size of the task.
 190:..//kernel/core/include/tos_task.h ****  * @param[in]   timeslice   time slice of the task.
 191:..//kernel/core/include/tos_task.h ****  *
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 14


 192:..//kernel/core/include/tos_task.h ****  * @return  errcode
 193:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_STK_SIZE_INVALID    stack size is invalid.
 194:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_PRIO_INVALID        priority is invalid.
 195:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_OUT_OF_MEMORY       out of memory(insufficient heap memory).
 196:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE                     return successfully.
 197:..//kernel/core/include/tos_task.h ****  */
 198:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_create_dyn(k_task_t **task,
 199:..//kernel/core/include/tos_task.h ****                                                     char *name,
 200:..//kernel/core/include/tos_task.h ****                                                     k_task_entry_t entry,
 201:..//kernel/core/include/tos_task.h ****                                                     void *arg,
 202:..//kernel/core/include/tos_task.h ****                                                     k_prio_t prio,
 203:..//kernel/core/include/tos_task.h ****                                                     size_t stk_size,
 204:..//kernel/core/include/tos_task.h ****                                                     k_timeslice_t timeslice);
 205:..//kernel/core/include/tos_task.h **** 
 206:..//kernel/core/include/tos_task.h **** #endif
 207:..//kernel/core/include/tos_task.h **** 
 208:..//kernel/core/include/tos_task.h **** /**
 209:..//kernel/core/include/tos_task.h ****  * @brief Delay current task for ticks.
 210:..//kernel/core/include/tos_task.h ****  * Delay for a specified amount of ticks.
 211:..//kernel/core/include/tos_task.h ****  *
 212:..//kernel/core/include/tos_task.h ****  * @attention None
 213:..//kernel/core/include/tos_task.h ****  *
 214:..//kernel/core/include/tos_task.h ****  * @param[in]   delay       amount of ticks to delay.
 215:..//kernel/core/include/tos_task.h ****  *
 216:..//kernel/core/include/tos_task.h ****  * @return  errcode
 217:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_DELAY_ZERO     delay is zero.
 218:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE           return successfully.
 219:..//kernel/core/include/tos_task.h ****  */
 220:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_delay(k_tick_t delay);
 221:..//kernel/core/include/tos_task.h **** 
 222:..//kernel/core/include/tos_task.h **** /**
 223:..//kernel/core/include/tos_task.h ****  * @brief Resume task from delay.
 224:..//kernel/core/include/tos_task.h ****  * Resume a delayed task from delay.
 225:..//kernel/core/include/tos_task.h ****  *
 226:..//kernel/core/include/tos_task.h ****  * @attention None
 227:..//kernel/core/include/tos_task.h ****  *
 228:..//kernel/core/include/tos_task.h ****  * @param[in]   task        the pointer to the handler of the task.
 229:..//kernel/core/include/tos_task.h ****  *
 230:..//kernel/core/include/tos_task.h ****  * @return  errcode
 231:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_NOT_DELAY         task is not delayed.
 232:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_SUSPENDED         task is suspended.
 233:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE                   return successfully.
 234:..//kernel/core/include/tos_task.h ****  */
 235:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_delay_abort(k_task_t *task);
 236:..//kernel/core/include/tos_task.h **** 
 237:..//kernel/core/include/tos_task.h **** /**
 238:..//kernel/core/include/tos_task.h ****  * @brief Suspend a task.
 239:..//kernel/core/include/tos_task.h ****  * Bring a task to sleep.
 240:..//kernel/core/include/tos_task.h ****  *
 241:..//kernel/core/include/tos_task.h ****  * @attention None
 242:..//kernel/core/include/tos_task.h ****  *
 243:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task to be resume.
 244:..//kernel/core/include/tos_task.h ****  *
 245:..//kernel/core/include/tos_task.h ****  * @return  errcode
 246:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_SUSPEND_IDLE  attempt to suspend idle task.
 247:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE               return successfully.
 248:..//kernel/core/include/tos_task.h ****  */
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 15


 249:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_suspend(k_task_t *task);
 250:..//kernel/core/include/tos_task.h **** 
 251:..//kernel/core/include/tos_task.h **** /**
 252:..//kernel/core/include/tos_task.h ****  * @brief Resume a task.
 253:..//kernel/core/include/tos_task.h ****  * Bring a task to run.
 254:..//kernel/core/include/tos_task.h ****  *
 255:..//kernel/core/include/tos_task.h ****  * @attention None
 256:..//kernel/core/include/tos_task.h ****  *
 257:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task to be resume.
 258:..//kernel/core/include/tos_task.h ****  *
 259:..//kernel/core/include/tos_task.h ****  * @return  errcode
 260:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_RESUME_SELF   attempt to resume self-task.
 261:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE               return successfully.
 262:..//kernel/core/include/tos_task.h ****  */
 263:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_resume(k_task_t *task);
 264:..//kernel/core/include/tos_task.h **** 
 265:..//kernel/core/include/tos_task.h **** /**
 266:..//kernel/core/include/tos_task.h ****  * @brief Change task priority.
 267:..//kernel/core/include/tos_task.h ****  * Change a priority of the task.
 268:..//kernel/core/include/tos_task.h ****  *
 269:..//kernel/core/include/tos_task.h ****  * @attention None
 270:..//kernel/core/include/tos_task.h ****  *
 271:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task to be resume.
 272:..//kernel/core/include/tos_task.h ****  * @param[in]   prio_new    new priority.
 273:..//kernel/core/include/tos_task.h ****  *
 274:..//kernel/core/include/tos_task.h ****  * @return  errcode
 275:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_PRIO_INVALID  new priority is invalid.
 276:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE               return successfully.
 277:..//kernel/core/include/tos_task.h ****  */
 278:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_prio_change(k_task_t *task, k_prio_t prio_new);
 279:..//kernel/core/include/tos_task.h **** 
 280:..//kernel/core/include/tos_task.h **** /**
 281:..//kernel/core/include/tos_task.h ****  * @brief Quit schedule this time.
 282:..//kernel/core/include/tos_task.h ****  * Quit the cpu this time.
 283:..//kernel/core/include/tos_task.h ****  *
 284:..//kernel/core/include/tos_task.h ****  * @attention None
 285:..//kernel/core/include/tos_task.h ****  *
 286:..//kernel/core/include/tos_task.h ****  * @param   None
 287:..//kernel/core/include/tos_task.h ****  *
 288:..//kernel/core/include/tos_task.h ****  * @return  None
 289:..//kernel/core/include/tos_task.h ****  */
 290:..//kernel/core/include/tos_task.h **** __API__ void    tos_task_yield(void);
 291:..//kernel/core/include/tos_task.h **** 
 292:..//kernel/core/include/tos_task.h **** /**
 293:..//kernel/core/include/tos_task.h ****  * @brief Get current running task.
 294:..//kernel/core/include/tos_task.h ****  * Get current running task.
 295:..//kernel/core/include/tos_task.h ****  *
 296:..//kernel/core/include/tos_task.h ****  * @attention if kernel is not running, you'll get K_NULL
 297:..//kernel/core/include/tos_task.h ****  *
 298:..//kernel/core/include/tos_task.h ****  * @param   None
 299:..//kernel/core/include/tos_task.h ****  *
 300:..//kernel/core/include/tos_task.h ****  * @return  current running task handler
 301:..//kernel/core/include/tos_task.h ****  */
 302:..//kernel/core/include/tos_task.h **** __API__ k_task_t *tos_task_curr_task_get(void);
 303:..//kernel/core/include/tos_task.h **** 
 304:..//kernel/core/include/tos_task.h **** 
 305:..//kernel/core/include/tos_task.h **** #if TOS_CFG_TASK_STACK_DRAUGHT_DEPTH_DETACT_EN > 0u
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 16


 306:..//kernel/core/include/tos_task.h **** 
 307:..//kernel/core/include/tos_task.h **** /**
 308:..//kernel/core/include/tos_task.h ****  * @brief Get the maximum stack draught depth of a task.
 309:..//kernel/core/include/tos_task.h ****  *
 310:..//kernel/core/include/tos_task.h ****  * @attention None
 311:..//kernel/core/include/tos_task.h ****  *
 312:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task.
 313:..//kernel/core/include/tos_task.h ****  * @param[out]  depth       task stack draught depth.
 314:..//kernel/core/include/tos_task.h ****  *
 315:..//kernel/core/include/tos_task.h ****  * @return  errcode
 316:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE                 get depth successfully.
 317:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_STK_OVERFLOW    task stack is overflow.
 318:..//kernel/core/include/tos_task.h ****  */
 319:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_stack_draught_depth(k_task_t *task, int *depth);
 320:..//kernel/core/include/tos_task.h **** 
 321:..//kernel/core/include/tos_task.h **** #endif
 322:..//kernel/core/include/tos_task.h **** 
 323:..//kernel/core/include/tos_task.h **** /**
 324:..//kernel/core/include/tos_task.h ****  * @brief Walk through all the tasks in the statistic list.
 325:..//kernel/core/include/tos_task.h ****  *
 326:..//kernel/core/include/tos_task.h ****  * @attention None
 327:..//kernel/core/include/tos_task.h ****  *
 328:..//kernel/core/include/tos_task.h ****  * @param[in]   walker      a function involved when meeting each tasks in the list.
 329:..//kernel/core/include/tos_task.h ****  *
 330:..//kernel/core/include/tos_task.h ****  * @return  None
 331:..//kernel/core/include/tos_task.h ****  */
 332:..//kernel/core/include/tos_task.h **** __API__ void tos_task_walkthru(k_task_walker_t walker);
 333:..//kernel/core/include/tos_task.h **** 
 334:..//kernel/core/include/tos_task.h **** /**
 335:..//kernel/core/include/tos_task.h ****  * @brief A debug API for display all tasks information.
 336:..//kernel/core/include/tos_task.h ****  *
 337:..//kernel/core/include/tos_task.h ****  * @attention None
 338:..//kernel/core/include/tos_task.h ****  *
 339:..//kernel/core/include/tos_task.h ****  * @param   None
 340:..//kernel/core/include/tos_task.h ****  *
 341:..//kernel/core/include/tos_task.h ****  * @return  None
 342:..//kernel/core/include/tos_task.h ****  */
 343:..//kernel/core/include/tos_task.h **** __DEBUG__ void tos_task_info_display(void);
 344:..//kernel/core/include/tos_task.h **** 
 345:..//kernel/core/include/tos_task.h **** __KNL__ void task_free_all(void);
 346:..//kernel/core/include/tos_task.h **** 
 347:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ int task_state_is_ready(k_task_t *task)
 182              		.loc 3 347 31 view .LVU38
 183              	.LBB129:
 348:..//kernel/core/include/tos_task.h **** {
 349:..//kernel/core/include/tos_task.h ****     return task->state == K_TASK_STATE_READY;
 184              		.loc 3 349 5 view .LVU39
 185              		.loc 3 349 16 is_stmt 0 view .LVU40
 186 0022 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 187              	.LVL20:
 188              		.loc 3 349 16 view .LVU41
 189              	.LBE129:
 190              	.LBE128:
 169:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 191              		.loc 1 169 8 view .LVU42
 192 0026 002B     		cmp	r3, #0
 193 0028 35D0     		beq	.L16
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 17


 194              	.L11:
 172:..//kernel/core/tos_task.c ****         tick_list_remove(task);
 195              		.loc 1 172 5 is_stmt 1 view .LVU43
 196              	.LVL21:
 197              	.LBB130:
 198              	.LBI130:
 350:..//kernel/core/include/tos_task.h **** }
 351:..//kernel/core/include/tos_task.h **** 
 352:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ int task_state_is_sleeping(k_task_t *task)
 199              		.loc 3 352 31 view .LVU44
 200              	.LBB131:
 353:..//kernel/core/include/tos_task.h **** {
 354:..//kernel/core/include/tos_task.h ****     return task->state & K_TASK_STATE_SLEEP;
 201              		.loc 3 354 5 view .LVU45
 202              		.loc 3 354 16 is_stmt 0 view .LVU46
 203 002a 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 204              	.LVL22:
 205              		.loc 3 354 16 view .LVU47
 206              	.LBE131:
 207              	.LBE130:
 172:..//kernel/core/tos_task.c ****         tick_list_remove(task);
 208              		.loc 1 172 8 view .LVU48
 209 002e 13F0010F 		tst	r3, #1
 210 0032 34D1     		bne	.L17
 211              	.L12:
 175:..//kernel/core/tos_task.c ****         pend_list_remove(task);
 212              		.loc 1 175 5 is_stmt 1 view .LVU49
 213              	.LVL23:
 214              	.LBB132:
 215              	.LBI132:
 355:..//kernel/core/include/tos_task.h **** }
 356:..//kernel/core/include/tos_task.h **** 
 357:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ int task_state_is_pending(k_task_t *task)
 216              		.loc 3 357 31 view .LVU50
 217              	.LBB133:
 358:..//kernel/core/include/tos_task.h **** {
 359:..//kernel/core/include/tos_task.h ****     return task->state & K_TASK_STATE_PEND;
 218              		.loc 3 359 5 view .LVU51
 219              		.loc 3 359 16 is_stmt 0 view .LVU52
 220 0034 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 221              	.LVL24:
 222              		.loc 3 359 16 view .LVU53
 223              	.LBE133:
 224              	.LBE132:
 175:..//kernel/core/tos_task.c ****         pend_list_remove(task);
 225              		.loc 1 175 8 view .LVU54
 226 0038 13F0020F 		tst	r3, #2
 227 003c 33D1     		bne	.L18
 228              	.L13:
 179:..//kernel/core/tos_task.c ****     task_reset(task);
 229              		.loc 1 179 5 is_stmt 1 view .LVU55
 230              	.LVL25:
 231              	.LBB134:
 232              	.LBI134:
 115:..//kernel/core/include/tos_list.h **** {
 233              		.loc 2 115 32 view .LVU56
 234              	.LBB135:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 18


 117:..//kernel/core/include/tos_list.h **** }
 235              		.loc 2 117 5 view .LVU57
 117:..//kernel/core/include/tos_list.h **** }
 236              		.loc 2 117 19 is_stmt 0 view .LVU58
 237 003e A36B     		ldr	r3, [r4, #56]
 117:..//kernel/core/include/tos_list.h **** }
 238              		.loc 2 117 31 view .LVU59
 239 0040 626B     		ldr	r2, [r4, #52]
 240              	.LVL26:
 241              	.LBB136:
 242              	.LBI136:
  88:..//kernel/core/include/tos_list.h **** {
 243              		.loc 2 88 24 is_stmt 1 view .LVU60
 244              	.LBB137:
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 245              		.loc 2 90 5 view .LVU61
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 246              		.loc 2 90 16 is_stmt 0 view .LVU62
 247 0042 5360     		str	r3, [r2, #4]
  91:..//kernel/core/include/tos_list.h **** }
 248              		.loc 2 91 5 is_stmt 1 view .LVU63
  91:..//kernel/core/include/tos_list.h **** }
 249              		.loc 2 91 16 is_stmt 0 view .LVU64
 250 0044 1A60     		str	r2, [r3]
 251              	.LVL27:
  91:..//kernel/core/include/tos_list.h **** }
 252              		.loc 2 91 16 view .LVU65
 253              	.LBE137:
 254              	.LBE136:
 255              	.LBE135:
 256              	.LBE134:
 180:..//kernel/core/tos_task.c **** 
 257              		.loc 1 180 5 is_stmt 1 view .LVU66
 258              	.LBB138:
 259              	.LBI138:
  20:..//kernel/core/tos_task.c **** {
 260              		.loc 1 20 24 view .LVU67
 261              	.LBB139:
  23:..//kernel/core/tos_task.c **** 
 262              		.loc 1 23 5 view .LVU68
 263              	.LBB140:
 264              	.LBI140:
 265              		.file 4 "..//kernel/core/include/tos_sys.h"
   1:..//kernel/core/include/tos_sys.h **** /*----------------------------------------------------------------------------
   2:..//kernel/core/include/tos_sys.h ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/include/tos_sys.h ****  * available.
   4:..//kernel/core/include/tos_sys.h ****  *
   5:..//kernel/core/include/tos_sys.h ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/include/tos_sys.h ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/include/tos_sys.h ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/include/tos_sys.h ****  *
   9:..//kernel/core/include/tos_sys.h ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/include/tos_sys.h ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/include/tos_sys.h ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/include/tos_sys.h ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/include/tos_sys.h ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/include/tos_sys.h ****  * as the other licenses applicable to the third-party components included
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 19


  15:..//kernel/core/include/tos_sys.h ****  * within TencentOS.
  16:..//kernel/core/include/tos_sys.h ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/include/tos_sys.h **** 
  18:..//kernel/core/include/tos_sys.h **** #ifndef _TOS_SYS_H_
  19:..//kernel/core/include/tos_sys.h **** #define  _TOS_SYS_H_
  20:..//kernel/core/include/tos_sys.h **** 
  21:..//kernel/core/include/tos_sys.h **** __CDECLS_BEGIN
  22:..//kernel/core/include/tos_sys.h **** 
  23:..//kernel/core/include/tos_sys.h **** #define K_NESTING_LIMIT_IRQ             (k_nesting_t)250u
  24:..//kernel/core/include/tos_sys.h **** #define K_NESTING_LIMIT_SCHED_LOCK      (k_nesting_t)250u
  25:..//kernel/core/include/tos_sys.h **** 
  26:..//kernel/core/include/tos_sys.h **** typedef enum knl_state_en {
  27:..//kernel/core/include/tos_sys.h ****     KNL_STATE_STOPPED,
  28:..//kernel/core/include/tos_sys.h ****     KNL_STATE_RUNNING,
  29:..//kernel/core/include/tos_sys.h **** } knl_state_t;
  30:..//kernel/core/include/tos_sys.h **** 
  31:..//kernel/core/include/tos_sys.h **** // some kind of magic number, mainly for identifing whether the object is initialized, or whether u
  32:..//kernel/core/include/tos_sys.h **** typedef enum knl_obj_type_en {
  33:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_NONE                           = 0x0000,
  34:..//kernel/core/include/tos_sys.h **** 
  35:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BINARY_HEAP                    = 0xDAD0,
  36:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BITMAP                         = 0xDAD1,
  37:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_CHAR_FIFO                      = 0xDAD2,
  38:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MMBLK_POOL                     = 0xDAD3,
  39:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MSG_QUEUE                      = 0xDAD4,
  40:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_QUEUE                 = 0xDAD5,
  41:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_RING_QUEUE                     = 0xDAD6,
  42:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_STOPWATCH                      = 0xDAD7,
  43:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_TASK                           = 0xDAD8,
  44:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_TIMER                          = 0xDAD9,
  45:..//kernel/core/include/tos_sys.h **** 
  46:..//kernel/core/include/tos_sys.h ****     // ipc object
  47:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BARRIER                        = 0x0BEE,
  48:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_COMPLETION                     = 0x1BEE,
  49:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_COUNTDOWNLATCH                 = 0x2BEE,
  50:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_EVENT                          = 0x3BEE,
  51:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MAIL_QUEUE                     = 0x4BEE,
  52:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MESSAGE_QUEUE                  = 0x5BEE,
  53:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MUTEX                          = 0x6BEE,
  54:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_MAIL_QUEUE            = 0x7BEE,
  55:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_MESSAGE_QUEUE         = 0x8BEE,
  56:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_RWLOCK                         = 0x9BEE,
  57:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_SEMAPHORE                      = 0xABEE,
  58:..//kernel/core/include/tos_sys.h **** } knl_obj_type_t;
  59:..//kernel/core/include/tos_sys.h **** 
  60:..//kernel/core/include/tos_sys.h **** typedef enum knl_obj_alloc_type_en {
  61:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_NONE,
  62:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_STATIC,
  63:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_DYNAMIC,
  64:..//kernel/core/include/tos_sys.h **** } knl_obj_alloc_type_t;
  65:..//kernel/core/include/tos_sys.h **** 
  66:..//kernel/core/include/tos_sys.h **** typedef struct knl_object_st {
  67:..//kernel/core/include/tos_sys.h ****     knl_obj_alloc_type_t    alloc_type; /* is dynamic allocated(using tos_mmheap) or static memory?
  68:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_OBJECT_VERIFY_EN > 0u
  69:..//kernel/core/include/tos_sys.h ****     knl_obj_type_t          type;
  70:..//kernel/core/include/tos_sys.h **** #endif
  71:..//kernel/core/include/tos_sys.h **** } knl_obj_t;
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 20


  72:..//kernel/core/include/tos_sys.h **** 
  73:..//kernel/core/include/tos_sys.h **** /**
  74:..//kernel/core/include/tos_sys.h ****  * @brief Initialize the kernel.
  75:..//kernel/core/include/tos_sys.h ****  * initialize the tos tiny kernel.
  76:..//kernel/core/include/tos_sys.h ****  *
  77:..//kernel/core/include/tos_sys.h ****  * @attention None
  78:..//kernel/core/include/tos_sys.h ****  *
  79:..//kernel/core/include/tos_sys.h ****  * @param   None
  80:..//kernel/core/include/tos_sys.h ****  *
  81:..//kernel/core/include/tos_sys.h ****  * @return  errcode
  82:..//kernel/core/include/tos_sys.h ****  * @retval  Non-#K_ERR_NONE               return failed.
  83:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_NONE                   return successfully.
  84:..//kernel/core/include/tos_sys.h ****  */
  85:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_init(void);
  86:..//kernel/core/include/tos_sys.h **** 
  87:..//kernel/core/include/tos_sys.h **** /**
  88:..//kernel/core/include/tos_sys.h ****  * @brief Start the kernel.
  89:..//kernel/core/include/tos_sys.h ****  * get the kernel start to run, which means start the multitask scheduling.
  90:..//kernel/core/include/tos_sys.h ****  *
  91:..//kernel/core/include/tos_sys.h ****  * @attention None
  92:..//kernel/core/include/tos_sys.h ****  *
  93:..//kernel/core/include/tos_sys.h ****  * @param   None
  94:..//kernel/core/include/tos_sys.h ****  *
  95:..//kernel/core/include/tos_sys.h ****  * @return  errcode
  96:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_KNL_RUNNING            the kernel is already running.
  97:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_NONE                   return successfully.
  98:..//kernel/core/include/tos_sys.h ****  */
  99:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_start(void);
 100:..//kernel/core/include/tos_sys.h **** 
 101:..//kernel/core/include/tos_sys.h **** /**
 102:..//kernel/core/include/tos_sys.h ****  * @brief Get the kernel state.
 103:..//kernel/core/include/tos_sys.h ****  * whether the kernel is running.
 104:..//kernel/core/include/tos_sys.h ****  *
 105:..//kernel/core/include/tos_sys.h ****  * @attention None
 106:..//kernel/core/include/tos_sys.h ****  *
 107:..//kernel/core/include/tos_sys.h ****  * @param   None
 108:..//kernel/core/include/tos_sys.h ****  *
 109:..//kernel/core/include/tos_sys.h ****  * @return  whether the kernel is running.
 110:..//kernel/core/include/tos_sys.h ****  * @retval  Non-0                           the kernel is running.
 111:..//kernel/core/include/tos_sys.h ****  * @retval  0                               the kernel is not running.
 112:..//kernel/core/include/tos_sys.h ****  */
 113:..//kernel/core/include/tos_sys.h **** __API__ int     tos_knl_is_running(void);
 114:..//kernel/core/include/tos_sys.h **** 
 115:..//kernel/core/include/tos_sys.h **** /**
 116:..//kernel/core/include/tos_sys.h ****  * @brief Kernel enter the interrupt.
 117:..//kernel/core/include/tos_sys.h ****  * this function should be called in the entrance of a interrupt handler.
 118:..//kernel/core/include/tos_sys.h ****  *
 119:..//kernel/core/include/tos_sys.h ****  * @attention None
 120:..//kernel/core/include/tos_sys.h ****  *
 121:..//kernel/core/include/tos_sys.h ****  * @param   None
 122:..//kernel/core/include/tos_sys.h ****  *
 123:..//kernel/core/include/tos_sys.h ****  * @return  None
 124:..//kernel/core/include/tos_sys.h ****  */
 125:..//kernel/core/include/tos_sys.h **** __API__ void    tos_knl_irq_enter(void);
 126:..//kernel/core/include/tos_sys.h **** 
 127:..//kernel/core/include/tos_sys.h **** /**
 128:..//kernel/core/include/tos_sys.h ****  * @brief Kernel exit the interrupt.
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 21


 129:..//kernel/core/include/tos_sys.h ****  * this function should be called in the exit of a interrupt handler.
 130:..//kernel/core/include/tos_sys.h ****  *
 131:..//kernel/core/include/tos_sys.h ****  * @attention None
 132:..//kernel/core/include/tos_sys.h ****  *
 133:..//kernel/core/include/tos_sys.h ****  * @param   None
 134:..//kernel/core/include/tos_sys.h ****  *
 135:..//kernel/core/include/tos_sys.h ****  * @return  None
 136:..//kernel/core/include/tos_sys.h ****  */
 137:..//kernel/core/include/tos_sys.h **** __API__ void    tos_knl_irq_leave(void);
 138:..//kernel/core/include/tos_sys.h **** 
 139:..//kernel/core/include/tos_sys.h **** /**
 140:..//kernel/core/include/tos_sys.h ****  * @brief Lock the scheduler.
 141:..//kernel/core/include/tos_sys.h ****  * prevent the kernel from performing task schedule.
 142:..//kernel/core/include/tos_sys.h ****  *
 143:..//kernel/core/include/tos_sys.h ****  * @attention None
 144:..//kernel/core/include/tos_sys.h ****  *
 145:..//kernel/core/include/tos_sys.h ****  * @param   None
 146:..//kernel/core/include/tos_sys.h ****  *
 147:..//kernel/core/include/tos_sys.h ****  * @return  errcode
 148:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_KNL_NOT_RUNNING         the kernel is not running.
 149:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_LOCK_NESTING_OVERFLOW   the schedule lock nesting is overflow.
 150:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_NONE                    return successfully.
 151:..//kernel/core/include/tos_sys.h ****  */
 152:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_sched_lock(void);
 153:..//kernel/core/include/tos_sys.h **** 
 154:..//kernel/core/include/tos_sys.h **** /**
 155:..//kernel/core/include/tos_sys.h ****  * @brief Unlock the scheduler.
 156:..//kernel/core/include/tos_sys.h ****  * re-enable the task schedule.
 157:..//kernel/core/include/tos_sys.h ****  *
 158:..//kernel/core/include/tos_sys.h ****  * @attention None
 159:..//kernel/core/include/tos_sys.h ****  *
 160:..//kernel/core/include/tos_sys.h ****  * @param   None
 161:..//kernel/core/include/tos_sys.h ****  *
 162:..//kernel/core/include/tos_sys.h ****  * @return  errcode
 163:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_KNL_NOT_RUNNING         the kernel is not running.
 164:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_SCHED_NOT_LOCKED        the scheduler is not locked.
 165:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_NONE                    return successfully.
 166:..//kernel/core/include/tos_sys.h ****  */
 167:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_sched_unlock(void);
 168:..//kernel/core/include/tos_sys.h **** 
 169:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_TICKLESS_EN > 0u
 170:..//kernel/core/include/tos_sys.h **** __KNL__ k_tick_t knl_next_expires_get(void);
 171:..//kernel/core/include/tos_sys.h **** #endif
 172:..//kernel/core/include/tos_sys.h **** 
 173:..//kernel/core/include/tos_sys.h **** __KNL__ void    knl_sched(void);
 174:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_sched_locked(void);
 175:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_inirq(void);
 176:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_idle(k_task_t *task);
 177:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_self(k_task_t *task);
 178:..//kernel/core/include/tos_sys.h **** __KNL__ k_err_t knl_idle_init(void);
 179:..//kernel/core/include/tos_sys.h **** 
 180:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_OBJECT_VERIFY_EN > 0u
 181:..//kernel/core/include/tos_sys.h **** 
 182:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ int knl_object_verify(knl_obj_t *knl_obj, knl_obj_type_t type)
 183:..//kernel/core/include/tos_sys.h **** {
 184:..//kernel/core/include/tos_sys.h ****     return knl_obj->type == type;
 185:..//kernel/core/include/tos_sys.h **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 22


 186:..//kernel/core/include/tos_sys.h **** 
 187:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_init(knl_obj_t *knl_obj, knl_obj_type_t type)
 188:..//kernel/core/include/tos_sys.h **** {
 189:..//kernel/core/include/tos_sys.h ****     knl_obj->type = type;
 190:..//kernel/core/include/tos_sys.h **** }
 191:..//kernel/core/include/tos_sys.h **** 
 192:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_deinit(knl_obj_t *knl_obj)
 193:..//kernel/core/include/tos_sys.h **** {
 194:..//kernel/core/include/tos_sys.h ****     knl_obj->type = KNL_OBJ_TYPE_NONE;
 195:..//kernel/core/include/tos_sys.h **** }
 196:..//kernel/core/include/tos_sys.h **** 
 197:..//kernel/core/include/tos_sys.h **** #endif
 198:..//kernel/core/include/tos_sys.h **** 
 199:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_alloc_reset(knl_obj_t *knl_obj)
 266              		.loc 4 199 32 view .LVU69
 267              	.LBB141:
 200:..//kernel/core/include/tos_sys.h **** {
 201:..//kernel/core/include/tos_sys.h ****     knl_obj->alloc_type = KNL_OBJ_ALLOC_TYPE_NONE;
 268              		.loc 4 201 5 view .LVU70
 269              		.loc 4 201 25 is_stmt 0 view .LVU71
 270 0046 0025     		movs	r5, #0
 271 0048 2571     		strb	r5, [r4, #4]
 272              	.LVL28:
 273              		.loc 4 201 25 view .LVU72
 274              	.LBE141:
 275              	.LBE140:
  25:..//kernel/core/tos_task.c **** #endif
 276              		.loc 1 25 5 is_stmt 1 view .LVU73
 277 004a 04F12C03 		add	r3, r4, #44
 278              	.LVL29:
 279              	.LBB142:
 280              	.LBI142:
  99:..//kernel/core/include/tos_list.h **** {
 281              		.loc 2 99 32 view .LVU74
 282              	.LBB143:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 283              		.loc 2 101 5 view .LVU75
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 284              		.loc 2 101 16 is_stmt 0 view .LVU76
 285 004e E362     		str	r3, [r4, #44]
 102:..//kernel/core/include/tos_list.h **** }
 286              		.loc 2 102 5 is_stmt 1 view .LVU77
 102:..//kernel/core/include/tos_list.h **** }
 287              		.loc 2 102 16 is_stmt 0 view .LVU78
 288 0050 2363     		str	r3, [r4, #48]
 289              	.LVL30:
 102:..//kernel/core/include/tos_list.h **** }
 290              		.loc 2 102 16 view .LVU79
 291              	.LBE143:
 292              	.LBE142:
  27:..//kernel/core/tos_task.c ****     tos_list_init(&task->tick_list);
 293              		.loc 1 27 5 is_stmt 1 view .LVU80
 294 0052 04F13403 		add	r3, r4, #52
 295              	.LVL31:
 296              	.LBB144:
 297              	.LBI144:
  99:..//kernel/core/include/tos_list.h **** {
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 23


 298              		.loc 2 99 32 view .LVU81
 299              	.LBB145:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 300              		.loc 2 101 5 view .LVU82
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 301              		.loc 2 101 16 is_stmt 0 view .LVU83
 302 0056 6363     		str	r3, [r4, #52]
 102:..//kernel/core/include/tos_list.h **** }
 303              		.loc 2 102 5 is_stmt 1 view .LVU84
 102:..//kernel/core/include/tos_list.h **** }
 304              		.loc 2 102 16 is_stmt 0 view .LVU85
 305 0058 A363     		str	r3, [r4, #56]
 306              	.LVL32:
 102:..//kernel/core/include/tos_list.h **** }
 307              		.loc 2 102 16 view .LVU86
 308              	.LBE145:
 309              	.LBE144:
  28:..//kernel/core/tos_task.c ****     tos_list_init(&task->pend_list);
 310              		.loc 1 28 5 is_stmt 1 view .LVU87
 311 005a 04F14803 		add	r3, r4, #72
 312              	.LVL33:
 313              	.LBB146:
 314              	.LBI146:
  99:..//kernel/core/include/tos_list.h **** {
 315              		.loc 2 99 32 view .LVU88
 316              	.LBB147:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 317              		.loc 2 101 5 view .LVU89
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 318              		.loc 2 101 16 is_stmt 0 view .LVU90
 319 005e A364     		str	r3, [r4, #72]
 102:..//kernel/core/include/tos_list.h **** }
 320              		.loc 2 102 5 is_stmt 1 view .LVU91
 102:..//kernel/core/include/tos_list.h **** }
 321              		.loc 2 102 16 is_stmt 0 view .LVU92
 322 0060 E364     		str	r3, [r4, #76]
 323              	.LVL34:
 102:..//kernel/core/include/tos_list.h **** }
 324              		.loc 2 102 16 view .LVU93
 325              	.LBE147:
 326              	.LBE146:
  29:..//kernel/core/tos_task.c **** 
 327              		.loc 1 29 5 is_stmt 1 view .LVU94
 328 0062 04F15003 		add	r3, r4, #80
 329              	.LVL35:
 330              	.LBB148:
 331              	.LBI148:
  99:..//kernel/core/include/tos_list.h **** {
 332              		.loc 2 99 32 view .LVU95
 333              	.LBB149:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 334              		.loc 2 101 5 view .LVU96
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 335              		.loc 2 101 16 is_stmt 0 view .LVU97
 336 0066 2365     		str	r3, [r4, #80]
 102:..//kernel/core/include/tos_list.h **** }
 337              		.loc 2 102 5 is_stmt 1 view .LVU98
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 24


 102:..//kernel/core/include/tos_list.h **** }
 338              		.loc 2 102 16 is_stmt 0 view .LVU99
 339 0068 6365     		str	r3, [r4, #84]
 340              	.LVL36:
 102:..//kernel/core/include/tos_list.h **** }
 341              		.loc 2 102 16 view .LVU100
 342              	.LBE149:
 343              	.LBE148:
  32:..//kernel/core/tos_task.c ****     task->prio_pending  = K_TASK_PRIO_INVALID;
 344              		.loc 1 32 5 is_stmt 1 view .LVU101
 345              	.LBB150:
 346              	.LBI150:
  99:..//kernel/core/include/tos_list.h **** {
 347              		.loc 2 99 32 view .LVU102
 348              	.LBB151:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 349              		.loc 2 101 5 view .LVU103
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 350              		.loc 2 101 16 is_stmt 0 view .LVU104
 351 006a A665     		str	r6, [r4, #88]
 102:..//kernel/core/include/tos_list.h **** }
 352              		.loc 2 102 5 is_stmt 1 view .LVU105
 102:..//kernel/core/include/tos_list.h **** }
 353              		.loc 2 102 16 is_stmt 0 view .LVU106
 354 006c E665     		str	r6, [r4, #92]
 355              	.LVL37:
 102:..//kernel/core/include/tos_list.h **** }
 356              		.loc 2 102 16 view .LVU107
 357              	.LBE151:
 358              	.LBE150:
  33:..//kernel/core/tos_task.c **** #endif
 359              		.loc 1 33 5 is_stmt 1 view .LVU108
  33:..//kernel/core/tos_task.c **** #endif
 360              		.loc 1 33 25 is_stmt 0 view .LVU109
 361 006e 0A23     		movs	r3, #10
 362 0070 84F86030 		strb	r3, [r4, #96]
  36:..//kernel/core/tos_task.c ****     task->pending_obj   = (pend_obj_t *)K_NULL;
 363              		.loc 1 36 5 is_stmt 1 view .LVU110
  36:..//kernel/core/tos_task.c ****     task->pending_obj   = (pend_obj_t *)K_NULL;
 364              		.loc 1 36 25 is_stmt 0 view .LVU111
 365 0074 84F86850 		strb	r5, [r4, #104]
  37:..//kernel/core/tos_task.c **** 
 366              		.loc 1 37 5 is_stmt 1 view .LVU112
  37:..//kernel/core/tos_task.c **** 
 367              		.loc 1 37 25 is_stmt 0 view .LVU113
 368 0078 6566     		str	r5, [r4, #100]
  40:..//kernel/core/tos_task.c **** #endif
 369              		.loc 1 40 5 is_stmt 1 view .LVU114
  40:..//kernel/core/tos_task.c **** #endif
 370              		.loc 1 40 25 is_stmt 0 view .LVU115
 371 007a E566     		str	r5, [r4, #108]
  44:..//kernel/core/tos_task.c ****     task->mail_size     = 0;
 372              		.loc 1 44 5 is_stmt 1 view .LVU116
  44:..//kernel/core/tos_task.c ****     task->mail_size     = 0;
 373              		.loc 1 44 25 is_stmt 0 view .LVU117
 374 007c 2567     		str	r5, [r4, #112]
  45:..//kernel/core/tos_task.c **** #endif
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 25


 375              		.loc 1 45 5 is_stmt 1 view .LVU118
  45:..//kernel/core/tos_task.c **** #endif
 376              		.loc 1 45 25 is_stmt 0 view .LVU119
 377 007e 6567     		str	r5, [r4, #116]
  48:..//kernel/core/tos_task.c **** }
 378              		.loc 1 48 5 is_stmt 1 view .LVU120
 379              	.LVL38:
 380              	.LBB152:
 381              	.LBI152:
 192:..//kernel/core/include/tos_sys.h **** {
 382              		.loc 4 192 32 view .LVU121
 383              	.LBB153:
 194:..//kernel/core/include/tos_sys.h **** }
 384              		.loc 4 194 5 view .LVU122
 194:..//kernel/core/include/tos_sys.h **** }
 385              		.loc 4 194 19 is_stmt 0 view .LVU123
 386 0080 E580     		strh	r5, [r4, #6]	@ movhi
 387              	.LVL39:
 194:..//kernel/core/include/tos_sys.h **** }
 388              		.loc 4 194 19 view .LVU124
 389              	.LBE153:
 390              	.LBE152:
 391              	.LBE139:
 392              	.LBE138:
 182:..//kernel/core/tos_task.c **** 
 393              		.loc 1 182 5 is_stmt 1 view .LVU125
 394              	.LBB154:
 395              	.LBI154:
 360:..//kernel/core/include/tos_task.h **** }
 361:..//kernel/core/include/tos_task.h **** 
 362:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ int task_state_is_suspended(k_task_t *task)
 363:..//kernel/core/include/tos_task.h **** {
 364:..//kernel/core/include/tos_task.h ****     return task->state & K_TASK_STATE_SUSPENDED;
 365:..//kernel/core/include/tos_task.h **** }
 366:..//kernel/core/include/tos_task.h **** 
 367:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_reset_pending(k_task_t *task)
 368:..//kernel/core/include/tos_task.h **** {
 369:..//kernel/core/include/tos_task.h ****     task->state &= ~K_TASK_STATE_PEND;
 370:..//kernel/core/include/tos_task.h **** }
 371:..//kernel/core/include/tos_task.h **** 
 372:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_reset_sleeping(k_task_t *task)
 373:..//kernel/core/include/tos_task.h **** {
 374:..//kernel/core/include/tos_task.h ****     task->state &= ~K_TASK_STATE_SLEEP;
 375:..//kernel/core/include/tos_task.h **** }
 376:..//kernel/core/include/tos_task.h **** 
 377:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_reset_suspended(k_task_t *task)
 378:..//kernel/core/include/tos_task.h **** {
 379:..//kernel/core/include/tos_task.h ****     task->state &= ~K_TASK_STATE_SUSPENDED;
 380:..//kernel/core/include/tos_task.h **** }
 381:..//kernel/core/include/tos_task.h **** 
 382:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_set_suspended(k_task_t *task)
 383:..//kernel/core/include/tos_task.h **** {
 384:..//kernel/core/include/tos_task.h ****     task->state |= K_TASK_STATE_SUSPENDED;
 385:..//kernel/core/include/tos_task.h **** }
 386:..//kernel/core/include/tos_task.h **** 
 387:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_set_pend(k_task_t *task)
 388:..//kernel/core/include/tos_task.h **** {
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 26


 389:..//kernel/core/include/tos_task.h ****     task->state |= K_TASK_STATE_PEND;
 390:..//kernel/core/include/tos_task.h **** }
 391:..//kernel/core/include/tos_task.h **** 
 392:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_set_ready(k_task_t *task)
 393:..//kernel/core/include/tos_task.h **** {
 394:..//kernel/core/include/tos_task.h ****     task->state = K_TASK_STATE_READY;
 395:..//kernel/core/include/tos_task.h **** }
 396:..//kernel/core/include/tos_task.h **** 
 397:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_set_deleted(k_task_t *task)
 396              		.loc 3 397 32 view .LVU126
 397              	.LBB155:
 398:..//kernel/core/include/tos_task.h **** {
 399:..//kernel/core/include/tos_task.h ****     task->state = K_TASK_STATE_DELETED;
 398              		.loc 3 399 5 view .LVU127
 399              		.loc 3 399 17 is_stmt 0 view .LVU128
 400 0082 0823     		movs	r3, #8
 401 0084 84F82030 		strb	r3, [r4, #32]
 402              	.LVL40:
 403              		.loc 3 399 17 view .LVU129
 404              	.LBE155:
 405              	.LBE154:
 184:..//kernel/core/tos_task.c ****     knl_sched();
 406              		.loc 1 184 5 is_stmt 1 view .LVU130
 184:..//kernel/core/tos_task.c ****     knl_sched();
 407              		.loc 1 184 5 view .LVU131
 408 0088 3846     		mov	r0, r7
 409 008a FFF7FEFF 		bl	tos_cpu_cpsr_restore
 410              	.LVL41:
 185:..//kernel/core/tos_task.c **** 
 411              		.loc 1 185 5 view .LVU132
 412 008e FFF7FEFF 		bl	knl_sched
 413              	.LVL42:
 187:..//kernel/core/tos_task.c **** }
 414              		.loc 1 187 5 view .LVU133
 187:..//kernel/core/tos_task.c **** }
 415              		.loc 1 187 12 is_stmt 0 view .LVU134
 416 0092 2846     		mov	r0, r5
 417              	.LVL43:
 418              	.L9:
 188:..//kernel/core/tos_task.c **** 
 419              		.loc 1 188 1 view .LVU135
 420 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 421              	.LVL44:
 422              	.L16:
 170:..//kernel/core/tos_task.c ****     }
 423              		.loc 1 170 9 is_stmt 1 view .LVU136
 424 0096 2046     		mov	r0, r4
 425 0098 FFF7FEFF 		bl	readyqueue_remove
 426              	.LVL45:
 427 009c C5E7     		b	.L11
 428              	.L17:
 173:..//kernel/core/tos_task.c ****     }
 429              		.loc 1 173 9 view .LVU137
 430 009e 2046     		mov	r0, r4
 431 00a0 FFF7FEFF 		bl	tick_list_remove
 432              	.LVL46:
 433 00a4 C6E7     		b	.L12
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 27


 434              	.L18:
 176:..//kernel/core/tos_task.c ****     }
 435              		.loc 1 176 9 view .LVU138
 436 00a6 2046     		mov	r0, r4
 437 00a8 FFF7FEFF 		bl	pend_list_remove
 438              	.LVL47:
 439 00ac C7E7     		b	.L13
 440              	.LVL48:
 441              	.L14:
 157:..//kernel/core/tos_task.c ****     }
 442              		.loc 1 157 16 is_stmt 0 view .LVU139
 443 00ae 40F26D70 		movw	r0, #1901
 444 00b2 EFE7     		b	.L9
 445              		.cfi_endproc
 446              	.LFE115:
 448              		.section	.text.task_destroy_dyn,"ax",%progbits
 449              		.align	1
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu softvfp
 455              	task_destroy_dyn:
 456              	.LVL49:
 457              	.LFB120:
 208:..//kernel/core/tos_task.c **** 
 209:..//kernel/core/tos_task.c **** __KNL__ void task_free_all(void)
 210:..//kernel/core/tos_task.c **** {
 211:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 212:..//kernel/core/tos_task.c ****     k_task_t *task, *tmp;
 213:..//kernel/core/tos_task.c **** 
 214:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 215:..//kernel/core/tos_task.c **** 
 216:..//kernel/core/tos_task.c ****     TOS_LIST_FOR_EACH_ENTRY_SAFE(task, tmp, k_task_t, dead_list, &k_dead_task_list) {
 217:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 218:..//kernel/core/tos_task.c ****         task_free(task);
 219:..//kernel/core/tos_task.c ****     }
 220:..//kernel/core/tos_task.c **** 
 221:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 222:..//kernel/core/tos_task.c **** }
 223:..//kernel/core/tos_task.c **** 
 224:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_create_dyn(k_task_t **task,
 225:..//kernel/core/tos_task.c ****                                                     char *name,
 226:..//kernel/core/tos_task.c ****                                                     k_task_entry_t entry,
 227:..//kernel/core/tos_task.c ****                                                     void *arg,
 228:..//kernel/core/tos_task.c ****                                                     k_prio_t prio,
 229:..//kernel/core/tos_task.c ****                                                     size_t stk_size,
 230:..//kernel/core/tos_task.c ****                                                     k_timeslice_t timeslice)
 231:..//kernel/core/tos_task.c **** {
 232:..//kernel/core/tos_task.c ****     k_err_t err;
 233:..//kernel/core/tos_task.c ****     k_task_t *the_task;
 234:..//kernel/core/tos_task.c ****     k_stack_t *stk_base;
 235:..//kernel/core/tos_task.c **** 
 236:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
 237:..//kernel/core/tos_task.c **** 
 238:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 239:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 240:..//kernel/core/tos_task.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 28


 241:..//kernel/core/tos_task.c ****     if (unlikely(stk_size < sizeof(cpu_context_t))) {
 242:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 243:..//kernel/core/tos_task.c ****     }
 244:..//kernel/core/tos_task.c **** 
 245:..//kernel/core/tos_task.c ****     if (unlikely(prio == K_TASK_PRIO_IDLE)) {
 246:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 247:..//kernel/core/tos_task.c ****     }
 248:..//kernel/core/tos_task.c **** 
 249:..//kernel/core/tos_task.c ****     if (unlikely(prio > K_TASK_PRIO_IDLE)) {
 250:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 251:..//kernel/core/tos_task.c ****     }
 252:..//kernel/core/tos_task.c **** 
 253:..//kernel/core/tos_task.c ****     the_task = tos_mmheap_calloc(1, sizeof(k_task_t));
 254:..//kernel/core/tos_task.c ****     if (!the_task) {
 255:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 256:..//kernel/core/tos_task.c ****     }
 257:..//kernel/core/tos_task.c **** 
 258:..//kernel/core/tos_task.c ****     stk_base = tos_mmheap_alloc(stk_size);
 259:..//kernel/core/tos_task.c ****     if (!stk_base) {
 260:..//kernel/core/tos_task.c ****         tos_mmheap_free(the_task);
 261:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 262:..//kernel/core/tos_task.c ****     }
 263:..//kernel/core/tos_task.c **** 
 264:..//kernel/core/tos_task.c ****     the_task->stk_base = stk_base;
 265:..//kernel/core/tos_task.c ****     err = tos_task_create(the_task, name, entry, arg, prio, stk_base, stk_size, timeslice);
 266:..//kernel/core/tos_task.c ****     if (err != K_ERR_NONE) {
 267:..//kernel/core/tos_task.c ****         task_free(the_task);
 268:..//kernel/core/tos_task.c ****         return err;
 269:..//kernel/core/tos_task.c ****     }
 270:..//kernel/core/tos_task.c **** 
 271:..//kernel/core/tos_task.c ****     knl_object_alloc_set_dynamic(&the_task->knl_obj);
 272:..//kernel/core/tos_task.c **** 
 273:..//kernel/core/tos_task.c ****     *task = the_task;
 274:..//kernel/core/tos_task.c **** 
 275:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 276:..//kernel/core/tos_task.c **** }
 277:..//kernel/core/tos_task.c **** 
 278:..//kernel/core/tos_task.c **** __STATIC__ k_err_t task_destroy_dyn(k_task_t *task)
 279:..//kernel/core/tos_task.c **** {
 458              		.loc 1 279 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		.loc 1 279 1 is_stmt 0 view .LVU141
 463 0000 38B5     		push	{r3, r4, r5, lr}
 464              	.LCFI3:
 465              		.cfi_def_cfa_offset 16
 466              		.cfi_offset 3, -16
 467              		.cfi_offset 4, -12
 468              		.cfi_offset 5, -8
 469              		.cfi_offset 14, -4
 470 0002 0446     		mov	r4, r0
 280:..//kernel/core/tos_task.c ****     k_err_t err;
 471              		.loc 1 280 5 is_stmt 1 view .LVU142
 281:..//kernel/core/tos_task.c **** 
 282:..//kernel/core/tos_task.c ****     tos_knl_sched_lock();
 472              		.loc 1 282 5 view .LVU143
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 29


 473 0004 FFF7FEFF 		bl	tos_knl_sched_lock
 474              	.LVL50:
 283:..//kernel/core/tos_task.c **** 
 284:..//kernel/core/tos_task.c ****     err = task_do_destroy(task);
 475              		.loc 1 284 5 view .LVU144
 476              		.loc 1 284 11 is_stmt 0 view .LVU145
 477 0008 2046     		mov	r0, r4
 478 000a FFF7FEFF 		bl	task_do_destroy
 479              	.LVL51:
 285:..//kernel/core/tos_task.c ****     if (err != K_ERR_NONE) {
 480              		.loc 1 285 5 is_stmt 1 view .LVU146
 481              		.loc 1 285 8 is_stmt 0 view .LVU147
 482 000e 0546     		mov	r5, r0
 483 0010 78B9     		cbnz	r0, .L25
 286:..//kernel/core/tos_task.c ****         tos_knl_sched_unlock();
 287:..//kernel/core/tos_task.c ****         return err;
 288:..//kernel/core/tos_task.c ****     }
 289:..//kernel/core/tos_task.c **** 
 290:..//kernel/core/tos_task.c ****     if (knl_is_self(task)) { // we are destroying ourself
 484              		.loc 1 290 5 is_stmt 1 view .LVU148
 485              		.loc 1 290 9 is_stmt 0 view .LVU149
 486 0012 2046     		mov	r0, r4
 487              	.LVL52:
 488              		.loc 1 290 9 view .LVU150
 489 0014 FFF7FEFF 		bl	knl_is_self
 490              	.LVL53:
 491              		.loc 1 290 8 view .LVU151
 492 0018 70B1     		cbz	r0, .L22
 291:..//kernel/core/tos_task.c ****         // in this situation, we cannot just free ourself's task stack because we are using it
 292:..//kernel/core/tos_task.c ****         // we count on the idle task to free the memory
 293:..//kernel/core/tos_task.c ****         tos_list_add(&task->dead_list, &k_dead_task_list);
 493              		.loc 1 293 9 is_stmt 1 view .LVU152
 494 001a 04F12C02 		add	r2, r4, #44
 495              	.LVL54:
 496              	.LBB156:
 497              	.LBI156:
 105:..//kernel/core/include/tos_list.h **** {
 498              		.loc 2 105 32 view .LVU153
 499              	.LBB157:
 107:..//kernel/core/include/tos_list.h **** }
 500              		.loc 2 107 5 view .LVU154
 107:..//kernel/core/include/tos_list.h **** }
 501              		.loc 2 107 31 is_stmt 0 view .LVU155
 502 001e 084B     		ldr	r3, .L26
 503 0020 1968     		ldr	r1, [r3]
 504              	.LVL55:
 505              	.LBB158:
 506              	.LBI158:
  80:..//kernel/core/include/tos_list.h **** {
 507              		.loc 2 80 24 is_stmt 1 view .LVU156
 508              	.LBB159:
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 509              		.loc 2 82 5 view .LVU157
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 510              		.loc 2 82 16 is_stmt 0 view .LVU158
 511 0022 4A60     		str	r2, [r1, #4]
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 30


 512              		.loc 2 83 5 is_stmt 1 view .LVU159
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 513              		.loc 2 83 16 is_stmt 0 view .LVU160
 514 0024 E162     		str	r1, [r4, #44]
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 515              		.loc 2 84 5 is_stmt 1 view .LVU161
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 516              		.loc 2 84 16 is_stmt 0 view .LVU162
 517 0026 2363     		str	r3, [r4, #48]
  85:..//kernel/core/include/tos_list.h **** }
 518              		.loc 2 85 5 is_stmt 1 view .LVU163
  85:..//kernel/core/include/tos_list.h **** }
 519              		.loc 2 85 16 is_stmt 0 view .LVU164
 520 0028 1A60     		str	r2, [r3]
 521              	.LVL56:
 522              	.L23:
  85:..//kernel/core/include/tos_list.h **** }
 523              		.loc 2 85 16 view .LVU165
 524              	.LBE159:
 525              	.LBE158:
 526              	.LBE157:
 527              	.LBE156:
 294:..//kernel/core/tos_task.c ****     } else {
 295:..//kernel/core/tos_task.c ****         task_free(task);
 296:..//kernel/core/tos_task.c ****     }
 297:..//kernel/core/tos_task.c **** 
 298:..//kernel/core/tos_task.c ****     tos_knl_sched_unlock();
 528              		.loc 1 298 5 is_stmt 1 view .LVU166
 529 002a FFF7FEFF 		bl	tos_knl_sched_unlock
 530              	.LVL57:
 299:..//kernel/core/tos_task.c **** 
 300:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 531              		.loc 1 300 5 view .LVU167
 532              	.L21:
 301:..//kernel/core/tos_task.c **** }
 533              		.loc 1 301 1 is_stmt 0 view .LVU168
 534 002e 2846     		mov	r0, r5
 535 0030 38BD     		pop	{r3, r4, r5, pc}
 536              	.LVL58:
 537              	.L25:
 286:..//kernel/core/tos_task.c ****         return err;
 538              		.loc 1 286 9 is_stmt 1 view .LVU169
 539 0032 FFF7FEFF 		bl	tos_knl_sched_unlock
 540              	.LVL59:
 287:..//kernel/core/tos_task.c ****     }
 541              		.loc 1 287 9 view .LVU170
 287:..//kernel/core/tos_task.c ****     }
 542              		.loc 1 287 16 is_stmt 0 view .LVU171
 543 0036 FAE7     		b	.L21
 544              	.L22:
 295:..//kernel/core/tos_task.c ****     }
 545              		.loc 1 295 9 is_stmt 1 view .LVU172
 546 0038 2046     		mov	r0, r4
 547 003a FFF7FEFF 		bl	task_free
 548              	.LVL60:
 549 003e F4E7     		b	.L23
 550              	.L27:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 31


 551              		.align	2
 552              	.L26:
 553 0040 00000000 		.word	k_dead_task_list
 554              		.cfi_endproc
 555              	.LFE120:
 557              		.section	.text.task_destroy_static,"ax",%progbits
 558              		.align	1
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 562              		.fpu softvfp
 564              	task_destroy_static:
 565              	.LVL61:
 566              	.LFB116:
 191:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 567              		.loc 1 191 1 view -0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 191:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 571              		.loc 1 191 1 is_stmt 0 view .LVU174
 572 0000 08B5     		push	{r3, lr}
 573              	.LCFI4:
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 3, -8
 576              		.cfi_offset 14, -4
 193:..//kernel/core/tos_task.c ****         return K_ERR_OBJ_INVALID_ALLOC_TYPE;
 577              		.loc 1 193 5 is_stmt 1 view .LVU175
 578              	.LVL62:
 579              	.LBB160:
 580              	.LBI160:
 202:..//kernel/core/include/tos_sys.h **** }
 203:..//kernel/core/include/tos_sys.h **** 
 204:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_alloc_set_dynamic(knl_obj_t *knl_obj)
 205:..//kernel/core/include/tos_sys.h **** {
 206:..//kernel/core/include/tos_sys.h ****     knl_obj->alloc_type = KNL_OBJ_ALLOC_TYPE_DYNAMIC;
 207:..//kernel/core/include/tos_sys.h **** }
 208:..//kernel/core/include/tos_sys.h **** 
 209:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_alloc_set_static(knl_obj_t *knl_obj)
 210:..//kernel/core/include/tos_sys.h **** {
 211:..//kernel/core/include/tos_sys.h ****     knl_obj->alloc_type = KNL_OBJ_ALLOC_TYPE_STATIC;
 212:..//kernel/core/include/tos_sys.h **** }
 213:..//kernel/core/include/tos_sys.h **** 
 214:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ int knl_object_alloc_is_dynamic(knl_obj_t *knl_obj)
 215:..//kernel/core/include/tos_sys.h **** {
 216:..//kernel/core/include/tos_sys.h ****     return knl_obj->alloc_type == KNL_OBJ_ALLOC_TYPE_DYNAMIC;
 217:..//kernel/core/include/tos_sys.h **** }
 218:..//kernel/core/include/tos_sys.h **** 
 219:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ int knl_object_alloc_is_static(knl_obj_t *knl_obj)
 581              		.loc 4 219 31 view .LVU176
 582              	.LBB161:
 220:..//kernel/core/include/tos_sys.h **** {
 221:..//kernel/core/include/tos_sys.h ****     return knl_obj->alloc_type == KNL_OBJ_ALLOC_TYPE_STATIC;
 583              		.loc 4 221 5 view .LVU177
 584              		.loc 4 221 19 is_stmt 0 view .LVU178
 585 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 586              	.LVL63:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 32


 587              		.loc 4 221 19 view .LVU179
 588              	.LBE161:
 589              	.LBE160:
 193:..//kernel/core/tos_task.c ****         return K_ERR_OBJ_INVALID_ALLOC_TYPE;
 590              		.loc 1 193 8 view .LVU180
 591 0004 012B     		cmp	r3, #1
 592 0006 02D0     		beq	.L32
 194:..//kernel/core/tos_task.c ****     }
 593              		.loc 1 194 16 view .LVU181
 594 0008 40F24E40 		movw	r0, #1102
 595              	.LVL64:
 596              	.L29:
 199:..//kernel/core/tos_task.c **** 
 597              		.loc 1 199 1 view .LVU182
 598 000c 08BD     		pop	{r3, pc}
 599              	.LVL65:
 600              	.L32:
 198:..//kernel/core/tos_task.c **** }
 601              		.loc 1 198 5 is_stmt 1 view .LVU183
 198:..//kernel/core/tos_task.c **** }
 602              		.loc 1 198 12 is_stmt 0 view .LVU184
 603 000e FFF7FEFF 		bl	task_do_destroy
 604              	.LVL66:
 198:..//kernel/core/tos_task.c **** }
 605              		.loc 1 198 12 view .LVU185
 606 0012 FBE7     		b	.L29
 607              		.cfi_endproc
 608              	.LFE116:
 610              		.section	.text.task_highest_pending_prio_get,"ax",%progbits
 611              		.align	1
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 615              		.fpu softvfp
 617              	task_highest_pending_prio_get:
 618              	.LVL67:
 619              	.LFB112:
  58:..//kernel/core/tos_task.c ****     k_mutex_t *mutex;
 620              		.loc 1 58 1 is_stmt 1 view -0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
  58:..//kernel/core/tos_task.c ****     k_mutex_t *mutex;
 624              		.loc 1 58 1 is_stmt 0 view .LVU187
 625 0000 70B5     		push	{r4, r5, r6, lr}
 626              	.LCFI5:
 627              		.cfi_def_cfa_offset 16
 628              		.cfi_offset 4, -16
 629              		.cfi_offset 5, -12
 630              		.cfi_offset 6, -8
 631              		.cfi_offset 14, -4
 632 0002 0546     		mov	r5, r0
  59:..//kernel/core/tos_task.c ****     k_prio_t prio, highest_prio_pending = K_TASK_PRIO_INVALID;
 633              		.loc 1 59 5 is_stmt 1 view .LVU188
  60:..//kernel/core/tos_task.c **** 
 634              		.loc 1 60 5 view .LVU189
 635              	.LVL68:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 33


  62:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
 636              		.loc 1 62 5 view .LVU190
 637 0004 846D     		ldr	r4, [r0, #88]
 638 0006 183C     		subs	r4, r4, #24
 639              	.LVL69:
  60:..//kernel/core/tos_task.c **** 
 640              		.loc 1 60 20 is_stmt 0 view .LVU191
 641 0008 0A26     		movs	r6, #10
  62:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
 642              		.loc 1 62 5 view .LVU192
 643 000a 01E0     		b	.L34
 644              	.LVL70:
 645              	.L35:
  62:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
 646              		.loc 1 62 5 discriminator 2 view .LVU193
 647 000c A469     		ldr	r4, [r4, #24]
 648              	.LVL71:
  62:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
 649              		.loc 1 62 5 discriminator 2 view .LVU194
 650 000e 183C     		subs	r4, r4, #24
 651              	.LVL72:
 652              	.L34:
  62:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
 653              		.loc 1 62 5 discriminator 1 view .LVU195
 654 0010 04F11803 		add	r3, r4, #24
 655 0014 05F15802 		add	r2, r5, #88
 656 0018 9342     		cmp	r3, r2
 657 001a 06D0     		beq	.L39
  63:..//kernel/core/tos_task.c ****         if (prio < highest_prio_pending) {
 658              		.loc 1 63 9 is_stmt 1 view .LVU196
  63:..//kernel/core/tos_task.c ****         if (prio < highest_prio_pending) {
 659              		.loc 1 63 16 is_stmt 0 view .LVU197
 660 001c 201D     		adds	r0, r4, #4
 661 001e FFF7FEFF 		bl	pend_highest_pending_prio_get
 662              	.LVL73:
  64:..//kernel/core/tos_task.c ****             highest_prio_pending = prio;
 663              		.loc 1 64 9 is_stmt 1 view .LVU198
  64:..//kernel/core/tos_task.c ****             highest_prio_pending = prio;
 664              		.loc 1 64 12 is_stmt 0 view .LVU199
 665 0022 8642     		cmp	r6, r0
 666 0024 F2D9     		bls	.L35
  65:..//kernel/core/tos_task.c ****         }
 667              		.loc 1 65 34 view .LVU200
 668 0026 0646     		mov	r6, r0
 669              	.LVL74:
  65:..//kernel/core/tos_task.c ****         }
 670              		.loc 1 65 34 view .LVU201
 671 0028 F0E7     		b	.L35
 672              	.LVL75:
 673              	.L39:
  69:..//kernel/core/tos_task.c **** }
 674              		.loc 1 69 5 is_stmt 1 view .LVU202
  70:..//kernel/core/tos_task.c **** 
 675              		.loc 1 70 1 is_stmt 0 view .LVU203
 676 002a 3046     		mov	r0, r6
 677 002c 70BD     		pop	{r4, r5, r6, pc}
  70:..//kernel/core/tos_task.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 34


 678              		.loc 1 70 1 view .LVU204
 679              		.cfi_endproc
 680              	.LFE112:
 682              		.section	.text.tos_task_create,"ax",%progbits
 683              		.align	1
 684              		.global	tos_task_create
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu softvfp
 690              	tos_task_create:
 691              	.LVL76:
 692              	.LFB114:
  90:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 693              		.loc 1 90 1 is_stmt 1 view -0
 694              		.cfi_startproc
 695              		@ args = 16, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
  90:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 697              		.loc 1 90 1 is_stmt 0 view .LVU206
 698 0000 2DE9F04E 		push	{r4, r5, r6, r7, r9, r10, fp, lr}
 699              	.LCFI6:
 700              		.cfi_def_cfa_offset 32
 701              		.cfi_offset 4, -32
 702              		.cfi_offset 5, -28
 703              		.cfi_offset 6, -24
 704              		.cfi_offset 7, -20
 705              		.cfi_offset 9, -16
 706              		.cfi_offset 10, -12
 707              		.cfi_offset 11, -8
 708              		.cfi_offset 14, -4
 709 0004 82B0     		sub	sp, sp, #8
 710              	.LCFI7:
 711              		.cfi_def_cfa_offset 40
 712 0006 0446     		mov	r4, r0
 713 0008 8B46     		mov	fp, r1
 714 000a 1646     		mov	r6, r2
 715 000c 9A46     		mov	r10, r3
 716 000e 9DF82890 		ldrb	r9, [sp, #40]	@ zero_extendqisi2
 717 0012 0C9F     		ldr	r7, [sp, #48]
  91:..//kernel/core/tos_task.c **** 
 718              		.loc 1 91 5 is_stmt 1 view .LVU207
 719              	.LVL77:
  93:..//kernel/core/tos_task.c **** 
 720              		.loc 1 93 5 view .LVU208
  93:..//kernel/core/tos_task.c **** 
 721              		.loc 1 93 5 view .LVU209
 722 0014 FFF7FEFF 		bl	knl_is_inirq
 723              	.LVL78:
  93:..//kernel/core/tos_task.c **** 
 724              		.loc 1 93 5 is_stmt 0 view .LVU210
 725 0018 0028     		cmp	r0, #0
 726 001a 6ED1     		bne	.L43
  95:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 727              		.loc 1 95 5 is_stmt 1 view .LVU211
  95:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 728              		.loc 1 95 5 view .LVU212
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 35


 729 001c 002C     		cmp	r4, #0
 730 001e 6FD0     		beq	.L44
  96:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(stk_base);
 731              		.loc 1 96 5 view .LVU213
  96:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(stk_base);
 732              		.loc 1 96 5 view .LVU214
 733 0020 002E     		cmp	r6, #0
 734 0022 70D0     		beq	.L45
  97:..//kernel/core/tos_task.c **** 
 735              		.loc 1 97 5 view .LVU215
  97:..//kernel/core/tos_task.c **** 
 736              		.loc 1 97 5 view .LVU216
 737 0024 0B9B     		ldr	r3, [sp, #44]
 738 0026 002B     		cmp	r3, #0
 739 0028 70D0     		beq	.L46
 100:..//kernel/core/tos_task.c **** 
 740              		.loc 1 100 5 view .LVU217
 100:..//kernel/core/tos_task.c **** 
 741              		.loc 1 100 5 view .LVU218
 742              	.LVL79:
 743              	.LBB162:
 744              	.LBI162:
 182:..//kernel/core/include/tos_sys.h **** {
 745              		.loc 4 182 31 view .LVU219
 746              	.LBB163:
 184:..//kernel/core/include/tos_sys.h **** }
 747              		.loc 4 184 5 view .LVU220
 184:..//kernel/core/include/tos_sys.h **** }
 748              		.loc 4 184 19 is_stmt 0 view .LVU221
 749 002a E288     		ldrh	r2, [r4, #6]
 750              	.LVL80:
 184:..//kernel/core/include/tos_sys.h **** }
 751              		.loc 4 184 19 view .LVU222
 752              	.LBE163:
 753              	.LBE162:
 100:..//kernel/core/tos_task.c **** 
 754              		.loc 1 100 5 view .LVU223
 755 002c 4DF6D823 		movw	r3, #56024
 756 0030 9A42     		cmp	r2, r3
 757 0032 6ED0     		beq	.L47
 102:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 758              		.loc 1 102 5 is_stmt 1 view .LVU224
 102:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 759              		.loc 1 102 8 is_stmt 0 view .LVU225
 760 0034 3F2F     		cmp	r7, #63
 761 0036 6FD9     		bls	.L48
 106:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 762              		.loc 1 106 5 is_stmt 1 view .LVU226
 106:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 763              		.loc 1 106 8 is_stmt 0 view .LVU227
 764 0038 B9F1090F 		cmp	r9, #9
 765 003c 51D0     		beq	.L53
 766              	.L42:
 110:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 767              		.loc 1 110 5 is_stmt 1 view .LVU228
 110:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 768              		.loc 1 110 8 is_stmt 0 view .LVU229
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 36


 769 003e B9F1090F 		cmp	r9, #9
 770 0042 6CD8     		bhi	.L50
 114:..//kernel/core/tos_task.c ****     tos_list_add(&task->stat_list, &k_stat_list);
 771              		.loc 1 114 5 is_stmt 1 view .LVU230
 772              	.LVL81:
 773              	.LBB164:
 774              	.LBI164:
  20:..//kernel/core/tos_task.c **** {
 775              		.loc 1 20 24 view .LVU231
 776              	.LBB165:
  23:..//kernel/core/tos_task.c **** 
 777              		.loc 1 23 5 view .LVU232
  23:..//kernel/core/tos_task.c **** 
 778              		.loc 1 23 5 is_stmt 0 view .LVU233
 779              	.LBE165:
 780              	.LBE164:
 201:..//kernel/core/include/tos_sys.h **** }
 781              		.loc 4 201 5 is_stmt 1 view .LVU234
 782              	.LBB176:
 783              	.LBB174:
  25:..//kernel/core/tos_task.c **** #endif
 784              		.loc 1 25 5 view .LVU235
 785 0044 04F12C03 		add	r3, r4, #44
 786              	.LVL82:
 787              	.LBB166:
 788              	.LBI166:
  99:..//kernel/core/include/tos_list.h **** {
 789              		.loc 2 99 32 view .LVU236
 790              	.LBB167:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 791              		.loc 2 101 5 view .LVU237
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 792              		.loc 2 101 16 is_stmt 0 view .LVU238
 793 0048 E362     		str	r3, [r4, #44]
 102:..//kernel/core/include/tos_list.h **** }
 794              		.loc 2 102 5 is_stmt 1 view .LVU239
 102:..//kernel/core/include/tos_list.h **** }
 795              		.loc 2 102 16 is_stmt 0 view .LVU240
 796 004a 2363     		str	r3, [r4, #48]
 797              	.LVL83:
 102:..//kernel/core/include/tos_list.h **** }
 798              		.loc 2 102 16 view .LVU241
 799              	.LBE167:
 800              	.LBE166:
  27:..//kernel/core/tos_task.c ****     tos_list_init(&task->tick_list);
 801              		.loc 1 27 5 is_stmt 1 view .LVU242
 802 004c 04F13402 		add	r2, r4, #52
 803              	.LVL84:
  27:..//kernel/core/tos_task.c ****     tos_list_init(&task->tick_list);
 804              		.loc 1 27 5 is_stmt 0 view .LVU243
 805              	.LBE174:
 806              	.LBE176:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 807              		.loc 2 101 5 is_stmt 1 view .LVU244
 102:..//kernel/core/include/tos_list.h **** }
 808              		.loc 2 102 5 view .LVU245
 809              	.LBB177:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 37


 810              	.LBB175:
  28:..//kernel/core/tos_task.c ****     tos_list_init(&task->pend_list);
 811              		.loc 1 28 5 view .LVU246
 812 0050 04F14803 		add	r3, r4, #72
 813              	.LVL85:
 814              	.LBB168:
 815              	.LBI168:
  99:..//kernel/core/include/tos_list.h **** {
 816              		.loc 2 99 32 view .LVU247
 817              	.LBB169:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 818              		.loc 2 101 5 view .LVU248
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 819              		.loc 2 101 16 is_stmt 0 view .LVU249
 820 0054 A364     		str	r3, [r4, #72]
 102:..//kernel/core/include/tos_list.h **** }
 821              		.loc 2 102 5 is_stmt 1 view .LVU250
 102:..//kernel/core/include/tos_list.h **** }
 822              		.loc 2 102 16 is_stmt 0 view .LVU251
 823 0056 E364     		str	r3, [r4, #76]
 824              	.LVL86:
 102:..//kernel/core/include/tos_list.h **** }
 825              		.loc 2 102 16 view .LVU252
 826              	.LBE169:
 827              	.LBE168:
  29:..//kernel/core/tos_task.c **** 
 828              		.loc 1 29 5 is_stmt 1 view .LVU253
 829 0058 04F15003 		add	r3, r4, #80
 830              	.LVL87:
 831              	.LBB170:
 832              	.LBI170:
  99:..//kernel/core/include/tos_list.h **** {
 833              		.loc 2 99 32 view .LVU254
 834              	.LBB171:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 835              		.loc 2 101 5 view .LVU255
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 836              		.loc 2 101 16 is_stmt 0 view .LVU256
 837 005c 2365     		str	r3, [r4, #80]
 102:..//kernel/core/include/tos_list.h **** }
 838              		.loc 2 102 5 is_stmt 1 view .LVU257
 102:..//kernel/core/include/tos_list.h **** }
 839              		.loc 2 102 16 is_stmt 0 view .LVU258
 840 005e 6365     		str	r3, [r4, #84]
 841              	.LVL88:
 102:..//kernel/core/include/tos_list.h **** }
 842              		.loc 2 102 16 view .LVU259
 843              	.LBE171:
 844              	.LBE170:
  32:..//kernel/core/tos_task.c ****     task->prio_pending  = K_TASK_PRIO_INVALID;
 845              		.loc 1 32 5 is_stmt 1 view .LVU260
 846 0060 04F15803 		add	r3, r4, #88
 847              	.LVL89:
 848              	.LBB172:
 849              	.LBI172:
  99:..//kernel/core/include/tos_list.h **** {
 850              		.loc 2 99 32 view .LVU261
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 38


 851              	.LBB173:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 852              		.loc 2 101 5 view .LVU262
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 853              		.loc 2 101 16 is_stmt 0 view .LVU263
 854 0064 A365     		str	r3, [r4, #88]
 102:..//kernel/core/include/tos_list.h **** }
 855              		.loc 2 102 5 is_stmt 1 view .LVU264
 102:..//kernel/core/include/tos_list.h **** }
 856              		.loc 2 102 16 is_stmt 0 view .LVU265
 857 0066 E365     		str	r3, [r4, #92]
 858              	.LVL90:
 102:..//kernel/core/include/tos_list.h **** }
 859              		.loc 2 102 16 view .LVU266
 860              	.LBE173:
 861              	.LBE172:
  33:..//kernel/core/tos_task.c **** #endif
 862              		.loc 1 33 5 is_stmt 1 view .LVU267
  33:..//kernel/core/tos_task.c **** #endif
 863              		.loc 1 33 25 is_stmt 0 view .LVU268
 864 0068 0A23     		movs	r3, #10
 865 006a 84F86030 		strb	r3, [r4, #96]
  36:..//kernel/core/tos_task.c ****     task->pending_obj   = (pend_obj_t *)K_NULL;
 866              		.loc 1 36 5 is_stmt 1 view .LVU269
  36:..//kernel/core/tos_task.c ****     task->pending_obj   = (pend_obj_t *)K_NULL;
 867              		.loc 1 36 25 is_stmt 0 view .LVU270
 868 006e 0025     		movs	r5, #0
 869 0070 84F86850 		strb	r5, [r4, #104]
  37:..//kernel/core/tos_task.c **** 
 870              		.loc 1 37 5 is_stmt 1 view .LVU271
  37:..//kernel/core/tos_task.c **** 
 871              		.loc 1 37 25 is_stmt 0 view .LVU272
 872 0074 6566     		str	r5, [r4, #100]
  40:..//kernel/core/tos_task.c **** #endif
 873              		.loc 1 40 5 is_stmt 1 view .LVU273
  40:..//kernel/core/tos_task.c **** #endif
 874              		.loc 1 40 25 is_stmt 0 view .LVU274
 875 0076 E566     		str	r5, [r4, #108]
  44:..//kernel/core/tos_task.c ****     task->mail_size     = 0;
 876              		.loc 1 44 5 is_stmt 1 view .LVU275
  44:..//kernel/core/tos_task.c ****     task->mail_size     = 0;
 877              		.loc 1 44 25 is_stmt 0 view .LVU276
 878 0078 2567     		str	r5, [r4, #112]
  45:..//kernel/core/tos_task.c **** #endif
 879              		.loc 1 45 5 is_stmt 1 view .LVU277
  45:..//kernel/core/tos_task.c **** #endif
 880              		.loc 1 45 25 is_stmt 0 view .LVU278
 881 007a 6567     		str	r5, [r4, #116]
  48:..//kernel/core/tos_task.c **** }
 882              		.loc 1 48 5 is_stmt 1 view .LVU279
 883              	.LVL91:
  48:..//kernel/core/tos_task.c **** }
 884              		.loc 1 48 5 is_stmt 0 view .LVU280
 885              	.LBE175:
 886              	.LBE177:
 194:..//kernel/core/include/tos_sys.h **** }
 887              		.loc 4 194 5 is_stmt 1 view .LVU281
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 39


 115:..//kernel/core/tos_task.c **** 
 888              		.loc 1 115 5 view .LVU282
 889              	.LBB178:
 890              	.LBI178:
 105:..//kernel/core/include/tos_list.h **** {
 891              		.loc 2 105 32 view .LVU283
 892              	.LBB179:
 107:..//kernel/core/include/tos_list.h **** }
 893              		.loc 2 107 5 view .LVU284
 107:..//kernel/core/include/tos_list.h **** }
 894              		.loc 2 107 31 is_stmt 0 view .LVU285
 895 007c 294B     		ldr	r3, .L55
 896 007e 1968     		ldr	r1, [r3]
 897              	.LVL92:
 898              	.LBB180:
 899              	.LBI180:
  80:..//kernel/core/include/tos_list.h **** {
 900              		.loc 2 80 24 is_stmt 1 view .LVU286
 901              	.LBB181:
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 902              		.loc 2 82 5 view .LVU287
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 903              		.loc 2 82 16 is_stmt 0 view .LVU288
 904 0080 4A60     		str	r2, [r1, #4]
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 905              		.loc 2 83 5 is_stmt 1 view .LVU289
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 906              		.loc 2 83 16 is_stmt 0 view .LVU290
 907 0082 6163     		str	r1, [r4, #52]
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 908              		.loc 2 84 5 is_stmt 1 view .LVU291
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 909              		.loc 2 84 16 is_stmt 0 view .LVU292
 910 0084 A363     		str	r3, [r4, #56]
  85:..//kernel/core/include/tos_list.h **** }
 911              		.loc 2 85 5 is_stmt 1 view .LVU293
  85:..//kernel/core/include/tos_list.h **** }
 912              		.loc 2 85 16 is_stmt 0 view .LVU294
 913 0086 1A60     		str	r2, [r3]
 914              	.LVL93:
  85:..//kernel/core/include/tos_list.h **** }
 915              		.loc 2 85 16 view .LVU295
 916              	.LBE181:
 917              	.LBE180:
 918              	.LBE179:
 919              	.LBE178:
 117:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 920              		.loc 1 117 5 is_stmt 1 view .LVU296
 921              	.LBB182:
 922              	.LBI182:
 187:..//kernel/core/include/tos_sys.h **** {
 923              		.loc 4 187 32 view .LVU297
 924              	.LBB183:
 189:..//kernel/core/include/tos_sys.h **** }
 925              		.loc 4 189 5 view .LVU298
 189:..//kernel/core/include/tos_sys.h **** }
 926              		.loc 4 189 19 is_stmt 0 view .LVU299
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 40


 927 0088 4DF6D823 		movw	r3, #56024
 928 008c E380     		strh	r3, [r4, #6]	@ movhi
 929              	.LVL94:
 189:..//kernel/core/include/tos_sys.h **** }
 930              		.loc 4 189 19 view .LVU300
 931              	.LBE183:
 932              	.LBE182:
 119:..//kernel/core/tos_task.c **** #endif
 933              		.loc 1 119 5 is_stmt 1 view .LVU301
 934              	.LBB184:
 935              	.LBI184:
 209:..//kernel/core/include/tos_sys.h **** {
 936              		.loc 4 209 32 view .LVU302
 937              	.LBB185:
 211:..//kernel/core/include/tos_sys.h **** }
 938              		.loc 4 211 5 view .LVU303
 211:..//kernel/core/include/tos_sys.h **** }
 939              		.loc 4 211 25 is_stmt 0 view .LVU304
 940 008e 0123     		movs	r3, #1
 941 0090 2371     		strb	r3, [r4, #4]
 942              	.LVL95:
 211:..//kernel/core/include/tos_sys.h **** }
 943              		.loc 4 211 25 view .LVU305
 944              	.LBE185:
 945              	.LBE184:
 122:..//kernel/core/tos_task.c ****     task->entry     = entry;
 946              		.loc 1 122 5 is_stmt 1 view .LVU306
 122:..//kernel/core/tos_task.c ****     task->entry     = entry;
 947              		.loc 1 122 23 is_stmt 0 view .LVU307
 948 0092 0097     		str	r7, [sp]
 949 0094 0B9B     		ldr	r3, [sp, #44]
 950 0096 244A     		ldr	r2, .L55+4
 951 0098 5146     		mov	r1, r10
 952 009a 3046     		mov	r0, r6
 953 009c FFF7FEFF 		bl	cpu_task_stk_init
 954              	.LVL96:
 122:..//kernel/core/tos_task.c ****     task->entry     = entry;
 955              		.loc 1 122 21 view .LVU308
 956 00a0 2060     		str	r0, [r4]
 123:..//kernel/core/tos_task.c ****     task->arg       = arg;
 957              		.loc 1 123 5 is_stmt 1 view .LVU309
 123:..//kernel/core/tos_task.c ****     task->arg       = arg;
 958              		.loc 1 123 21 is_stmt 0 view .LVU310
 959 00a2 A661     		str	r6, [r4, #24]
 124:..//kernel/core/tos_task.c ****     task->prio      = prio;
 960              		.loc 1 124 5 is_stmt 1 view .LVU311
 124:..//kernel/core/tos_task.c ****     task->prio      = prio;
 961              		.loc 1 124 21 is_stmt 0 view .LVU312
 962 00a4 C4F81CA0 		str	r10, [r4, #28]
 125:..//kernel/core/tos_task.c ****     task->stk_base  = stk_base;
 963              		.loc 1 125 5 is_stmt 1 view .LVU313
 125:..//kernel/core/tos_task.c ****     task->stk_base  = stk_base;
 964              		.loc 1 125 21 is_stmt 0 view .LVU314
 965 00a8 84F82190 		strb	r9, [r4, #33]
 126:..//kernel/core/tos_task.c ****     task->stk_size  = stk_size;
 966              		.loc 1 126 5 is_stmt 1 view .LVU315
 126:..//kernel/core/tos_task.c ****     task->stk_size  = stk_size;
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 41


 967              		.loc 1 126 21 is_stmt 0 view .LVU316
 968 00ac 0B9B     		ldr	r3, [sp, #44]
 969 00ae 6362     		str	r3, [r4, #36]
 127:..//kernel/core/tos_task.c ****     strncpy(task->name, name, K_TASK_NAME_MAX);
 970              		.loc 1 127 5 is_stmt 1 view .LVU317
 127:..//kernel/core/tos_task.c ****     strncpy(task->name, name, K_TASK_NAME_MAX);
 971              		.loc 1 127 21 is_stmt 0 view .LVU318
 972 00b0 A762     		str	r7, [r4, #40]
 128:..//kernel/core/tos_task.c **** 
 973              		.loc 1 128 5 is_stmt 1 view .LVU319
 974 00b2 1022     		movs	r2, #16
 975 00b4 5946     		mov	r1, fp
 976 00b6 04F10800 		add	r0, r4, #8
 977 00ba FFF7FEFF 		bl	strncpy
 978              	.LVL97:
 140:..//kernel/core/tos_task.c ****     task_state_set_ready(task);
 979              		.loc 1 140 5 view .LVU320
 140:..//kernel/core/tos_task.c ****     task_state_set_ready(task);
 980              		.loc 1 140 5 view .LVU321
 981 00be FFF7FEFF 		bl	tos_cpu_cpsr_save
 982              	.LVL98:
 983 00c2 0646     		mov	r6, r0
 984              	.LVL99:
 141:..//kernel/core/tos_task.c ****     readyqueue_add_tail(task);
 985              		.loc 1 141 5 view .LVU322
 986              	.LBB186:
 987              	.LBI186:
 392:..//kernel/core/include/tos_task.h **** {
 988              		.loc 3 392 32 view .LVU323
 989              	.LBB187:
 394:..//kernel/core/include/tos_task.h **** }
 990              		.loc 3 394 5 view .LVU324
 394:..//kernel/core/include/tos_task.h **** }
 991              		.loc 3 394 17 is_stmt 0 view .LVU325
 992 00c4 84F82050 		strb	r5, [r4, #32]
 993              	.LVL100:
 394:..//kernel/core/include/tos_task.h **** }
 994              		.loc 3 394 17 view .LVU326
 995              	.LBE187:
 996              	.LBE186:
 142:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 997              		.loc 1 142 5 is_stmt 1 view .LVU327
 998 00c8 2046     		mov	r0, r4
 999              	.LVL101:
 142:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 1000              		.loc 1 142 5 is_stmt 0 view .LVU328
 1001 00ca FFF7FEFF 		bl	readyqueue_add_tail
 1002              	.LVL102:
 143:..//kernel/core/tos_task.c **** 
 1003              		.loc 1 143 5 is_stmt 1 view .LVU329
 143:..//kernel/core/tos_task.c **** 
 1004              		.loc 1 143 5 view .LVU330
 1005 00ce 3046     		mov	r0, r6
 1006 00d0 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1007              	.LVL103:
 145:..//kernel/core/tos_task.c ****         knl_sched();
 1008              		.loc 1 145 5 view .LVU331
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 42


 145:..//kernel/core/tos_task.c ****         knl_sched();
 1009              		.loc 1 145 9 is_stmt 0 view .LVU332
 1010 00d4 FFF7FEFF 		bl	tos_knl_is_running
 1011              	.LVL104:
 145:..//kernel/core/tos_task.c ****         knl_sched();
 1012              		.loc 1 145 8 view .LVU333
 1013 00d8 58B9     		cbnz	r0, .L54
 149:..//kernel/core/tos_task.c **** }
 1014              		.loc 1 149 12 view .LVU334
 1015 00da 0020     		movs	r0, #0
 1016              	.LVL105:
 1017              	.L41:
 150:..//kernel/core/tos_task.c **** 
 1018              		.loc 1 150 1 view .LVU335
 1019 00dc 02B0     		add	sp, sp, #8
 1020              	.LCFI8:
 1021              		.cfi_remember_state
 1022              		.cfi_def_cfa_offset 32
 1023              		@ sp needed
 1024 00de BDE8F08E 		pop	{r4, r5, r6, r7, r9, r10, fp, pc}
 1025              	.LVL106:
 1026              	.L53:
 1027              	.LCFI9:
 1028              		.cfi_restore_state
 106:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1029              		.loc 1 106 9 discriminator 1 view .LVU336
 1030 00e2 2046     		mov	r0, r4
 1031 00e4 FFF7FEFF 		bl	knl_is_idle
 1032              	.LVL107:
 106:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1033              		.loc 1 106 8 discriminator 1 view .LVU337
 1034 00e8 0028     		cmp	r0, #0
 1035 00ea A8D1     		bne	.L42
 107:..//kernel/core/tos_task.c ****     }
 1036              		.loc 1 107 16 view .LVU338
 1037 00ec 40F26F70 		movw	r0, #1903
 1038 00f0 F4E7     		b	.L41
 1039              	.LVL108:
 1040              	.L54:
 146:..//kernel/core/tos_task.c ****     }
 1041              		.loc 1 146 9 is_stmt 1 view .LVU339
 1042 00f2 FFF7FEFF 		bl	knl_sched
 1043              	.LVL109:
 149:..//kernel/core/tos_task.c **** }
 1044              		.loc 1 149 12 is_stmt 0 view .LVU340
 1045 00f6 2846     		mov	r0, r5
 1046 00f8 F0E7     		b	.L41
 1047              	.LVL110:
 1048              	.L43:
  93:..//kernel/core/tos_task.c **** 
 1049              		.loc 1 93 5 view .LVU341
 1050 00fa 4FF4C870 		mov	r0, #400
 1051 00fe EDE7     		b	.L41
 1052              	.L44:
  95:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 1053              		.loc 1 95 5 view .LVU342
 1054 0100 40F24C40 		movw	r0, #1100
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 43


 1055 0104 EAE7     		b	.L41
 1056              	.L45:
  96:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(stk_base);
 1057              		.loc 1 96 5 view .LVU343
 1058 0106 40F24C40 		movw	r0, #1100
 1059 010a E7E7     		b	.L41
 1060              	.L46:
  97:..//kernel/core/tos_task.c **** 
 1061              		.loc 1 97 5 view .LVU344
 1062 010c 40F24C40 		movw	r0, #1100
 1063 0110 E4E7     		b	.L41
 1064              	.L47:
 100:..//kernel/core/tos_task.c **** 
 1065              		.loc 1 100 5 view .LVU345
 1066 0112 40F26C70 		movw	r0, #1900
 1067 0116 E1E7     		b	.L41
 1068              	.L48:
 103:..//kernel/core/tos_task.c ****     }
 1069              		.loc 1 103 16 view .LVU346
 1070 0118 40F27470 		movw	r0, #1908
 1071 011c DEE7     		b	.L41
 1072              	.L50:
 111:..//kernel/core/tos_task.c ****     }
 1073              		.loc 1 111 16 view .LVU347
 1074 011e 40F26F70 		movw	r0, #1903
 1075 0122 DBE7     		b	.L41
 1076              	.L56:
 1077              		.align	2
 1078              	.L55:
 1079 0124 00000000 		.word	k_stat_list
 1080 0128 00000000 		.word	task_exit
 1081              		.cfi_endproc
 1082              	.LFE114:
 1084              		.section	.text.task_free_all,"ax",%progbits
 1085              		.align	1
 1086              		.global	task_free_all
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1090              		.fpu softvfp
 1092              	task_free_all:
 1093              	.LFB118:
 210:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1094              		.loc 1 210 1 is_stmt 1 view -0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098 0000 38B5     		push	{r3, r4, r5, lr}
 1099              	.LCFI10:
 1100              		.cfi_def_cfa_offset 16
 1101              		.cfi_offset 3, -16
 1102              		.cfi_offset 4, -12
 1103              		.cfi_offset 5, -8
 1104              		.cfi_offset 14, -4
 211:..//kernel/core/tos_task.c ****     k_task_t *task, *tmp;
 1105              		.loc 1 211 5 view .LVU349
 1106              	.LVL111:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 44


 212:..//kernel/core/tos_task.c **** 
 1107              		.loc 1 212 5 view .LVU350
 214:..//kernel/core/tos_task.c **** 
 1108              		.loc 1 214 5 view .LVU351
 214:..//kernel/core/tos_task.c **** 
 1109              		.loc 1 214 5 view .LVU352
 1110 0002 FFF7FEFF 		bl	tos_cpu_cpsr_save
 1111              	.LVL112:
 1112 0006 0546     		mov	r5, r0
 1113              	.LVL113:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1114              		.loc 1 216 5 view .LVU353
 1115 0008 0C4B     		ldr	r3, .L62
 1116 000a 1868     		ldr	r0, [r3]
 1117              	.LVL114:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1118              		.loc 1 216 5 is_stmt 0 view .LVU354
 1119 000c 50F82C49 		ldr	r4, [r0], #-44
 1120              	.LVL115:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1121              		.loc 1 216 5 view .LVU355
 1122 0010 2C3C     		subs	r4, r4, #44
 1123              	.LVL116:
 1124              	.L58:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1125              		.loc 1 216 5 discriminator 1 view .LVU356
 1126 0012 00F12C02 		add	r2, r0, #44
 1127 0016 094B     		ldr	r3, .L62
 1128 0018 9A42     		cmp	r2, r3
 1129 001a 0AD0     		beq	.L61
 217:..//kernel/core/tos_task.c ****         task_free(task);
 1130              		.loc 1 217 9 is_stmt 1 discriminator 3 view .LVU357
 1131              	.LVL117:
 1132              	.LBB188:
 1133              	.LBI188:
 115:..//kernel/core/include/tos_list.h **** {
 1134              		.loc 2 115 32 discriminator 3 view .LVU358
 1135              	.LBB189:
 117:..//kernel/core/include/tos_list.h **** }
 1136              		.loc 2 117 5 discriminator 3 view .LVU359
 117:..//kernel/core/include/tos_list.h **** }
 1137              		.loc 2 117 19 is_stmt 0 discriminator 3 view .LVU360
 1138 001c 036B     		ldr	r3, [r0, #48]
 117:..//kernel/core/include/tos_list.h **** }
 1139              		.loc 2 117 31 discriminator 3 view .LVU361
 1140 001e C26A     		ldr	r2, [r0, #44]
 1141              	.LVL118:
 1142              	.LBB190:
 1143              	.LBI190:
  88:..//kernel/core/include/tos_list.h **** {
 1144              		.loc 2 88 24 is_stmt 1 discriminator 3 view .LVU362
 1145              	.LBB191:
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 1146              		.loc 2 90 5 discriminator 3 view .LVU363
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 1147              		.loc 2 90 16 is_stmt 0 discriminator 3 view .LVU364
 1148 0020 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 45


  91:..//kernel/core/include/tos_list.h **** }
 1149              		.loc 2 91 5 is_stmt 1 discriminator 3 view .LVU365
  91:..//kernel/core/include/tos_list.h **** }
 1150              		.loc 2 91 16 is_stmt 0 discriminator 3 view .LVU366
 1151 0022 1A60     		str	r2, [r3]
 1152              	.LVL119:
  91:..//kernel/core/include/tos_list.h **** }
 1153              		.loc 2 91 16 discriminator 3 view .LVU367
 1154              	.LBE191:
 1155              	.LBE190:
 1156              	.LBE189:
 1157              	.LBE188:
 218:..//kernel/core/tos_task.c ****     }
 1158              		.loc 1 218 9 is_stmt 1 discriminator 3 view .LVU368
 1159 0024 FFF7FEFF 		bl	task_free
 1160              	.LVL120:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1161              		.loc 1 216 5 is_stmt 0 discriminator 3 view .LVU369
 1162 0028 E36A     		ldr	r3, [r4, #44]
 1163              	.LVL121:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1164              		.loc 1 216 5 discriminator 3 view .LVU370
 1165 002a 2046     		mov	r0, r4
 1166 002c A3F12C04 		sub	r4, r3, #44
 1167              	.LVL122:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1168              		.loc 1 216 5 discriminator 3 view .LVU371
 1169 0030 EFE7     		b	.L58
 1170              	.L61:
 221:..//kernel/core/tos_task.c **** }
 1171              		.loc 1 221 5 is_stmt 1 view .LVU372
 221:..//kernel/core/tos_task.c **** }
 1172              		.loc 1 221 5 view .LVU373
 1173 0032 2846     		mov	r0, r5
 1174              	.LVL123:
 221:..//kernel/core/tos_task.c **** }
 1175              		.loc 1 221 5 is_stmt 0 view .LVU374
 1176 0034 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1177              	.LVL124:
 222:..//kernel/core/tos_task.c **** 
 1178              		.loc 1 222 1 view .LVU375
 1179 0038 38BD     		pop	{r3, r4, r5, pc}
 1180              	.LVL125:
 1181              	.L63:
 222:..//kernel/core/tos_task.c **** 
 1182              		.loc 1 222 1 view .LVU376
 1183 003a 00BF     		.align	2
 1184              	.L62:
 1185 003c 00000000 		.word	k_dead_task_list
 1186              		.cfi_endproc
 1187              	.LFE118:
 1189              		.section	.text.tos_task_create_dyn,"ax",%progbits
 1190              		.align	1
 1191              		.global	tos_task_create_dyn
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 46


 1195              		.fpu softvfp
 1197              	tos_task_create_dyn:
 1198              	.LVL126:
 1199              	.LFB119:
 231:..//kernel/core/tos_task.c ****     k_err_t err;
 1200              		.loc 1 231 1 is_stmt 1 view -0
 1201              		.cfi_startproc
 1202              		@ args = 12, pretend = 0, frame = 0
 1203              		@ frame_needed = 0, uses_anonymous_args = 0
 231:..//kernel/core/tos_task.c ****     k_err_t err;
 1204              		.loc 1 231 1 is_stmt 0 view .LVU378
 1205 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1206              	.LCFI11:
 1207              		.cfi_def_cfa_offset 32
 1208              		.cfi_offset 4, -32
 1209              		.cfi_offset 5, -28
 1210              		.cfi_offset 6, -24
 1211              		.cfi_offset 7, -20
 1212              		.cfi_offset 8, -16
 1213              		.cfi_offset 9, -12
 1214              		.cfi_offset 10, -8
 1215              		.cfi_offset 14, -4
 1216 0004 84B0     		sub	sp, sp, #16
 1217              	.LCFI12:
 1218              		.cfi_def_cfa_offset 48
 1219 0006 0646     		mov	r6, r0
 1220 0008 8946     		mov	r9, r1
 1221 000a 1746     		mov	r7, r2
 1222 000c 9A46     		mov	r10, r3
 1223 000e 9DF83040 		ldrb	r4, [sp, #48]	@ zero_extendqisi2
 1224 0012 0D9D     		ldr	r5, [sp, #52]
 232:..//kernel/core/tos_task.c ****     k_task_t *the_task;
 1225              		.loc 1 232 5 is_stmt 1 view .LVU379
 233:..//kernel/core/tos_task.c ****     k_stack_t *stk_base;
 1226              		.loc 1 233 5 view .LVU380
 234:..//kernel/core/tos_task.c **** 
 1227              		.loc 1 234 5 view .LVU381
 236:..//kernel/core/tos_task.c **** 
 1228              		.loc 1 236 5 view .LVU382
 236:..//kernel/core/tos_task.c **** 
 1229              		.loc 1 236 5 view .LVU383
 1230 0014 FFF7FEFF 		bl	knl_is_inirq
 1231              	.LVL127:
 236:..//kernel/core/tos_task.c **** 
 1232              		.loc 1 236 5 is_stmt 0 view .LVU384
 1233 0018 90BB     		cbnz	r0, .L68
 238:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 1234              		.loc 1 238 5 is_stmt 1 view .LVU385
 238:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 1235              		.loc 1 238 5 view .LVU386
 1236 001a A6B3     		cbz	r6, .L69
 239:..//kernel/core/tos_task.c **** 
 1237              		.loc 1 239 5 view .LVU387
 239:..//kernel/core/tos_task.c **** 
 1238              		.loc 1 239 5 view .LVU388
 1239 001c B7B3     		cbz	r7, .L70
 241:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 47


 1240              		.loc 1 241 5 view .LVU389
 241:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 1241              		.loc 1 241 8 is_stmt 0 view .LVU390
 1242 001e 3F2D     		cmp	r5, #63
 1243 0020 37D9     		bls	.L71
 245:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1244              		.loc 1 245 5 is_stmt 1 view .LVU391
 245:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1245              		.loc 1 245 8 is_stmt 0 view .LVU392
 1246 0022 092C     		cmp	r4, #9
 1247 0024 38D0     		beq	.L72
 249:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1248              		.loc 1 249 5 is_stmt 1 view .LVU393
 249:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1249              		.loc 1 249 8 is_stmt 0 view .LVU394
 1250 0026 3AD8     		bhi	.L73
 253:..//kernel/core/tos_task.c ****     if (!the_task) {
 1251              		.loc 1 253 5 is_stmt 1 view .LVU395
 253:..//kernel/core/tos_task.c ****     if (!the_task) {
 1252              		.loc 1 253 16 is_stmt 0 view .LVU396
 1253 0028 8821     		movs	r1, #136
 1254 002a 0120     		movs	r0, #1
 1255 002c FFF7FEFF 		bl	tos_mmheap_calloc
 1256              	.LVL128:
 254:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 1257              		.loc 1 254 5 is_stmt 1 view .LVU397
 254:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 1258              		.loc 1 254 8 is_stmt 0 view .LVU398
 1259 0030 8046     		mov	r8, r0
 1260 0032 B8B3     		cbz	r0, .L74
 258:..//kernel/core/tos_task.c ****     if (!stk_base) {
 1261              		.loc 1 258 5 is_stmt 1 view .LVU399
 258:..//kernel/core/tos_task.c ****     if (!stk_base) {
 1262              		.loc 1 258 16 is_stmt 0 view .LVU400
 1263 0034 2846     		mov	r0, r5
 1264              	.LVL129:
 258:..//kernel/core/tos_task.c ****     if (!stk_base) {
 1265              		.loc 1 258 16 view .LVU401
 1266 0036 FFF7FEFF 		bl	tos_mmheap_alloc
 1267              	.LVL130:
 259:..//kernel/core/tos_task.c ****         tos_mmheap_free(the_task);
 1268              		.loc 1 259 5 is_stmt 1 view .LVU402
 259:..//kernel/core/tos_task.c ****         tos_mmheap_free(the_task);
 1269              		.loc 1 259 8 is_stmt 0 view .LVU403
 1270 003a B8B1     		cbz	r0, .L76
 264:..//kernel/core/tos_task.c ****     err = tos_task_create(the_task, name, entry, arg, prio, stk_base, stk_size, timeslice);
 1271              		.loc 1 264 5 is_stmt 1 view .LVU404
 264:..//kernel/core/tos_task.c ****     err = tos_task_create(the_task, name, entry, arg, prio, stk_base, stk_size, timeslice);
 1272              		.loc 1 264 24 is_stmt 0 view .LVU405
 1273 003c C8F82400 		str	r0, [r8, #36]
 265:..//kernel/core/tos_task.c ****     if (err != K_ERR_NONE) {
 1274              		.loc 1 265 5 is_stmt 1 view .LVU406
 265:..//kernel/core/tos_task.c ****     if (err != K_ERR_NONE) {
 1275              		.loc 1 265 11 is_stmt 0 view .LVU407
 1276 0040 0E9A     		ldr	r2, [sp, #56]
 1277 0042 0392     		str	r2, [sp, #12]
 1278 0044 0295     		str	r5, [sp, #8]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 48


 1279 0046 0190     		str	r0, [sp, #4]
 1280 0048 0094     		str	r4, [sp]
 1281 004a 5346     		mov	r3, r10
 1282 004c 3A46     		mov	r2, r7
 1283 004e 4946     		mov	r1, r9
 1284 0050 4046     		mov	r0, r8
 1285              	.LVL131:
 265:..//kernel/core/tos_task.c ****     if (err != K_ERR_NONE) {
 1286              		.loc 1 265 11 view .LVU408
 1287 0052 FFF7FEFF 		bl	tos_task_create
 1288              	.LVL132:
 266:..//kernel/core/tos_task.c ****         task_free(the_task);
 1289              		.loc 1 266 5 is_stmt 1 view .LVU409
 266:..//kernel/core/tos_task.c ****         task_free(the_task);
 1290              		.loc 1 266 8 is_stmt 0 view .LVU410
 1291 0056 0446     		mov	r4, r0
 1292 0058 70B9     		cbnz	r0, .L77
 271:..//kernel/core/tos_task.c **** 
 1293              		.loc 1 271 5 is_stmt 1 view .LVU411
 1294              	.LVL133:
 1295              	.LBB192:
 1296              	.LBI192:
 204:..//kernel/core/include/tos_sys.h **** {
 1297              		.loc 4 204 32 view .LVU412
 1298              	.LBB193:
 206:..//kernel/core/include/tos_sys.h **** }
 1299              		.loc 4 206 5 view .LVU413
 206:..//kernel/core/include/tos_sys.h **** }
 1300              		.loc 4 206 25 is_stmt 0 view .LVU414
 1301 005a 0223     		movs	r3, #2
 1302 005c 88F80430 		strb	r3, [r8, #4]
 1303              	.LVL134:
 206:..//kernel/core/include/tos_sys.h **** }
 1304              		.loc 4 206 25 view .LVU415
 1305              	.LBE193:
 1306              	.LBE192:
 273:..//kernel/core/tos_task.c **** 
 1307              		.loc 1 273 5 is_stmt 1 view .LVU416
 273:..//kernel/core/tos_task.c **** 
 1308              		.loc 1 273 11 is_stmt 0 view .LVU417
 1309 0060 C6F80080 		str	r8, [r6]
 275:..//kernel/core/tos_task.c **** }
 1310              		.loc 1 275 5 is_stmt 1 view .LVU418
 1311              	.LVL135:
 1312              	.L65:
 276:..//kernel/core/tos_task.c **** 
 1313              		.loc 1 276 1 is_stmt 0 view .LVU419
 1314 0064 2046     		mov	r0, r4
 1315 0066 04B0     		add	sp, sp, #16
 1316              	.LCFI13:
 1317              		.cfi_remember_state
 1318              		.cfi_def_cfa_offset 32
 1319              		@ sp needed
 1320 0068 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1321              	.LVL136:
 1322              	.L76:
 1323              	.LCFI14:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 49


 1324              		.cfi_restore_state
 260:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 1325              		.loc 1 260 9 is_stmt 1 view .LVU420
 1326 006c 4046     		mov	r0, r8
 1327              	.LVL137:
 260:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 1328              		.loc 1 260 9 is_stmt 0 view .LVU421
 1329 006e FFF7FEFF 		bl	tos_mmheap_free
 1330              	.LVL138:
 261:..//kernel/core/tos_task.c ****     }
 1331              		.loc 1 261 9 is_stmt 1 view .LVU422
 261:..//kernel/core/tos_task.c ****     }
 1332              		.loc 1 261 16 is_stmt 0 view .LVU423
 1333 0072 40F27574 		movw	r4, #1909
 1334 0076 F5E7     		b	.L65
 1335              	.LVL139:
 1336              	.L77:
 267:..//kernel/core/tos_task.c ****         return err;
 1337              		.loc 1 267 9 is_stmt 1 view .LVU424
 1338 0078 4046     		mov	r0, r8
 1339              	.LVL140:
 267:..//kernel/core/tos_task.c ****         return err;
 1340              		.loc 1 267 9 is_stmt 0 view .LVU425
 1341 007a FFF7FEFF 		bl	task_free
 1342              	.LVL141:
 268:..//kernel/core/tos_task.c ****     }
 1343              		.loc 1 268 9 is_stmt 1 view .LVU426
 268:..//kernel/core/tos_task.c ****     }
 1344              		.loc 1 268 16 is_stmt 0 view .LVU427
 1345 007e F1E7     		b	.L65
 1346              	.LVL142:
 1347              	.L68:
 236:..//kernel/core/tos_task.c **** 
 1348              		.loc 1 236 5 view .LVU428
 1349 0080 4FF4C874 		mov	r4, #400
 1350 0084 EEE7     		b	.L65
 1351              	.L69:
 238:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 1352              		.loc 1 238 5 view .LVU429
 1353 0086 40F24C44 		movw	r4, #1100
 1354 008a EBE7     		b	.L65
 1355              	.L70:
 239:..//kernel/core/tos_task.c **** 
 1356              		.loc 1 239 5 view .LVU430
 1357 008c 40F24C44 		movw	r4, #1100
 1358 0090 E8E7     		b	.L65
 1359              	.L71:
 242:..//kernel/core/tos_task.c ****     }
 1360              		.loc 1 242 16 view .LVU431
 1361 0092 40F27474 		movw	r4, #1908
 1362 0096 E5E7     		b	.L65
 1363              	.L72:
 246:..//kernel/core/tos_task.c ****     }
 1364              		.loc 1 246 16 view .LVU432
 1365 0098 40F26F74 		movw	r4, #1903
 1366 009c E2E7     		b	.L65
 1367              	.L73:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 50


 250:..//kernel/core/tos_task.c ****     }
 1368              		.loc 1 250 16 view .LVU433
 1369 009e 40F26F74 		movw	r4, #1903
 1370 00a2 DFE7     		b	.L65
 1371              	.LVL143:
 1372              	.L74:
 255:..//kernel/core/tos_task.c ****     }
 1373              		.loc 1 255 16 view .LVU434
 1374 00a4 40F27574 		movw	r4, #1909
 1375 00a8 DCE7     		b	.L65
 1376              		.cfi_endproc
 1377              	.LFE119:
 1379              		.section	.text.tos_task_destroy,"ax",%progbits
 1380              		.align	1
 1381              		.global	tos_task_destroy
 1382              		.syntax unified
 1383              		.thumb
 1384              		.thumb_func
 1385              		.fpu softvfp
 1387              	tos_task_destroy:
 1388              	.LVL144:
 1389              	.LFB121:
 302:..//kernel/core/tos_task.c **** 
 303:..//kernel/core/tos_task.c **** #endif
 304:..//kernel/core/tos_task.c **** 
 305:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_destroy(k_task_t *task)
 306:..//kernel/core/tos_task.c **** {
 1390              		.loc 1 306 1 is_stmt 1 view -0
 1391              		.cfi_startproc
 1392              		@ args = 0, pretend = 0, frame = 0
 1393              		@ frame_needed = 0, uses_anonymous_args = 0
 1394              		.loc 1 306 1 is_stmt 0 view .LVU436
 1395 0000 10B5     		push	{r4, lr}
 1396              	.LCFI15:
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 4, -8
 1399              		.cfi_offset 14, -4
 1400 0002 0446     		mov	r4, r0
 307:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
 1401              		.loc 1 307 5 is_stmt 1 view .LVU437
 1402              		.loc 1 307 5 view .LVU438
 1403 0004 FFF7FEFF 		bl	knl_is_inirq
 1404              	.LVL145:
 1405              		.loc 1 307 5 is_stmt 0 view .LVU439
 1406 0008 08BB     		cbnz	r0, .L83
 308:..//kernel/core/tos_task.c **** 
 309:..//kernel/core/tos_task.c ****     if (unlikely(!task)) {
 1407              		.loc 1 309 5 is_stmt 1 view .LVU440
 1408              		.loc 1 309 8 is_stmt 0 view .LVU441
 1409 000a 3CB1     		cbz	r4, .L87
 1410              	.L80:
 310:..//kernel/core/tos_task.c ****         task = k_curr_task;
 311:..//kernel/core/tos_task.c ****     }
 312:..//kernel/core/tos_task.c **** 
 313:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 1411              		.loc 1 313 5 is_stmt 1 view .LVU442
 1412              		.loc 1 313 5 view .LVU443
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 51


 1413              	.LVL146:
 1414              	.LBB194:
 1415              	.LBI194:
 182:..//kernel/core/include/tos_sys.h **** {
 1416              		.loc 4 182 31 view .LVU444
 1417              	.LBB195:
 184:..//kernel/core/include/tos_sys.h **** }
 1418              		.loc 4 184 5 view .LVU445
 184:..//kernel/core/include/tos_sys.h **** }
 1419              		.loc 4 184 19 is_stmt 0 view .LVU446
 1420 000c E288     		ldrh	r2, [r4, #6]
 1421              	.LVL147:
 184:..//kernel/core/include/tos_sys.h **** }
 1422              		.loc 4 184 19 view .LVU447
 1423              	.LBE195:
 1424              	.LBE194:
 1425              		.loc 1 313 5 view .LVU448
 1426 000e 4DF6D823 		movw	r3, #56024
 1427 0012 9A42     		cmp	r2, r3
 1428 0014 05D0     		beq	.L88
 1429              		.loc 1 313 5 view .LVU449
 1430 0016 40F24D40 		movw	r0, #1101
 1431              	.L79:
 314:..//kernel/core/tos_task.c **** 
 315:..//kernel/core/tos_task.c ****     if (knl_is_self(task) && knl_is_sched_locked()) {
 316:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 317:..//kernel/core/tos_task.c ****     }
 318:..//kernel/core/tos_task.c **** 
 319:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 320:..//kernel/core/tos_task.c ****     if (knl_object_alloc_is_dynamic(&task->knl_obj)) {
 321:..//kernel/core/tos_task.c ****         return task_destroy_dyn(task);
 322:..//kernel/core/tos_task.c ****     }
 323:..//kernel/core/tos_task.c **** #endif
 324:..//kernel/core/tos_task.c **** 
 325:..//kernel/core/tos_task.c ****     return task_destroy_static(task);
 326:..//kernel/core/tos_task.c **** }
 1432              		.loc 1 326 1 view .LVU450
 1433 001a 10BD     		pop	{r4, pc}
 1434              	.LVL148:
 1435              	.L87:
 310:..//kernel/core/tos_task.c ****     }
 1436              		.loc 1 310 9 is_stmt 1 view .LVU451
 310:..//kernel/core/tos_task.c ****     }
 1437              		.loc 1 310 14 is_stmt 0 view .LVU452
 1438 001c 0D4B     		ldr	r3, .L91
 1439 001e 1C68     		ldr	r4, [r3]
 1440              	.LVL149:
 310:..//kernel/core/tos_task.c ****     }
 1441              		.loc 1 310 14 view .LVU453
 1442 0020 F4E7     		b	.L80
 1443              	.L88:
 315:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1444              		.loc 1 315 5 is_stmt 1 view .LVU454
 315:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1445              		.loc 1 315 9 is_stmt 0 view .LVU455
 1446 0022 2046     		mov	r0, r4
 1447 0024 FFF7FEFF 		bl	knl_is_self
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 52


 1448              	.LVL150:
 315:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1449              		.loc 1 315 8 view .LVU456
 1450 0028 30B9     		cbnz	r0, .L89
 1451              	.L81:
 320:..//kernel/core/tos_task.c ****         return task_destroy_dyn(task);
 1452              		.loc 1 320 5 is_stmt 1 view .LVU457
 1453              	.LVL151:
 1454              	.LBB196:
 1455              	.LBI196:
 214:..//kernel/core/include/tos_sys.h **** {
 1456              		.loc 4 214 31 view .LVU458
 1457              	.LBB197:
 216:..//kernel/core/include/tos_sys.h **** }
 1458              		.loc 4 216 5 view .LVU459
 216:..//kernel/core/include/tos_sys.h **** }
 1459              		.loc 4 216 19 is_stmt 0 view .LVU460
 1460 002a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1461              	.LVL152:
 216:..//kernel/core/include/tos_sys.h **** }
 1462              		.loc 4 216 19 view .LVU461
 1463              	.LBE197:
 1464              	.LBE196:
 320:..//kernel/core/tos_task.c ****         return task_destroy_dyn(task);
 1465              		.loc 1 320 8 view .LVU462
 1466 002c 022B     		cmp	r3, #2
 1467 002e 0AD0     		beq	.L90
 325:..//kernel/core/tos_task.c **** }
 1468              		.loc 1 325 5 is_stmt 1 view .LVU463
 325:..//kernel/core/tos_task.c **** }
 1469              		.loc 1 325 12 is_stmt 0 view .LVU464
 1470 0030 2046     		mov	r0, r4
 1471 0032 FFF7FEFF 		bl	task_destroy_static
 1472              	.LVL153:
 1473 0036 F0E7     		b	.L79
 1474              	.L89:
 315:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1475              		.loc 1 315 30 discriminator 1 view .LVU465
 1476 0038 FFF7FEFF 		bl	knl_is_sched_locked
 1477              	.LVL154:
 315:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1478              		.loc 1 315 27 discriminator 1 view .LVU466
 1479 003c 0028     		cmp	r0, #0
 1480 003e F4D0     		beq	.L81
 316:..//kernel/core/tos_task.c ****     }
 1481              		.loc 1 316 16 view .LVU467
 1482 0040 40F2A460 		movw	r0, #1700
 1483 0044 E9E7     		b	.L79
 1484              	.L90:
 321:..//kernel/core/tos_task.c ****     }
 1485              		.loc 1 321 9 is_stmt 1 view .LVU468
 321:..//kernel/core/tos_task.c ****     }
 1486              		.loc 1 321 16 is_stmt 0 view .LVU469
 1487 0046 2046     		mov	r0, r4
 1488 0048 FFF7FEFF 		bl	task_destroy_dyn
 1489              	.LVL155:
 1490 004c E5E7     		b	.L79
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 53


 1491              	.L83:
 307:..//kernel/core/tos_task.c **** 
 1492              		.loc 1 307 5 view .LVU470
 1493 004e 4FF4C870 		mov	r0, #400
 1494 0052 E2E7     		b	.L79
 1495              	.L92:
 1496              		.align	2
 1497              	.L91:
 1498 0054 00000000 		.word	k_curr_task
 1499              		.cfi_endproc
 1500              	.LFE121:
 1502              		.section	.text.task_exit,"ax",%progbits
 1503              		.align	1
 1504              		.syntax unified
 1505              		.thumb
 1506              		.thumb_func
 1507              		.fpu softvfp
 1509              	task_exit:
 1510              	.LFB111:
  52:..//kernel/core/tos_task.c ****     tos_task_destroy(K_NULL);
 1511              		.loc 1 52 1 is_stmt 1 view -0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515 0000 08B5     		push	{r3, lr}
 1516              	.LCFI16:
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 3, -8
 1519              		.cfi_offset 14, -4
  53:..//kernel/core/tos_task.c **** }
 1520              		.loc 1 53 5 view .LVU472
 1521 0002 0020     		movs	r0, #0
 1522 0004 FFF7FEFF 		bl	tos_task_destroy
 1523              	.LVL156:
  54:..//kernel/core/tos_task.c **** 
 1524              		.loc 1 54 1 is_stmt 0 view .LVU473
 1525 0008 08BD     		pop	{r3, pc}
 1526              		.cfi_endproc
 1527              	.LFE111:
 1529              		.section	.text.tos_task_yield,"ax",%progbits
 1530              		.align	1
 1531              		.global	tos_task_yield
 1532              		.syntax unified
 1533              		.thumb
 1534              		.thumb_func
 1535              		.fpu softvfp
 1537              	tos_task_yield:
 1538              	.LFB122:
 327:..//kernel/core/tos_task.c **** 
 328:..//kernel/core/tos_task.c **** __API__ void tos_task_yield(void)
 329:..//kernel/core/tos_task.c **** {
 1539              		.loc 1 329 1 is_stmt 1 view -0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 0
 1542              		@ frame_needed = 0, uses_anonymous_args = 0
 1543 0000 38B5     		push	{r3, r4, r5, lr}
 1544              	.LCFI17:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 54


 1545              		.cfi_def_cfa_offset 16
 1546              		.cfi_offset 3, -16
 1547              		.cfi_offset 4, -12
 1548              		.cfi_offset 5, -8
 1549              		.cfi_offset 14, -4
 330:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1550              		.loc 1 330 5 view .LVU475
 1551              	.LVL157:
 331:..//kernel/core/tos_task.c **** 
 332:..//kernel/core/tos_task.c ****     if (knl_is_inirq()) {
 1552              		.loc 1 332 5 view .LVU476
 1553              		.loc 1 332 9 is_stmt 0 view .LVU477
 1554 0002 FFF7FEFF 		bl	knl_is_inirq
 1555              	.LVL158:
 1556              		.loc 1 332 8 view .LVU478
 1557 0006 00B1     		cbz	r0, .L98
 1558              	.LVL159:
 1559              	.L95:
 333:..//kernel/core/tos_task.c ****         return;
 334:..//kernel/core/tos_task.c ****     }
 335:..//kernel/core/tos_task.c **** 
 336:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 337:..//kernel/core/tos_task.c **** 
 338:..//kernel/core/tos_task.c ****     readyqueue_remove(k_curr_task);
 339:..//kernel/core/tos_task.c ****     readyqueue_add_tail(k_curr_task);
 340:..//kernel/core/tos_task.c **** 
 341:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 342:..//kernel/core/tos_task.c ****     knl_sched();
 343:..//kernel/core/tos_task.c **** }
 1560              		.loc 1 343 1 view .LVU479
 1561 0008 38BD     		pop	{r3, r4, r5, pc}
 1562              	.LVL160:
 1563              	.L98:
 336:..//kernel/core/tos_task.c **** 
 1564              		.loc 1 336 5 is_stmt 1 view .LVU480
 336:..//kernel/core/tos_task.c **** 
 1565              		.loc 1 336 5 view .LVU481
 1566 000a FFF7FEFF 		bl	tos_cpu_cpsr_save
 1567              	.LVL161:
 1568 000e 0546     		mov	r5, r0
 1569              	.LVL162:
 338:..//kernel/core/tos_task.c ****     readyqueue_add_tail(k_curr_task);
 1570              		.loc 1 338 5 view .LVU482
 1571 0010 064C     		ldr	r4, .L99
 1572 0012 2068     		ldr	r0, [r4]
 1573              	.LVL163:
 338:..//kernel/core/tos_task.c ****     readyqueue_add_tail(k_curr_task);
 1574              		.loc 1 338 5 is_stmt 0 view .LVU483
 1575 0014 FFF7FEFF 		bl	readyqueue_remove
 1576              	.LVL164:
 339:..//kernel/core/tos_task.c **** 
 1577              		.loc 1 339 5 is_stmt 1 view .LVU484
 1578 0018 2068     		ldr	r0, [r4]
 1579 001a FFF7FEFF 		bl	readyqueue_add_tail
 1580              	.LVL165:
 341:..//kernel/core/tos_task.c ****     knl_sched();
 1581              		.loc 1 341 5 view .LVU485
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 55


 341:..//kernel/core/tos_task.c ****     knl_sched();
 1582              		.loc 1 341 5 view .LVU486
 1583 001e 2846     		mov	r0, r5
 1584 0020 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1585              	.LVL166:
 342:..//kernel/core/tos_task.c **** }
 1586              		.loc 1 342 5 view .LVU487
 1587 0024 FFF7FEFF 		bl	knl_sched
 1588              	.LVL167:
 1589 0028 EEE7     		b	.L95
 1590              	.L100:
 1591 002a 00BF     		.align	2
 1592              	.L99:
 1593 002c 00000000 		.word	k_curr_task
 1594              		.cfi_endproc
 1595              	.LFE122:
 1597              		.section	.text.tos_task_prio_change,"ax",%progbits
 1598              		.align	1
 1599              		.global	tos_task_prio_change
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1603              		.fpu softvfp
 1605              	tos_task_prio_change:
 1606              	.LVL168:
 1607              	.LFB123:
 344:..//kernel/core/tos_task.c **** 
 345:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_prio_change(k_task_t *task, k_prio_t prio_new)
 346:..//kernel/core/tos_task.c **** {
 1608              		.loc 1 346 1 view -0
 1609              		.cfi_startproc
 1610              		@ args = 0, pretend = 0, frame = 0
 1611              		@ frame_needed = 0, uses_anonymous_args = 0
 1612              		.loc 1 346 1 is_stmt 0 view .LVU489
 1613 0000 70B5     		push	{r4, r5, r6, lr}
 1614              	.LCFI18:
 1615              		.cfi_def_cfa_offset 16
 1616              		.cfi_offset 4, -16
 1617              		.cfi_offset 5, -12
 1618              		.cfi_offset 6, -8
 1619              		.cfi_offset 14, -4
 1620 0002 0446     		mov	r4, r0
 1621 0004 0D46     		mov	r5, r1
 347:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1622              		.loc 1 347 5 is_stmt 1 view .LVU490
 1623              	.LVL169:
 348:..//kernel/core/tos_task.c **** #if TOS_CFG_MUTEX_EN > 0u
 349:..//kernel/core/tos_task.c ****     k_prio_t highest_pending_prio;
 1624              		.loc 1 349 5 view .LVU491
 350:..//kernel/core/tos_task.c **** #endif
 351:..//kernel/core/tos_task.c **** 
 352:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
 1625              		.loc 1 352 5 view .LVU492
 1626              		.loc 1 352 5 view .LVU493
 1627 0006 FFF7FEFF 		bl	knl_is_inirq
 1628              	.LVL170:
 1629              		.loc 1 352 5 is_stmt 0 view .LVU494
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 56


 1630 000a 0028     		cmp	r0, #0
 1631 000c 4CD1     		bne	.L109
 353:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 1632              		.loc 1 353 5 is_stmt 1 view .LVU495
 1633              		.loc 1 353 5 view .LVU496
 1634 000e 002C     		cmp	r4, #0
 1635 0010 4DD0     		beq	.L110
 354:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 1636              		.loc 1 354 5 view .LVU497
 1637              		.loc 1 354 5 view .LVU498
 1638              	.LVL171:
 1639              	.LBB198:
 1640              	.LBI198:
 182:..//kernel/core/include/tos_sys.h **** {
 1641              		.loc 4 182 31 view .LVU499
 1642              	.LBB199:
 184:..//kernel/core/include/tos_sys.h **** }
 1643              		.loc 4 184 5 view .LVU500
 184:..//kernel/core/include/tos_sys.h **** }
 1644              		.loc 4 184 19 is_stmt 0 view .LVU501
 1645 0012 E288     		ldrh	r2, [r4, #6]
 1646              	.LVL172:
 184:..//kernel/core/include/tos_sys.h **** }
 1647              		.loc 4 184 19 view .LVU502
 1648              	.LBE199:
 1649              	.LBE198:
 1650              		.loc 1 354 5 view .LVU503
 1651 0014 4DF6D823 		movw	r3, #56024
 1652 0018 9A42     		cmp	r2, r3
 1653 001a 4BD1     		bne	.L111
 355:..//kernel/core/tos_task.c **** 
 356:..//kernel/core/tos_task.c ****     if (unlikely(prio_new >= K_TASK_PRIO_IDLE)) {
 1654              		.loc 1 356 5 is_stmt 1 view .LVU504
 1655              		.loc 1 356 8 is_stmt 0 view .LVU505
 1656 001c 082D     		cmp	r5, #8
 1657 001e 4CD8     		bhi	.L112
 357:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 358:..//kernel/core/tos_task.c ****     }
 359:..//kernel/core/tos_task.c **** 
 360:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 1658              		.loc 1 360 5 is_stmt 1 view .LVU506
 1659              		.loc 1 360 5 view .LVU507
 1660 0020 FFF7FEFF 		bl	tos_cpu_cpsr_save
 1661              	.LVL173:
 1662 0024 0646     		mov	r6, r0
 1663              	.LVL174:
 361:..//kernel/core/tos_task.c **** 
 362:..//kernel/core/tos_task.c ****     if (task->prio == prio_new) { // just kidding
 1664              		.loc 1 362 5 view .LVU508
 1665              		.loc 1 362 13 is_stmt 0 view .LVU509
 1666 0026 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 1667              		.loc 1 362 8 view .LVU510
 1668 002a AB42     		cmp	r3, r5
 1669 002c 1DD0     		beq	.L114
 363:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 364:..//kernel/core/tos_task.c ****         knl_sched();
 365:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 57


 366:..//kernel/core/tos_task.c ****     }
 367:..//kernel/core/tos_task.c **** 
 368:..//kernel/core/tos_task.c **** #if TOS_CFG_MUTEX_EN > 0u
 369:..//kernel/core/tos_task.c ****     if (!tos_list_empty(&task->mutex_own_list)) {
 1670              		.loc 1 369 5 is_stmt 1 view .LVU511
 1671              		.loc 1 369 25 is_stmt 0 view .LVU512
 1672 002e 04F15803 		add	r3, r4, #88
 1673              	.LBB200:
 1674              	.LBI200:
 138:..//kernel/core/include/tos_list.h **** {
 1675              		.loc 2 138 31 is_stmt 1 view .LVU513
 1676              	.LBB201:
 1677              		.loc 2 140 5 view .LVU514
 1678              		.loc 2 140 16 is_stmt 0 view .LVU515
 1679 0032 A26D     		ldr	r2, [r4, #88]
 1680              	.LBE201:
 1681              	.LBE200:
 1682              		.loc 1 369 8 view .LVU516
 1683 0034 9342     		cmp	r3, r2
 1684 0036 07D0     		beq	.L104
 370:..//kernel/core/tos_task.c ****         highest_pending_prio = task_highest_pending_prio_get(task);
 1685              		.loc 1 370 9 is_stmt 1 view .LVU517
 1686              		.loc 1 370 32 is_stmt 0 view .LVU518
 1687 0038 2046     		mov	r0, r4
 1688              	.LVL175:
 1689              		.loc 1 370 32 view .LVU519
 1690 003a FFF7FEFF 		bl	task_highest_pending_prio_get
 1691              	.LVL176:
 371:..//kernel/core/tos_task.c ****         if (prio_new > highest_pending_prio) {
 1692              		.loc 1 371 9 is_stmt 1 view .LVU520
 1693              		.loc 1 371 12 is_stmt 0 view .LVU521
 1694 003e 8542     		cmp	r5, r0
 1695 0040 02D9     		bls	.L104
 372:..//kernel/core/tos_task.c ****             task->prio_pending  = prio_new;
 1696              		.loc 1 372 13 is_stmt 1 view .LVU522
 1697              		.loc 1 372 33 is_stmt 0 view .LVU523
 1698 0042 84F86050 		strb	r5, [r4, #96]
 373:..//kernel/core/tos_task.c ****             prio_new            = highest_pending_prio;
 1699              		.loc 1 373 13 is_stmt 1 view .LVU524
 1700              	.LVL177:
 1701              		.loc 1 373 33 is_stmt 0 view .LVU525
 1702 0046 0546     		mov	r5, r0
 1703              	.LVL178:
 1704              	.L104:
 374:..//kernel/core/tos_task.c ****         }
 375:..//kernel/core/tos_task.c ****     }
 376:..//kernel/core/tos_task.c **** #endif
 377:..//kernel/core/tos_task.c **** 
 378:..//kernel/core/tos_task.c ****     if (task_state_is_pending(task)) {
 1705              		.loc 1 378 5 is_stmt 1 view .LVU526
 1706              	.LBB202:
 1707              	.LBI202:
 357:..//kernel/core/include/tos_task.h **** {
 1708              		.loc 3 357 31 view .LVU527
 1709              	.LBB203:
 359:..//kernel/core/include/tos_task.h **** }
 1710              		.loc 3 359 5 view .LVU528
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 58


 359:..//kernel/core/include/tos_task.h **** }
 1711              		.loc 3 359 16 is_stmt 0 view .LVU529
 1712 0048 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 1713              	.LVL179:
 359:..//kernel/core/include/tos_task.h **** }
 1714              		.loc 3 359 16 view .LVU530
 1715              	.LBE203:
 1716              	.LBE202:
 1717              		.loc 1 378 8 view .LVU531
 1718 004c 13F0020F 		tst	r3, #2
 1719 0050 11D1     		bne	.L115
 379:..//kernel/core/tos_task.c ****         task->prio = prio_new;
 380:..//kernel/core/tos_task.c ****         pend_list_adjust(task);
 381:..//kernel/core/tos_task.c ****     } else if (task_state_is_sleeping(task)) {
 1720              		.loc 1 381 12 is_stmt 1 view .LVU532
 1721              	.LVL180:
 354:..//kernel/core/include/tos_task.h **** }
 1722              		.loc 3 354 5 view .LVU533
 1723              		.loc 1 381 15 is_stmt 0 view .LVU534
 1724 0052 13F0010F 		tst	r3, #1
 1725 0056 14D0     		beq	.L107
 382:..//kernel/core/tos_task.c ****         task->prio = prio_new;
 1726              		.loc 1 382 9 is_stmt 1 view .LVU535
 1727              		.loc 1 382 20 is_stmt 0 view .LVU536
 1728 0058 84F82150 		strb	r5, [r4, #33]
 1729              	.L106:
 383:..//kernel/core/tos_task.c ****     } else if (task_state_is_ready(task)) { // good kid
 384:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 385:..//kernel/core/tos_task.c **** 
 386:..//kernel/core/tos_task.c ****         /* ATTENTION:
 387:..//kernel/core/tos_task.c ****             must do the prio assignment after readyqueue_remove
 388:..//kernel/core/tos_task.c ****             otherwise the k_rdyq.highest_prio refresh in readyqueue_remove will be wrong.
 389:..//kernel/core/tos_task.c ****          */
 390:..//kernel/core/tos_task.c ****         task->prio = prio_new;
 391:..//kernel/core/tos_task.c ****         if (knl_is_self(task)) {
 392:..//kernel/core/tos_task.c ****             readyqueue_add_head(task);
 393:..//kernel/core/tos_task.c ****         } else {
 394:..//kernel/core/tos_task.c ****             readyqueue_add_tail(task);
 395:..//kernel/core/tos_task.c ****         }
 396:..//kernel/core/tos_task.c ****     }
 397:..//kernel/core/tos_task.c **** 
 398:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 1730              		.loc 1 398 5 is_stmt 1 view .LVU537
 1731              		.loc 1 398 5 view .LVU538
 1732 005c 3046     		mov	r0, r6
 1733 005e FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1734              	.LVL181:
 399:..//kernel/core/tos_task.c ****     knl_sched();
 1735              		.loc 1 399 5 view .LVU539
 1736 0062 FFF7FEFF 		bl	knl_sched
 1737              	.LVL182:
 400:..//kernel/core/tos_task.c **** 
 401:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 1738              		.loc 1 401 5 view .LVU540
 1739              		.loc 1 401 12 is_stmt 0 view .LVU541
 1740 0066 0020     		movs	r0, #0
 1741              	.LVL183:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 59


 1742              	.L102:
 402:..//kernel/core/tos_task.c **** }
 1743              		.loc 1 402 1 view .LVU542
 1744 0068 70BD     		pop	{r4, r5, r6, pc}
 1745              	.LVL184:
 1746              	.L114:
 363:..//kernel/core/tos_task.c ****         knl_sched();
 1747              		.loc 1 363 9 is_stmt 1 view .LVU543
 363:..//kernel/core/tos_task.c ****         knl_sched();
 1748              		.loc 1 363 9 view .LVU544
 1749 006a FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1750              	.LVL185:
 364:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 1751              		.loc 1 364 9 view .LVU545
 1752 006e FFF7FEFF 		bl	knl_sched
 1753              	.LVL186:
 365:..//kernel/core/tos_task.c ****     }
 1754              		.loc 1 365 9 view .LVU546
 365:..//kernel/core/tos_task.c ****     }
 1755              		.loc 1 365 16 is_stmt 0 view .LVU547
 1756 0072 0020     		movs	r0, #0
 1757 0074 F8E7     		b	.L102
 1758              	.LVL187:
 1759              	.L115:
 379:..//kernel/core/tos_task.c ****         pend_list_adjust(task);
 1760              		.loc 1 379 9 is_stmt 1 view .LVU548
 379:..//kernel/core/tos_task.c ****         pend_list_adjust(task);
 1761              		.loc 1 379 20 is_stmt 0 view .LVU549
 1762 0076 84F82150 		strb	r5, [r4, #33]
 380:..//kernel/core/tos_task.c ****     } else if (task_state_is_sleeping(task)) {
 1763              		.loc 1 380 9 is_stmt 1 view .LVU550
 1764 007a 2046     		mov	r0, r4
 1765 007c FFF7FEFF 		bl	pend_list_adjust
 1766              	.LVL188:
 1767 0080 ECE7     		b	.L106
 1768              	.L107:
 383:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 1769              		.loc 1 383 12 view .LVU551
 1770              	.LVL189:
 349:..//kernel/core/include/tos_task.h **** }
 1771              		.loc 3 349 5 view .LVU552
 383:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 1772              		.loc 1 383 15 is_stmt 0 view .LVU553
 1773 0082 002B     		cmp	r3, #0
 1774 0084 EAD1     		bne	.L106
 384:..//kernel/core/tos_task.c **** 
 1775              		.loc 1 384 9 is_stmt 1 view .LVU554
 1776 0086 2046     		mov	r0, r4
 1777 0088 FFF7FEFF 		bl	readyqueue_remove
 1778              	.LVL190:
 390:..//kernel/core/tos_task.c ****         if (knl_is_self(task)) {
 1779              		.loc 1 390 9 view .LVU555
 390:..//kernel/core/tos_task.c ****         if (knl_is_self(task)) {
 1780              		.loc 1 390 20 is_stmt 0 view .LVU556
 1781 008c 84F82150 		strb	r5, [r4, #33]
 391:..//kernel/core/tos_task.c ****             readyqueue_add_head(task);
 1782              		.loc 1 391 9 is_stmt 1 view .LVU557
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 60


 391:..//kernel/core/tos_task.c ****             readyqueue_add_head(task);
 1783              		.loc 1 391 13 is_stmt 0 view .LVU558
 1784 0090 2046     		mov	r0, r4
 1785 0092 FFF7FEFF 		bl	knl_is_self
 1786              	.LVL191:
 391:..//kernel/core/tos_task.c ****             readyqueue_add_head(task);
 1787              		.loc 1 391 12 view .LVU559
 1788 0096 18B1     		cbz	r0, .L108
 392:..//kernel/core/tos_task.c ****         } else {
 1789              		.loc 1 392 13 is_stmt 1 view .LVU560
 1790 0098 2046     		mov	r0, r4
 1791 009a FFF7FEFF 		bl	readyqueue_add_head
 1792              	.LVL192:
 1793 009e DDE7     		b	.L106
 1794              	.L108:
 394:..//kernel/core/tos_task.c ****         }
 1795              		.loc 1 394 13 view .LVU561
 1796 00a0 2046     		mov	r0, r4
 1797 00a2 FFF7FEFF 		bl	readyqueue_add_tail
 1798              	.LVL193:
 1799 00a6 D9E7     		b	.L106
 1800              	.LVL194:
 1801              	.L109:
 352:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 1802              		.loc 1 352 5 is_stmt 0 view .LVU562
 1803 00a8 4FF4C870 		mov	r0, #400
 1804 00ac DCE7     		b	.L102
 1805              	.L110:
 353:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 1806              		.loc 1 353 5 view .LVU563
 1807 00ae 40F24C40 		movw	r0, #1100
 1808 00b2 D9E7     		b	.L102
 1809              	.L111:
 354:..//kernel/core/tos_task.c **** 
 1810              		.loc 1 354 5 view .LVU564
 1811 00b4 40F24D40 		movw	r0, #1101
 1812 00b8 D6E7     		b	.L102
 1813              	.L112:
 357:..//kernel/core/tos_task.c ****     }
 1814              		.loc 1 357 16 view .LVU565
 1815 00ba 40F26F70 		movw	r0, #1903
 1816 00be D3E7     		b	.L102
 1817              		.cfi_endproc
 1818              	.LFE123:
 1820              		.section	.text.tos_task_suspend,"ax",%progbits
 1821              		.align	1
 1822              		.global	tos_task_suspend
 1823              		.syntax unified
 1824              		.thumb
 1825              		.thumb_func
 1826              		.fpu softvfp
 1828              	tos_task_suspend:
 1829              	.LVL195:
 1830              	.LFB124:
 403:..//kernel/core/tos_task.c **** 
 404:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_suspend(k_task_t *task)
 405:..//kernel/core/tos_task.c **** {
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 61


 1831              		.loc 1 405 1 is_stmt 1 view -0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835              		.loc 1 405 1 is_stmt 0 view .LVU567
 1836 0000 38B5     		push	{r3, r4, r5, lr}
 1837              	.LCFI19:
 1838              		.cfi_def_cfa_offset 16
 1839              		.cfi_offset 3, -16
 1840              		.cfi_offset 4, -12
 1841              		.cfi_offset 5, -8
 1842              		.cfi_offset 14, -4
 406:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1843              		.loc 1 406 5 is_stmt 1 view .LVU568
 1844              	.LVL196:
 407:..//kernel/core/tos_task.c **** 
 408:..//kernel/core/tos_task.c ****     if (unlikely(!task)) {
 1845              		.loc 1 408 5 view .LVU569
 1846              		.loc 1 408 9 is_stmt 0 view .LVU570
 1847 0002 0446     		mov	r4, r0
 1848              		.loc 1 408 8 view .LVU571
 1849 0004 38B1     		cbz	r0, .L125
 1850              	.LVL197:
 1851              	.L117:
 409:..//kernel/core/tos_task.c ****         task = k_curr_task;
 410:..//kernel/core/tos_task.c ****     }
 411:..//kernel/core/tos_task.c **** 
 412:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 1852              		.loc 1 412 5 is_stmt 1 view .LVU572
 1853              		.loc 1 412 5 view .LVU573
 1854              	.LBB204:
 1855              	.LBI204:
 182:..//kernel/core/include/tos_sys.h **** {
 1856              		.loc 4 182 31 view .LVU574
 1857              	.LBB205:
 184:..//kernel/core/include/tos_sys.h **** }
 1858              		.loc 4 184 5 view .LVU575
 184:..//kernel/core/include/tos_sys.h **** }
 1859              		.loc 4 184 19 is_stmt 0 view .LVU576
 1860 0006 E288     		ldrh	r2, [r4, #6]
 1861              	.LVL198:
 184:..//kernel/core/include/tos_sys.h **** }
 1862              		.loc 4 184 19 view .LVU577
 1863              	.LBE205:
 1864              	.LBE204:
 1865              		.loc 1 412 5 view .LVU578
 1866 0008 4DF6D823 		movw	r3, #56024
 1867 000c 9A42     		cmp	r2, r3
 1868 000e 05D0     		beq	.L126
 1869              		.loc 1 412 5 view .LVU579
 1870 0010 40F24D40 		movw	r0, #1101
 1871              	.LVL199:
 1872              	.L118:
 413:..//kernel/core/tos_task.c **** 
 414:..//kernel/core/tos_task.c ****     if (knl_is_idle(task)) {
 415:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPEND_IDLE;
 416:..//kernel/core/tos_task.c ****     }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 62


 417:..//kernel/core/tos_task.c **** 
 418:..//kernel/core/tos_task.c ****     if (unlikely(knl_is_self(task)) && knl_is_sched_locked()) { // if not you, who?
 419:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 420:..//kernel/core/tos_task.c ****     }
 421:..//kernel/core/tos_task.c **** 
 422:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 423:..//kernel/core/tos_task.c **** 
 424:..//kernel/core/tos_task.c ****     if (task_state_is_ready(task)) { // kill the good kid
 425:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 426:..//kernel/core/tos_task.c ****     }
 427:..//kernel/core/tos_task.c ****     task_state_set_suspended(task);
 428:..//kernel/core/tos_task.c **** 
 429:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 430:..//kernel/core/tos_task.c ****     knl_sched();
 431:..//kernel/core/tos_task.c **** 
 432:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 433:..//kernel/core/tos_task.c **** }
 1873              		.loc 1 433 1 view .LVU580
 1874 0014 38BD     		pop	{r3, r4, r5, pc}
 1875              	.LVL200:
 1876              	.L125:
 409:..//kernel/core/tos_task.c ****     }
 1877              		.loc 1 409 9 is_stmt 1 view .LVU581
 409:..//kernel/core/tos_task.c ****     }
 1878              		.loc 1 409 14 is_stmt 0 view .LVU582
 1879 0016 164B     		ldr	r3, .L129
 1880 0018 1C68     		ldr	r4, [r3]
 1881              	.LVL201:
 409:..//kernel/core/tos_task.c ****     }
 1882              		.loc 1 409 14 view .LVU583
 1883 001a F4E7     		b	.L117
 1884              	.L126:
 414:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPEND_IDLE;
 1885              		.loc 1 414 5 is_stmt 1 view .LVU584
 414:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPEND_IDLE;
 1886              		.loc 1 414 9 is_stmt 0 view .LVU585
 1887 001c 2046     		mov	r0, r4
 1888 001e FFF7FEFF 		bl	knl_is_idle
 1889              	.LVL202:
 414:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPEND_IDLE;
 1890              		.loc 1 414 8 view .LVU586
 1891 0022 08BB     		cbnz	r0, .L122
 418:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1892              		.loc 1 418 5 is_stmt 1 view .LVU587
 418:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1893              		.loc 1 418 9 is_stmt 0 view .LVU588
 1894 0024 2046     		mov	r0, r4
 1895 0026 FFF7FEFF 		bl	knl_is_self
 1896              	.LVL203:
 418:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1897              		.loc 1 418 8 view .LVU589
 1898 002a 90B9     		cbnz	r0, .L127
 1899              	.L119:
 422:..//kernel/core/tos_task.c **** 
 1900              		.loc 1 422 5 is_stmt 1 view .LVU590
 422:..//kernel/core/tos_task.c **** 
 1901              		.loc 1 422 5 view .LVU591
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 63


 1902 002c FFF7FEFF 		bl	tos_cpu_cpsr_save
 1903              	.LVL204:
 1904 0030 0546     		mov	r5, r0
 1905              	.LVL205:
 424:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 1906              		.loc 1 424 5 view .LVU592
 1907              	.LBB206:
 1908              	.LBI206:
 347:..//kernel/core/include/tos_task.h **** {
 1909              		.loc 3 347 31 view .LVU593
 1910              	.LBB207:
 349:..//kernel/core/include/tos_task.h **** }
 1911              		.loc 3 349 5 view .LVU594
 349:..//kernel/core/include/tos_task.h **** }
 1912              		.loc 3 349 16 is_stmt 0 view .LVU595
 1913 0032 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 1914              	.LVL206:
 349:..//kernel/core/include/tos_task.h **** }
 1915              		.loc 3 349 16 view .LVU596
 1916              	.LBE207:
 1917              	.LBE206:
 424:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 1918              		.loc 1 424 8 view .LVU597
 1919 0036 9BB1     		cbz	r3, .L128
 1920              	.LVL207:
 1921              	.L120:
 427:..//kernel/core/tos_task.c **** 
 1922              		.loc 1 427 5 is_stmt 1 view .LVU598
 1923              	.LBB208:
 1924              	.LBI208:
 382:..//kernel/core/include/tos_task.h **** {
 1925              		.loc 3 382 32 view .LVU599
 1926              	.LBB209:
 384:..//kernel/core/include/tos_task.h **** }
 1927              		.loc 3 384 5 view .LVU600
 384:..//kernel/core/include/tos_task.h **** }
 1928              		.loc 3 384 17 is_stmt 0 view .LVU601
 1929 0038 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 1930 003c 43F00403 		orr	r3, r3, #4
 1931 0040 84F82030 		strb	r3, [r4, #32]
 1932              	.LVL208:
 384:..//kernel/core/include/tos_task.h **** }
 1933              		.loc 3 384 17 view .LVU602
 1934              	.LBE209:
 1935              	.LBE208:
 429:..//kernel/core/tos_task.c ****     knl_sched();
 1936              		.loc 1 429 5 is_stmt 1 view .LVU603
 429:..//kernel/core/tos_task.c ****     knl_sched();
 1937              		.loc 1 429 5 view .LVU604
 1938 0044 2846     		mov	r0, r5
 1939 0046 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1940              	.LVL209:
 430:..//kernel/core/tos_task.c **** 
 1941              		.loc 1 430 5 view .LVU605
 1942 004a FFF7FEFF 		bl	knl_sched
 1943              	.LVL210:
 432:..//kernel/core/tos_task.c **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 64


 1944              		.loc 1 432 5 view .LVU606
 432:..//kernel/core/tos_task.c **** }
 1945              		.loc 1 432 12 is_stmt 0 view .LVU607
 1946 004e 0020     		movs	r0, #0
 1947 0050 E0E7     		b	.L118
 1948              	.LVL211:
 1949              	.L127:
 418:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1950              		.loc 1 418 40 discriminator 1 view .LVU608
 1951 0052 FFF7FEFF 		bl	knl_is_sched_locked
 1952              	.LVL212:
 418:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1953              		.loc 1 418 37 discriminator 1 view .LVU609
 1954 0056 0028     		cmp	r0, #0
 1955 0058 E8D0     		beq	.L119
 419:..//kernel/core/tos_task.c ****     }
 1956              		.loc 1 419 16 view .LVU610
 1957 005a 40F2A460 		movw	r0, #1700
 1958 005e D9E7     		b	.L118
 1959              	.LVL213:
 1960              	.L128:
 425:..//kernel/core/tos_task.c ****     }
 1961              		.loc 1 425 9 is_stmt 1 view .LVU611
 1962 0060 2046     		mov	r0, r4
 1963              	.LVL214:
 425:..//kernel/core/tos_task.c ****     }
 1964              		.loc 1 425 9 is_stmt 0 view .LVU612
 1965 0062 FFF7FEFF 		bl	readyqueue_remove
 1966              	.LVL215:
 1967 0066 E7E7     		b	.L120
 1968              	.LVL216:
 1969              	.L122:
 415:..//kernel/core/tos_task.c ****     }
 1970              		.loc 1 415 16 view .LVU613
 1971 0068 40F27270 		movw	r0, #1906
 1972 006c D2E7     		b	.L118
 1973              	.L130:
 1974 006e 00BF     		.align	2
 1975              	.L129:
 1976 0070 00000000 		.word	k_curr_task
 1977              		.cfi_endproc
 1978              	.LFE124:
 1980              		.section	.text.tos_task_resume,"ax",%progbits
 1981              		.align	1
 1982              		.global	tos_task_resume
 1983              		.syntax unified
 1984              		.thumb
 1985              		.thumb_func
 1986              		.fpu softvfp
 1988              	tos_task_resume:
 1989              	.LVL217:
 1990              	.LFB125:
 434:..//kernel/core/tos_task.c **** 
 435:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_resume(k_task_t *task)
 436:..//kernel/core/tos_task.c **** {
 1991              		.loc 1 436 1 is_stmt 1 view -0
 1992              		.cfi_startproc
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 65


 1993              		@ args = 0, pretend = 0, frame = 0
 1994              		@ frame_needed = 0, uses_anonymous_args = 0
 437:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1995              		.loc 1 437 5 view .LVU615
 438:..//kernel/core/tos_task.c **** 
 439:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 1996              		.loc 1 439 5 view .LVU616
 1997              		.loc 1 439 5 view .LVU617
 1998 0000 50B3     		cbz	r0, .L135
 436:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1999              		.loc 1 436 1 is_stmt 0 view .LVU618
 2000 0002 38B5     		push	{r3, r4, r5, lr}
 2001              	.LCFI20:
 2002              		.cfi_def_cfa_offset 16
 2003              		.cfi_offset 3, -16
 2004              		.cfi_offset 4, -12
 2005              		.cfi_offset 5, -8
 2006              		.cfi_offset 14, -4
 2007 0004 0446     		mov	r4, r0
 440:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 2008              		.loc 1 440 5 is_stmt 1 view .LVU619
 2009              		.loc 1 440 5 view .LVU620
 2010              	.LVL218:
 2011              	.LBB210:
 2012              	.LBI210:
 182:..//kernel/core/include/tos_sys.h **** {
 2013              		.loc 4 182 31 view .LVU621
 2014              	.LBB211:
 184:..//kernel/core/include/tos_sys.h **** }
 2015              		.loc 4 184 5 view .LVU622
 184:..//kernel/core/include/tos_sys.h **** }
 2016              		.loc 4 184 19 is_stmt 0 view .LVU623
 2017 0006 C188     		ldrh	r1, [r0, #6]
 2018              	.LVL219:
 184:..//kernel/core/include/tos_sys.h **** }
 2019              		.loc 4 184 19 view .LVU624
 2020              	.LBE211:
 2021              	.LBE210:
 2022              		.loc 1 440 5 view .LVU625
 2023 0008 4DF6D822 		movw	r2, #56024
 2024 000c 9142     		cmp	r1, r2
 2025 000e 02D0     		beq	.L142
 2026 0010 40F24D40 		movw	r0, #1101
 2027              	.LVL220:
 2028              	.L132:
 441:..//kernel/core/tos_task.c **** 
 442:..//kernel/core/tos_task.c ****     if (unlikely(knl_is_self(task))) {
 443:..//kernel/core/tos_task.c ****         return K_ERR_TASK_RESUME_SELF;
 444:..//kernel/core/tos_task.c ****     }
 445:..//kernel/core/tos_task.c **** 
 446:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 447:..//kernel/core/tos_task.c **** 
 448:..//kernel/core/tos_task.c ****     if (!task_state_is_suspended(task)) {
 449:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 450:..//kernel/core/tos_task.c ****         knl_sched();
 451:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 452:..//kernel/core/tos_task.c ****     }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 66


 453:..//kernel/core/tos_task.c **** 
 454:..//kernel/core/tos_task.c ****     task_state_reset_suspended(task);
 455:..//kernel/core/tos_task.c ****     if (task_state_is_ready(task)) { // we are good kid now
 456:..//kernel/core/tos_task.c ****         readyqueue_add(task);
 457:..//kernel/core/tos_task.c ****     }
 458:..//kernel/core/tos_task.c **** 
 459:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 460:..//kernel/core/tos_task.c ****     knl_sched();
 461:..//kernel/core/tos_task.c **** 
 462:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 463:..//kernel/core/tos_task.c **** }
 2029              		.loc 1 463 1 view .LVU626
 2030 0014 38BD     		pop	{r3, r4, r5, pc}
 2031              	.LVL221:
 2032              	.L142:
 442:..//kernel/core/tos_task.c ****         return K_ERR_TASK_RESUME_SELF;
 2033              		.loc 1 442 5 is_stmt 1 view .LVU627
 442:..//kernel/core/tos_task.c ****         return K_ERR_TASK_RESUME_SELF;
 2034              		.loc 1 442 9 is_stmt 0 view .LVU628
 2035 0016 FFF7FEFF 		bl	knl_is_self
 2036              	.LVL222:
 442:..//kernel/core/tos_task.c ****         return K_ERR_TASK_RESUME_SELF;
 2037              		.loc 1 442 8 view .LVU629
 2038 001a 00BB     		cbnz	r0, .L137
 446:..//kernel/core/tos_task.c **** 
 2039              		.loc 1 446 5 is_stmt 1 view .LVU630
 446:..//kernel/core/tos_task.c **** 
 2040              		.loc 1 446 5 view .LVU631
 2041 001c FFF7FEFF 		bl	tos_cpu_cpsr_save
 2042              	.LVL223:
 2043 0020 0546     		mov	r5, r0
 2044              	.LVL224:
 448:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2045              		.loc 1 448 5 view .LVU632
 2046              	.LBB212:
 2047              	.LBI212:
 362:..//kernel/core/include/tos_task.h **** {
 2048              		.loc 3 362 31 view .LVU633
 2049              	.LBB213:
 364:..//kernel/core/include/tos_task.h **** }
 2050              		.loc 3 364 5 view .LVU634
 364:..//kernel/core/include/tos_task.h **** }
 2051              		.loc 3 364 16 is_stmt 0 view .LVU635
 2052 0022 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 2053              	.LVL225:
 364:..//kernel/core/include/tos_task.h **** }
 2054              		.loc 3 364 16 view .LVU636
 2055              	.LBE213:
 2056              	.LBE212:
 448:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2057              		.loc 1 448 8 view .LVU637
 2058 0026 13F0040F 		tst	r3, #4
 2059 002a 0BD0     		beq	.L143
 454:..//kernel/core/tos_task.c ****     if (task_state_is_ready(task)) { // we are good kid now
 2060              		.loc 1 454 5 is_stmt 1 view .LVU638
 2061              	.LVL226:
 2062              	.LBB214:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 67


 2063              	.LBI214:
 377:..//kernel/core/include/tos_task.h **** {
 2064              		.loc 3 377 32 view .LVU639
 2065              	.LBB215:
 379:..//kernel/core/include/tos_task.h **** }
 2066              		.loc 3 379 5 view .LVU640
 379:..//kernel/core/include/tos_task.h **** }
 2067              		.loc 3 379 17 is_stmt 0 view .LVU641
 2068 002c 03F0FB03 		and	r3, r3, #251
 2069 0030 84F82030 		strb	r3, [r4, #32]
 2070              	.LVL227:
 379:..//kernel/core/include/tos_task.h **** }
 2071              		.loc 3 379 17 view .LVU642
 2072              	.LBE215:
 2073              	.LBE214:
 455:..//kernel/core/tos_task.c ****         readyqueue_add(task);
 2074              		.loc 1 455 5 is_stmt 1 view .LVU643
 349:..//kernel/core/include/tos_task.h **** }
 2075              		.loc 3 349 5 view .LVU644
 455:..//kernel/core/tos_task.c ****         readyqueue_add(task);
 2076              		.loc 1 455 8 is_stmt 0 view .LVU645
 2077 0034 63B1     		cbz	r3, .L144
 2078              	.LVL228:
 2079              	.L134:
 459:..//kernel/core/tos_task.c ****     knl_sched();
 2080              		.loc 1 459 5 is_stmt 1 view .LVU646
 459:..//kernel/core/tos_task.c ****     knl_sched();
 2081              		.loc 1 459 5 view .LVU647
 2082 0036 2846     		mov	r0, r5
 2083 0038 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2084              	.LVL229:
 460:..//kernel/core/tos_task.c **** 
 2085              		.loc 1 460 5 view .LVU648
 2086 003c FFF7FEFF 		bl	knl_sched
 2087              	.LVL230:
 462:..//kernel/core/tos_task.c **** }
 2088              		.loc 1 462 5 view .LVU649
 462:..//kernel/core/tos_task.c **** }
 2089              		.loc 1 462 12 is_stmt 0 view .LVU650
 2090 0040 0020     		movs	r0, #0
 2091 0042 E7E7     		b	.L132
 2092              	.LVL231:
 2093              	.L143:
 449:..//kernel/core/tos_task.c ****         knl_sched();
 2094              		.loc 1 449 9 is_stmt 1 view .LVU651
 449:..//kernel/core/tos_task.c ****         knl_sched();
 2095              		.loc 1 449 9 view .LVU652
 2096 0044 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2097              	.LVL232:
 450:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 2098              		.loc 1 450 9 view .LVU653
 2099 0048 FFF7FEFF 		bl	knl_sched
 2100              	.LVL233:
 451:..//kernel/core/tos_task.c ****     }
 2101              		.loc 1 451 9 view .LVU654
 451:..//kernel/core/tos_task.c ****     }
 2102              		.loc 1 451 16 is_stmt 0 view .LVU655
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 68


 2103 004c 0020     		movs	r0, #0
 2104 004e E1E7     		b	.L132
 2105              	.LVL234:
 2106              	.L144:
 456:..//kernel/core/tos_task.c ****     }
 2107              		.loc 1 456 9 is_stmt 1 view .LVU656
 2108 0050 2046     		mov	r0, r4
 2109              	.LVL235:
 456:..//kernel/core/tos_task.c ****     }
 2110              		.loc 1 456 9 is_stmt 0 view .LVU657
 2111 0052 FFF7FEFF 		bl	readyqueue_add
 2112              	.LVL236:
 2113 0056 EEE7     		b	.L134
 2114              	.LVL237:
 2115              	.L135:
 2116              	.LCFI21:
 2117              		.cfi_def_cfa_offset 0
 2118              		.cfi_restore 3
 2119              		.cfi_restore 4
 2120              		.cfi_restore 5
 2121              		.cfi_restore 14
 439:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 2122              		.loc 1 439 5 view .LVU658
 2123 0058 40F24C40 		movw	r0, #1100
 2124              	.LVL238:
 2125              		.loc 1 463 1 view .LVU659
 2126 005c 7047     		bx	lr
 2127              	.LVL239:
 2128              	.L137:
 2129              	.LCFI22:
 2130              		.cfi_def_cfa_offset 16
 2131              		.cfi_offset 3, -16
 2132              		.cfi_offset 4, -12
 2133              		.cfi_offset 5, -8
 2134              		.cfi_offset 14, -4
 443:..//kernel/core/tos_task.c ****     }
 2135              		.loc 1 443 16 view .LVU660
 2136 005e 4FF4EE60 		mov	r0, #1904
 2137 0062 D7E7     		b	.L132
 2138              		.cfi_endproc
 2139              	.LFE125:
 2141              		.section	.text.tos_task_delay,"ax",%progbits
 2142              		.align	1
 2143              		.global	tos_task_delay
 2144              		.syntax unified
 2145              		.thumb
 2146              		.thumb_func
 2147              		.fpu softvfp
 2149              	tos_task_delay:
 2150              	.LVL240:
 2151              	.LFB126:
 464:..//kernel/core/tos_task.c **** 
 465:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_delay(k_tick_t delay)
 466:..//kernel/core/tos_task.c **** {
 2152              		.loc 1 466 1 is_stmt 1 view -0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 69


 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              		.loc 1 466 1 is_stmt 0 view .LVU662
 2157 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2158              	.LCFI23:
 2159              		.cfi_def_cfa_offset 24
 2160              		.cfi_offset 3, -24
 2161              		.cfi_offset 4, -20
 2162              		.cfi_offset 5, -16
 2163              		.cfi_offset 6, -12
 2164              		.cfi_offset 7, -8
 2165              		.cfi_offset 14, -4
 2166 0002 0546     		mov	r5, r0
 2167 0004 0C46     		mov	r4, r1
 467:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2168              		.loc 1 467 5 is_stmt 1 view .LVU663
 2169              	.LVL241:
 468:..//kernel/core/tos_task.c **** 
 469:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
 2170              		.loc 1 469 5 view .LVU664
 2171              		.loc 1 469 5 view .LVU665
 2172 0006 FFF7FEFF 		bl	knl_is_inirq
 2173              	.LVL242:
 2174              		.loc 1 469 5 is_stmt 0 view .LVU666
 2175 000a 08BB     		cbnz	r0, .L148
 470:..//kernel/core/tos_task.c **** 
 471:..//kernel/core/tos_task.c ****     if (knl_is_sched_locked()) {
 2176              		.loc 1 471 5 is_stmt 1 view .LVU667
 2177              		.loc 1 471 9 is_stmt 0 view .LVU668
 2178 000c FFF7FEFF 		bl	knl_is_sched_locked
 2179              	.LVL243:
 2180              		.loc 1 471 8 view .LVU669
 2181 0010 08BB     		cbnz	r0, .L149
 472:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 473:..//kernel/core/tos_task.c ****     }
 474:..//kernel/core/tos_task.c **** 
 475:..//kernel/core/tos_task.c ****     if (unlikely(delay == (k_tick_t)0u)) {
 2182              		.loc 1 475 5 is_stmt 1 view .LVU670
 2183              		.loc 1 475 8 is_stmt 0 view .LVU671
 2184 0012 55EA0403 		orrs	r3, r5, r4
 2185 0016 17D0     		beq	.L152
 476:..//kernel/core/tos_task.c ****         tos_task_yield();
 477:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 478:..//kernel/core/tos_task.c ****     }
 479:..//kernel/core/tos_task.c **** 
 480:..//kernel/core/tos_task.c ****     if (unlikely(delay == TOS_TIME_FOREVER)) {
 2186              		.loc 1 480 5 is_stmt 1 view .LVU672
 2187              		.loc 1 480 9 is_stmt 0 view .LVU673
 2188 0018 05EA0403 		and	r3, r5, r4
 2189              		.loc 1 480 8 view .LVU674
 2190 001c B3F1FF3F 		cmp	r3, #-1
 2191 0020 1CD0     		beq	.L150
 481:..//kernel/core/tos_task.c ****         // if you wanna delay your task forever, why don't just suspend?
 482:..//kernel/core/tos_task.c ****         return K_ERR_DELAY_FOREVER;
 483:..//kernel/core/tos_task.c ****     }
 484:..//kernel/core/tos_task.c **** 
 485:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 2192              		.loc 1 485 5 is_stmt 1 view .LVU675
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 70


 2193              		.loc 1 485 5 view .LVU676
 2194 0022 FFF7FEFF 		bl	tos_cpu_cpsr_save
 2195              	.LVL244:
 2196 0026 0746     		mov	r7, r0
 2197              	.LVL245:
 486:..//kernel/core/tos_task.c **** 
 487:..//kernel/core/tos_task.c ****     tick_list_add(k_curr_task, delay);
 2198              		.loc 1 487 5 view .LVU677
 2199 0028 0D4E     		ldr	r6, .L153
 2200 002a 2A46     		mov	r2, r5
 2201 002c 2346     		mov	r3, r4
 2202 002e 3068     		ldr	r0, [r6]
 2203              	.LVL246:
 2204              		.loc 1 487 5 is_stmt 0 view .LVU678
 2205 0030 FFF7FEFF 		bl	tick_list_add
 2206              	.LVL247:
 488:..//kernel/core/tos_task.c ****     readyqueue_remove(k_curr_task);
 2207              		.loc 1 488 5 is_stmt 1 view .LVU679
 2208 0034 3068     		ldr	r0, [r6]
 2209 0036 FFF7FEFF 		bl	readyqueue_remove
 2210              	.LVL248:
 489:..//kernel/core/tos_task.c **** 
 490:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2211              		.loc 1 490 5 view .LVU680
 2212              		.loc 1 490 5 view .LVU681
 2213 003a 3846     		mov	r0, r7
 2214 003c FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2215              	.LVL249:
 491:..//kernel/core/tos_task.c ****     knl_sched();
 2216              		.loc 1 491 5 view .LVU682
 2217 0040 FFF7FEFF 		bl	knl_sched
 2218              	.LVL250:
 492:..//kernel/core/tos_task.c **** 
 493:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 2219              		.loc 1 493 5 view .LVU683
 2220              		.loc 1 493 12 is_stmt 0 view .LVU684
 2221 0044 0020     		movs	r0, #0
 2222              	.LVL251:
 2223              	.L146:
 494:..//kernel/core/tos_task.c **** }
 2224              		.loc 1 494 1 view .LVU685
 2225 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2226              	.LVL252:
 2227              	.L152:
 476:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 2228              		.loc 1 476 9 is_stmt 1 view .LVU686
 2229 0048 FFF7FEFF 		bl	tos_task_yield
 2230              	.LVL253:
 477:..//kernel/core/tos_task.c ****     }
 2231              		.loc 1 477 9 view .LVU687
 477:..//kernel/core/tos_task.c ****     }
 2232              		.loc 1 477 16 is_stmt 0 view .LVU688
 2233 004c 0020     		movs	r0, #0
 2234 004e FAE7     		b	.L146
 2235              	.L148:
 469:..//kernel/core/tos_task.c **** 
 2236              		.loc 1 469 5 view .LVU689
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 71


 2237 0050 4FF4C870 		mov	r0, #400
 2238 0054 F7E7     		b	.L146
 2239              	.L149:
 472:..//kernel/core/tos_task.c ****     }
 2240              		.loc 1 472 16 view .LVU690
 2241 0056 40F2A460 		movw	r0, #1700
 2242 005a F4E7     		b	.L146
 2243              	.L150:
 482:..//kernel/core/tos_task.c ****     }
 2244              		.loc 1 482 16 view .LVU691
 2245 005c 6520     		movs	r0, #101
 2246 005e F2E7     		b	.L146
 2247              	.L154:
 2248              		.align	2
 2249              	.L153:
 2250 0060 00000000 		.word	k_curr_task
 2251              		.cfi_endproc
 2252              	.LFE126:
 2254              		.section	.text.tos_task_delay_abort,"ax",%progbits
 2255              		.align	1
 2256              		.global	tos_task_delay_abort
 2257              		.syntax unified
 2258              		.thumb
 2259              		.thumb_func
 2260              		.fpu softvfp
 2262              	tos_task_delay_abort:
 2263              	.LVL254:
 2264              	.LFB127:
 495:..//kernel/core/tos_task.c **** 
 496:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_delay_abort(k_task_t *task)
 497:..//kernel/core/tos_task.c **** {
 2265              		.loc 1 497 1 is_stmt 1 view -0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              		.loc 1 497 1 is_stmt 0 view .LVU693
 2270 0000 38B5     		push	{r3, r4, r5, lr}
 2271              	.LCFI24:
 2272              		.cfi_def_cfa_offset 16
 2273              		.cfi_offset 3, -16
 2274              		.cfi_offset 4, -12
 2275              		.cfi_offset 5, -8
 2276              		.cfi_offset 14, -4
 2277 0002 0446     		mov	r4, r0
 498:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2278              		.loc 1 498 5 is_stmt 1 view .LVU694
 2279              	.LVL255:
 499:..//kernel/core/tos_task.c **** 
 500:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
 2280              		.loc 1 500 5 view .LVU695
 2281              		.loc 1 500 5 view .LVU696
 2282 0004 FFF7FEFF 		bl	knl_is_inirq
 2283              	.LVL256:
 2284              		.loc 1 500 5 is_stmt 0 view .LVU697
 2285 0008 80BB     		cbnz	r0, .L160
 501:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 2286              		.loc 1 501 5 is_stmt 1 view .LVU698
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 72


 2287              		.loc 1 501 5 view .LVU699
 2288 000a 94B3     		cbz	r4, .L161
 502:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 2289              		.loc 1 502 5 view .LVU700
 2290              		.loc 1 502 5 view .LVU701
 2291              	.LVL257:
 2292              	.LBB216:
 2293              	.LBI216:
 182:..//kernel/core/include/tos_sys.h **** {
 2294              		.loc 4 182 31 view .LVU702
 2295              	.LBB217:
 184:..//kernel/core/include/tos_sys.h **** }
 2296              		.loc 4 184 5 view .LVU703
 184:..//kernel/core/include/tos_sys.h **** }
 2297              		.loc 4 184 19 is_stmt 0 view .LVU704
 2298 000c E288     		ldrh	r2, [r4, #6]
 2299              	.LVL258:
 184:..//kernel/core/include/tos_sys.h **** }
 2300              		.loc 4 184 19 view .LVU705
 2301              	.LBE217:
 2302              	.LBE216:
 2303              		.loc 1 502 5 view .LVU706
 2304 000e 4DF6D823 		movw	r3, #56024
 2305 0012 9A42     		cmp	r2, r3
 2306 0014 02D0     		beq	.L164
 2307 0016 40F24D40 		movw	r0, #1101
 2308              	.LVL259:
 2309              	.L156:
 503:..//kernel/core/tos_task.c **** 
 504:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 505:..//kernel/core/tos_task.c **** 
 506:..//kernel/core/tos_task.c ****     if (knl_is_self(task) || !task_state_is_sleeping(task)) {
 507:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 508:..//kernel/core/tos_task.c ****         return K_ERR_TASK_NOT_DELAY;
 509:..//kernel/core/tos_task.c ****     }
 510:..//kernel/core/tos_task.c **** 
 511:..//kernel/core/tos_task.c ****     if (task_state_is_suspended(task)) {
 512:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 513:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPENDED;
 514:..//kernel/core/tos_task.c ****     }
 515:..//kernel/core/tos_task.c **** 
 516:..//kernel/core/tos_task.c ****     tick_list_remove(task);
 517:..//kernel/core/tos_task.c ****     readyqueue_add(task);
 518:..//kernel/core/tos_task.c **** 
 519:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 520:..//kernel/core/tos_task.c ****     knl_sched();
 521:..//kernel/core/tos_task.c **** 
 522:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 523:..//kernel/core/tos_task.c **** }
 2310              		.loc 1 523 1 view .LVU707
 2311 001a 38BD     		pop	{r3, r4, r5, pc}
 2312              	.LVL260:
 2313              	.L164:
 504:..//kernel/core/tos_task.c **** 
 2314              		.loc 1 504 5 is_stmt 1 view .LVU708
 504:..//kernel/core/tos_task.c **** 
 2315              		.loc 1 504 5 view .LVU709
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 73


 2316 001c FFF7FEFF 		bl	tos_cpu_cpsr_save
 2317              	.LVL261:
 2318 0020 0546     		mov	r5, r0
 2319              	.LVL262:
 506:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2320              		.loc 1 506 5 view .LVU710
 506:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2321              		.loc 1 506 9 is_stmt 0 view .LVU711
 2322 0022 2046     		mov	r0, r4
 2323              	.LVL263:
 506:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2324              		.loc 1 506 9 view .LVU712
 2325 0024 FFF7FEFF 		bl	knl_is_self
 2326              	.LVL264:
 506:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2327              		.loc 1 506 8 view .LVU713
 2328 0028 A0B9     		cbnz	r0, .L157
 2329              	.LVL265:
 2330              	.LBB218:
 2331              	.LBI218:
 352:..//kernel/core/include/tos_task.h **** {
 2332              		.loc 3 352 31 is_stmt 1 view .LVU714
 2333              	.LBB219:
 354:..//kernel/core/include/tos_task.h **** }
 2334              		.loc 3 354 5 view .LVU715
 354:..//kernel/core/include/tos_task.h **** }
 2335              		.loc 3 354 16 is_stmt 0 view .LVU716
 2336 002a 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 2337              	.LVL266:
 354:..//kernel/core/include/tos_task.h **** }
 2338              		.loc 3 354 16 view .LVU717
 2339              	.LBE219:
 2340              	.LBE218:
 506:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2341              		.loc 1 506 27 view .LVU718
 2342 002e 13F0010F 		tst	r3, #1
 2343 0032 0FD0     		beq	.L157
 511:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2344              		.loc 1 511 5 is_stmt 1 view .LVU719
 2345              	.LVL267:
 364:..//kernel/core/include/tos_task.h **** }
 2346              		.loc 3 364 5 view .LVU720
 511:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2347              		.loc 1 511 8 is_stmt 0 view .LVU721
 2348 0034 13F0040F 		tst	r3, #4
 2349 0038 12D1     		bne	.L165
 516:..//kernel/core/tos_task.c ****     readyqueue_add(task);
 2350              		.loc 1 516 5 is_stmt 1 view .LVU722
 2351 003a 2046     		mov	r0, r4
 2352 003c FFF7FEFF 		bl	tick_list_remove
 2353              	.LVL268:
 517:..//kernel/core/tos_task.c **** 
 2354              		.loc 1 517 5 view .LVU723
 2355 0040 2046     		mov	r0, r4
 2356 0042 FFF7FEFF 		bl	readyqueue_add
 2357              	.LVL269:
 519:..//kernel/core/tos_task.c ****     knl_sched();
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 74


 2358              		.loc 1 519 5 view .LVU724
 519:..//kernel/core/tos_task.c ****     knl_sched();
 2359              		.loc 1 519 5 view .LVU725
 2360 0046 2846     		mov	r0, r5
 2361 0048 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2362              	.LVL270:
 520:..//kernel/core/tos_task.c **** 
 2363              		.loc 1 520 5 view .LVU726
 2364 004c FFF7FEFF 		bl	knl_sched
 2365              	.LVL271:
 522:..//kernel/core/tos_task.c **** }
 2366              		.loc 1 522 5 view .LVU727
 522:..//kernel/core/tos_task.c **** }
 2367              		.loc 1 522 12 is_stmt 0 view .LVU728
 2368 0050 0020     		movs	r0, #0
 2369 0052 E2E7     		b	.L156
 2370              	.L157:
 507:..//kernel/core/tos_task.c ****         return K_ERR_TASK_NOT_DELAY;
 2371              		.loc 1 507 9 is_stmt 1 view .LVU729
 507:..//kernel/core/tos_task.c ****         return K_ERR_TASK_NOT_DELAY;
 2372              		.loc 1 507 9 view .LVU730
 2373 0054 2846     		mov	r0, r5
 2374 0056 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2375              	.LVL272:
 508:..//kernel/core/tos_task.c ****     }
 2376              		.loc 1 508 9 view .LVU731
 508:..//kernel/core/tos_task.c ****     }
 2377              		.loc 1 508 16 is_stmt 0 view .LVU732
 2378 005a 40F26E70 		movw	r0, #1902
 2379 005e DCE7     		b	.L156
 2380              	.L165:
 512:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPENDED;
 2381              		.loc 1 512 9 is_stmt 1 view .LVU733
 512:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPENDED;
 2382              		.loc 1 512 9 view .LVU734
 2383 0060 2846     		mov	r0, r5
 2384 0062 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2385              	.LVL273:
 513:..//kernel/core/tos_task.c ****     }
 2386              		.loc 1 513 9 view .LVU735
 513:..//kernel/core/tos_task.c ****     }
 2387              		.loc 1 513 16 is_stmt 0 view .LVU736
 2388 0066 40F27170 		movw	r0, #1905
 2389 006a D6E7     		b	.L156
 2390              	.LVL274:
 2391              	.L160:
 500:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 2392              		.loc 1 500 5 view .LVU737
 2393 006c 4FF4C870 		mov	r0, #400
 2394 0070 D3E7     		b	.L156
 2395              	.L161:
 501:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 2396              		.loc 1 501 5 view .LVU738
 2397 0072 40F24C40 		movw	r0, #1100
 2398 0076 D0E7     		b	.L156
 2399              		.cfi_endproc
 2400              	.LFE127:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 75


 2402              		.section	.text.tos_task_curr_task_get,"ax",%progbits
 2403              		.align	1
 2404              		.global	tos_task_curr_task_get
 2405              		.syntax unified
 2406              		.thumb
 2407              		.thumb_func
 2408              		.fpu softvfp
 2410              	tos_task_curr_task_get:
 2411              	.LFB128:
 524:..//kernel/core/tos_task.c **** 
 525:..//kernel/core/tos_task.c **** __API__ k_task_t *tos_task_curr_task_get(void)
 526:..//kernel/core/tos_task.c **** {
 2412              		.loc 1 526 1 is_stmt 1 view -0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 0
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416 0000 38B5     		push	{r3, r4, r5, lr}
 2417              	.LCFI25:
 2418              		.cfi_def_cfa_offset 16
 2419              		.cfi_offset 3, -16
 2420              		.cfi_offset 4, -12
 2421              		.cfi_offset 5, -8
 2422              		.cfi_offset 14, -4
 527:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2423              		.loc 1 527 5 view .LVU740
 2424              	.LVL275:
 528:..//kernel/core/tos_task.c ****     k_task_t *curr_task = K_NULL;
 2425              		.loc 1 528 5 view .LVU741
 529:..//kernel/core/tos_task.c **** 
 530:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 2426              		.loc 1 530 5 view .LVU742
 2427              		.loc 1 530 5 view .LVU743
 2428 0002 FFF7FEFF 		bl	tos_cpu_cpsr_save
 2429              	.LVL276:
 2430 0006 0546     		mov	r5, r0
 2431              	.LVL277:
 531:..//kernel/core/tos_task.c ****     if (likely(tos_knl_is_running())) {
 2432              		.loc 1 531 5 view .LVU744
 2433              		.loc 1 531 9 is_stmt 0 view .LVU745
 2434 0008 FFF7FEFF 		bl	tos_knl_is_running
 2435              	.LVL278:
 2436              		.loc 1 531 8 view .LVU746
 2437 000c 30B1     		cbz	r0, .L168
 532:..//kernel/core/tos_task.c ****         curr_task = k_curr_task;
 2438              		.loc 1 532 9 is_stmt 1 view .LVU747
 2439              		.loc 1 532 19 is_stmt 0 view .LVU748
 2440 000e 044B     		ldr	r3, .L170
 2441 0010 1C68     		ldr	r4, [r3]
 2442              	.LVL279:
 2443              	.L167:
 533:..//kernel/core/tos_task.c ****     }
 534:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2444              		.loc 1 534 5 is_stmt 1 view .LVU749
 2445              		.loc 1 534 5 view .LVU750
 2446 0012 2846     		mov	r0, r5
 2447 0014 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2448              	.LVL280:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 76


 535:..//kernel/core/tos_task.c **** 
 536:..//kernel/core/tos_task.c ****     return curr_task;
 2449              		.loc 1 536 5 view .LVU751
 537:..//kernel/core/tos_task.c **** }
 2450              		.loc 1 537 1 is_stmt 0 view .LVU752
 2451 0018 2046     		mov	r0, r4
 2452 001a 38BD     		pop	{r3, r4, r5, pc}
 2453              	.LVL281:
 2454              	.L168:
 528:..//kernel/core/tos_task.c **** 
 2455              		.loc 1 528 15 view .LVU753
 2456 001c 0024     		movs	r4, #0
 2457 001e F8E7     		b	.L167
 2458              	.L171:
 2459              		.align	2
 2460              	.L170:
 2461 0020 00000000 		.word	k_curr_task
 2462              		.cfi_endproc
 2463              	.LFE128:
 2465              		.section	.text.task_default_walker,"ax",%progbits
 2466              		.align	1
 2467              		.syntax unified
 2468              		.thumb
 2469              		.thumb_func
 2470              		.fpu softvfp
 2472              	task_default_walker:
 2473              	.LVL282:
 2474              	.LFB109:
 400:..//kernel/core/include/tos_task.h **** }
 401:..//kernel/core/include/tos_task.h **** 
 402:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_set_sleeping(k_task_t *task)
 403:..//kernel/core/include/tos_task.h **** {
 404:..//kernel/core/include/tos_task.h ****     task->state |= K_TASK_STATE_SLEEP;
 405:..//kernel/core/include/tos_task.h **** }
 406:..//kernel/core/include/tos_task.h **** 
 407:..//kernel/core/include/tos_task.h **** __DEBUG__ __STATIC_INLINE__ void task_default_walker(k_task_t *task)
 408:..//kernel/core/include/tos_task.h **** {
 2475              		.loc 3 408 1 is_stmt 1 view -0
 2476              		.cfi_startproc
 2477              		@ args = 0, pretend = 0, frame = 0
 2478              		@ frame_needed = 0, uses_anonymous_args = 0
 2479              		.loc 3 408 1 is_stmt 0 view .LVU755
 2480 0000 10B5     		push	{r4, lr}
 2481              	.LCFI26:
 2482              		.cfi_def_cfa_offset 8
 2483              		.cfi_offset 4, -8
 2484              		.cfi_offset 14, -4
 2485 0002 0446     		mov	r4, r0
 409:..//kernel/core/include/tos_task.h ****     char *state_str = "ABNORMAL";
 2486              		.loc 3 409 5 is_stmt 1 view .LVU756
 2487              	.LVL283:
 410:..//kernel/core/include/tos_task.h **** 
 411:..//kernel/core/include/tos_task.h ****     state_str = state_str;
 2488              		.loc 3 411 5 view .LVU757
 412:..//kernel/core/include/tos_task.h ****     tos_kprintln("tsk name: %s", task->name);
 2489              		.loc 3 412 5 view .LVU758
 2490 0004 00F10801 		add	r1, r0, #8
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 77


 2491 0008 2748     		ldr	r0, .L184
 2492              	.LVL284:
 2493              		.loc 3 412 5 is_stmt 0 view .LVU759
 2494 000a FFF7FEFF 		bl	printf
 2495              	.LVL285:
 2496              		.loc 3 412 5 is_stmt 1 view .LVU760
 2497 000e 0A20     		movs	r0, #10
 2498 0010 FFF7FEFF 		bl	putchar
 2499              	.LVL286:
 2500              		.loc 3 412 45 view .LVU761
 413:..//kernel/core/include/tos_task.h **** 
 414:..//kernel/core/include/tos_task.h ****     if (tos_task_curr_task_get() == task) {
 2501              		.loc 3 414 5 view .LVU762
 2502              		.loc 3 414 9 is_stmt 0 view .LVU763
 2503 0014 FFF7FEFF 		bl	tos_task_curr_task_get
 2504              	.LVL287:
 2505              		.loc 3 414 8 view .LVU764
 2506 0018 8442     		cmp	r4, r0
 2507 001a 13D0     		beq	.L174
 415:..//kernel/core/include/tos_task.h ****         state_str = "RUNNING";
 416:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PENDTIMEOUT_SUSPENDED) {
 2508              		.loc 3 416 12 is_stmt 1 view .LVU765
 2509              		.loc 3 416 20 is_stmt 0 view .LVU766
 2510 001c 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 2511              		.loc 3 416 15 view .LVU767
 2512 0020 072B     		cmp	r3, #7
 2513 0022 31D0     		beq	.L175
 417:..//kernel/core/include/tos_task.h ****         state_str = "PENDTIMEOUT_SUSPENDED";
 418:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PEND_SUSPENDED) {
 2514              		.loc 3 418 12 is_stmt 1 view .LVU768
 2515              		.loc 3 418 15 is_stmt 0 view .LVU769
 2516 0024 062B     		cmp	r3, #6
 2517 0026 31D0     		beq	.L176
 419:..//kernel/core/include/tos_task.h ****         state_str = "PEND_SUSPENDED";
 420:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SLEEP_SUSPENDED) {
 2518              		.loc 3 420 12 is_stmt 1 view .LVU770
 2519              		.loc 3 420 15 is_stmt 0 view .LVU771
 2520 0028 052B     		cmp	r3, #5
 2521 002a 31D0     		beq	.L177
 421:..//kernel/core/include/tos_task.h ****         state_str = "SLEEP_SUSPENDED";
 422:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PENDTIMEOUT) {
 2522              		.loc 3 422 12 is_stmt 1 view .LVU772
 2523              		.loc 3 422 15 is_stmt 0 view .LVU773
 2524 002c 032B     		cmp	r3, #3
 2525 002e 31D0     		beq	.L178
 423:..//kernel/core/include/tos_task.h ****         state_str = "PENDTIMEOUT";
 424:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SUSPENDED) {
 2526              		.loc 3 424 12 is_stmt 1 view .LVU774
 2527              		.loc 3 424 15 is_stmt 0 view .LVU775
 2528 0030 042B     		cmp	r3, #4
 2529 0032 31D0     		beq	.L179
 425:..//kernel/core/include/tos_task.h ****         state_str = "SUSPENDED";
 426:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PEND) {
 2530              		.loc 3 426 12 is_stmt 1 view .LVU776
 2531              		.loc 3 426 15 is_stmt 0 view .LVU777
 2532 0034 022B     		cmp	r3, #2
 2533 0036 31D0     		beq	.L180
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 78


 427:..//kernel/core/include/tos_task.h ****         state_str = "PEND";
 428:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SLEEP) {
 2534              		.loc 3 428 12 is_stmt 1 view .LVU778
 2535              		.loc 3 428 15 is_stmt 0 view .LVU779
 2536 0038 012B     		cmp	r3, #1
 2537 003a 31D0     		beq	.L181
 429:..//kernel/core/include/tos_task.h ****         state_str = "SLEEP";
 430:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_READY) {
 2538              		.loc 3 430 12 is_stmt 1 view .LVU780
 2539              		.loc 3 430 15 is_stmt 0 view .LVU781
 2540 003c 002B     		cmp	r3, #0
 2541 003e 31D0     		beq	.L182
 411:..//kernel/core/include/tos_task.h ****     tos_kprintln("tsk name: %s", task->name);
 2542              		.loc 3 411 15 view .LVU782
 2543 0040 1A49     		ldr	r1, .L184+4
 2544 0042 00E0     		b	.L173
 2545              	.L174:
 415:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PENDTIMEOUT_SUSPENDED) {
 2546              		.loc 3 415 19 view .LVU783
 2547 0044 1A49     		ldr	r1, .L184+8
 2548              	.L173:
 2549              	.LVL288:
 431:..//kernel/core/include/tos_task.h ****         state_str = "READY";
 432:..//kernel/core/include/tos_task.h ****     }
 433:..//kernel/core/include/tos_task.h ****     tos_kprintln("tsk stat: %s", state_str);
 2550              		.loc 3 433 5 is_stmt 1 view .LVU784
 2551 0046 1B48     		ldr	r0, .L184+12
 2552 0048 FFF7FEFF 		bl	printf
 2553              	.LVL289:
 2554              		.loc 3 433 5 view .LVU785
 2555 004c 0A20     		movs	r0, #10
 2556 004e FFF7FEFF 		bl	putchar
 2557              	.LVL290:
 2558              		.loc 3 433 44 view .LVU786
 434:..//kernel/core/include/tos_task.h **** 
 435:..//kernel/core/include/tos_task.h ****     tos_kprintln("stk size: %d", task->stk_size);
 2559              		.loc 3 435 5 view .LVU787
 2560 0052 A16A     		ldr	r1, [r4, #40]
 2561 0054 1848     		ldr	r0, .L184+16
 2562 0056 FFF7FEFF 		bl	printf
 2563              	.LVL291:
 2564              		.loc 3 435 5 view .LVU788
 2565 005a 0A20     		movs	r0, #10
 2566 005c FFF7FEFF 		bl	putchar
 2567              	.LVL292:
 2568              		.loc 3 435 49 view .LVU789
 436:..//kernel/core/include/tos_task.h ****     tos_kprintln("stk base: 0x%p", task->stk_base);
 2569              		.loc 3 436 5 view .LVU790
 2570 0060 616A     		ldr	r1, [r4, #36]
 2571 0062 1648     		ldr	r0, .L184+20
 2572 0064 FFF7FEFF 		bl	printf
 2573              	.LVL293:
 2574              		.loc 3 436 5 view .LVU791
 2575 0068 0A20     		movs	r0, #10
 2576 006a FFF7FEFF 		bl	putchar
 2577              	.LVL294:
 2578              		.loc 3 436 51 view .LVU792
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 79


 437:..//kernel/core/include/tos_task.h ****     tos_kprintln("stk top : 0x%p", task->stk_base + task->stk_size);
 2579              		.loc 3 437 5 view .LVU793
 2580 006e 616A     		ldr	r1, [r4, #36]
 2581 0070 A36A     		ldr	r3, [r4, #40]
 2582 0072 1944     		add	r1, r1, r3
 2583 0074 1248     		ldr	r0, .L184+24
 2584 0076 FFF7FEFF 		bl	printf
 2585              	.LVL295:
 2586              		.loc 3 437 5 view .LVU794
 2587 007a 0A20     		movs	r0, #10
 2588 007c FFF7FEFF 		bl	putchar
 2589              	.LVL296:
 2590              		.loc 3 437 68 view .LVU795
 438:..//kernel/core/include/tos_task.h ****     tos_kprintf("\n");
 2591              		.loc 3 438 5 view .LVU796
 2592 0080 0A20     		movs	r0, #10
 2593 0082 FFF7FEFF 		bl	putchar
 2594              	.LVL297:
 2595              		.loc 3 438 22 view .LVU797
 439:..//kernel/core/include/tos_task.h **** }
 2596              		.loc 3 439 1 is_stmt 0 view .LVU798
 2597 0086 10BD     		pop	{r4, pc}
 2598              	.LVL298:
 2599              	.L175:
 417:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PEND_SUSPENDED) {
 2600              		.loc 3 417 19 view .LVU799
 2601 0088 0E49     		ldr	r1, .L184+28
 2602 008a DCE7     		b	.L173
 2603              	.L176:
 419:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SLEEP_SUSPENDED) {
 2604              		.loc 3 419 19 view .LVU800
 2605 008c 0E49     		ldr	r1, .L184+32
 2606 008e DAE7     		b	.L173
 2607              	.L177:
 421:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PENDTIMEOUT) {
 2608              		.loc 3 421 19 view .LVU801
 2609 0090 0E49     		ldr	r1, .L184+36
 2610 0092 D8E7     		b	.L173
 2611              	.L178:
 423:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SUSPENDED) {
 2612              		.loc 3 423 19 view .LVU802
 2613 0094 0E49     		ldr	r1, .L184+40
 2614 0096 D6E7     		b	.L173
 2615              	.L179:
 425:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PEND) {
 2616              		.loc 3 425 19 view .LVU803
 2617 0098 0E49     		ldr	r1, .L184+44
 2618 009a D4E7     		b	.L173
 2619              	.L180:
 427:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SLEEP) {
 2620              		.loc 3 427 19 view .LVU804
 2621 009c 0E49     		ldr	r1, .L184+48
 2622 009e D2E7     		b	.L173
 2623              	.L181:
 429:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_READY) {
 2624              		.loc 3 429 19 view .LVU805
 2625 00a0 0E49     		ldr	r1, .L184+52
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 80


 2626 00a2 D0E7     		b	.L173
 2627              	.L182:
 431:..//kernel/core/include/tos_task.h ****     }
 2628              		.loc 3 431 19 view .LVU806
 2629 00a4 0E49     		ldr	r1, .L184+56
 2630 00a6 CEE7     		b	.L173
 2631              	.L185:
 2632              		.align	2
 2633              	.L184:
 2634 00a8 7C000000 		.word	.LC10
 2635 00ac 70000000 		.word	.LC9
 2636 00b0 08000000 		.word	.LC1
 2637 00b4 8C000000 		.word	.LC11
 2638 00b8 9C000000 		.word	.LC12
 2639 00bc AC000000 		.word	.LC13
 2640 00c0 BC000000 		.word	.LC14
 2641 00c4 10000000 		.word	.LC2
 2642 00c8 28000000 		.word	.LC3
 2643 00cc 38000000 		.word	.LC4
 2644 00d0 48000000 		.word	.LC5
 2645 00d4 54000000 		.word	.LC6
 2646 00d8 60000000 		.word	.LC7
 2647 00dc 68000000 		.word	.LC8
 2648 00e0 00000000 		.word	.LC0
 2649              		.cfi_endproc
 2650              	.LFE109:
 2652              		.section	.text.tos_task_walkthru,"ax",%progbits
 2653              		.align	1
 2654              		.global	tos_task_walkthru
 2655              		.syntax unified
 2656              		.thumb
 2657              		.thumb_func
 2658              		.fpu softvfp
 2660              	tos_task_walkthru:
 2661              	.LVL299:
 2662              	.LFB129:
 538:..//kernel/core/tos_task.c **** 
 539:..//kernel/core/tos_task.c **** __API__ void tos_task_walkthru(k_task_walker_t walker)
 540:..//kernel/core/tos_task.c **** {
 2663              		.loc 1 540 1 is_stmt 1 view -0
 2664              		.cfi_startproc
 2665              		@ args = 0, pretend = 0, frame = 0
 2666              		@ frame_needed = 0, uses_anonymous_args = 0
 541:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2667              		.loc 1 541 5 view .LVU808
 542:..//kernel/core/tos_task.c ****     k_task_t *task;
 2668              		.loc 1 542 5 view .LVU809
 543:..//kernel/core/tos_task.c **** 
 544:..//kernel/core/tos_task.c ****     if (!walker) {
 2669              		.loc 1 544 5 view .LVU810
 2670              		.loc 1 544 8 is_stmt 0 view .LVU811
 2671 0000 A8B1     		cbz	r0, .L191
 540:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2672              		.loc 1 540 1 view .LVU812
 2673 0002 70B5     		push	{r4, r5, r6, lr}
 2674              	.LCFI27:
 2675              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 81


 2676              		.cfi_offset 4, -16
 2677              		.cfi_offset 5, -12
 2678              		.cfi_offset 6, -8
 2679              		.cfi_offset 14, -4
 2680 0004 0546     		mov	r5, r0
 545:..//kernel/core/tos_task.c ****         return;
 546:..//kernel/core/tos_task.c ****     }
 547:..//kernel/core/tos_task.c **** 
 548:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 2681              		.loc 1 548 5 is_stmt 1 view .LVU813
 2682              		.loc 1 548 5 view .LVU814
 2683 0006 FFF7FEFF 		bl	tos_cpu_cpsr_save
 2684              	.LVL300:
 2685              		.loc 1 548 5 is_stmt 0 view .LVU815
 2686 000a 0646     		mov	r6, r0
 2687              	.LVL301:
 549:..//kernel/core/tos_task.c **** 
 550:..//kernel/core/tos_task.c ****     TOS_LIST_FOR_EACH_ENTRY(task, k_task_t, stat_list, &k_stat_list) {
 2688              		.loc 1 550 5 is_stmt 1 view .LVU816
 2689 000c 084B     		ldr	r3, .L195
 2690 000e 1C68     		ldr	r4, [r3]
 2691 0010 343C     		subs	r4, r4, #52
 2692              	.LVL302:
 2693              	.L188:
 2694              		.loc 1 550 5 is_stmt 0 discriminator 1 view .LVU817
 2695 0012 04F13402 		add	r2, r4, #52
 2696 0016 064B     		ldr	r3, .L195
 2697 0018 9A42     		cmp	r2, r3
 2698 001a 04D0     		beq	.L194
 551:..//kernel/core/tos_task.c ****         walker(task);
 2699              		.loc 1 551 9 is_stmt 1 discriminator 3 view .LVU818
 2700 001c 2046     		mov	r0, r4
 2701 001e A847     		blx	r5
 2702              	.LVL303:
 550:..//kernel/core/tos_task.c ****         walker(task);
 2703              		.loc 1 550 5 is_stmt 0 discriminator 3 view .LVU819
 2704 0020 646B     		ldr	r4, [r4, #52]
 2705              	.LVL304:
 550:..//kernel/core/tos_task.c ****         walker(task);
 2706              		.loc 1 550 5 discriminator 3 view .LVU820
 2707 0022 343C     		subs	r4, r4, #52
 2708              	.LVL305:
 550:..//kernel/core/tos_task.c ****         walker(task);
 2709              		.loc 1 550 5 discriminator 3 view .LVU821
 2710 0024 F5E7     		b	.L188
 2711              	.L194:
 552:..//kernel/core/tos_task.c ****     }
 553:..//kernel/core/tos_task.c **** 
 554:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2712              		.loc 1 554 5 is_stmt 1 view .LVU822
 2713              		.loc 1 554 5 view .LVU823
 2714 0026 3046     		mov	r0, r6
 2715 0028 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2716              	.LVL306:
 555:..//kernel/core/tos_task.c **** }
 2717              		.loc 1 555 1 is_stmt 0 view .LVU824
 2718 002c 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 82


 2719              	.LVL307:
 2720              	.L191:
 2721              	.LCFI28:
 2722              		.cfi_def_cfa_offset 0
 2723              		.cfi_restore 4
 2724              		.cfi_restore 5
 2725              		.cfi_restore 6
 2726              		.cfi_restore 14
 2727              		.loc 1 555 1 view .LVU825
 2728 002e 7047     		bx	lr
 2729              	.L196:
 2730              		.align	2
 2731              	.L195:
 2732 0030 00000000 		.word	k_stat_list
 2733              		.cfi_endproc
 2734              	.LFE129:
 2736              		.section	.text.tos_task_info_display,"ax",%progbits
 2737              		.align	1
 2738              		.global	tos_task_info_display
 2739              		.syntax unified
 2740              		.thumb
 2741              		.thumb_func
 2742              		.fpu softvfp
 2744              	tos_task_info_display:
 2745              	.LFB130:
 556:..//kernel/core/tos_task.c **** 
 557:..//kernel/core/tos_task.c **** __DEBUG__ void tos_task_info_display(void)
 558:..//kernel/core/tos_task.c **** {
 2746              		.loc 1 558 1 is_stmt 1 view -0
 2747              		.cfi_startproc
 2748              		@ args = 0, pretend = 0, frame = 0
 2749              		@ frame_needed = 0, uses_anonymous_args = 0
 2750 0000 08B5     		push	{r3, lr}
 2751              	.LCFI29:
 2752              		.cfi_def_cfa_offset 8
 2753              		.cfi_offset 3, -8
 2754              		.cfi_offset 14, -4
 559:..//kernel/core/tos_task.c ****     tos_task_walkthru(task_default_walker);
 2755              		.loc 1 559 5 view .LVU827
 2756 0002 0248     		ldr	r0, .L199
 2757 0004 FFF7FEFF 		bl	tos_task_walkthru
 2758              	.LVL308:
 560:..//kernel/core/tos_task.c **** }
 2759              		.loc 1 560 1 is_stmt 0 view .LVU828
 2760 0008 08BD     		pop	{r3, pc}
 2761              	.L200:
 2762 000a 00BF     		.align	2
 2763              	.L199:
 2764 000c 00000000 		.word	task_default_walker
 2765              		.cfi_endproc
 2766              	.LFE130:
 2768              		.section	.text.tos_task_stack_draught_depth,"ax",%progbits
 2769              		.align	1
 2770              		.global	tos_task_stack_draught_depth
 2771              		.syntax unified
 2772              		.thumb
 2773              		.thumb_func
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 83


 2774              		.fpu softvfp
 2776              	tos_task_stack_draught_depth:
 2777              	.LVL309:
 2778              	.LFB131:
 561:..//kernel/core/tos_task.c **** 
 562:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_STACK_DRAUGHT_DEPTH_DETACT_EN > 0u
 563:..//kernel/core/tos_task.c **** 
 564:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_stack_draught_depth(k_task_t *task, int *depth)
 565:..//kernel/core/tos_task.c **** {
 2779              		.loc 1 565 1 is_stmt 1 view -0
 2780              		.cfi_startproc
 2781              		@ args = 0, pretend = 0, frame = 0
 2782              		@ frame_needed = 0, uses_anonymous_args = 0
 2783              		.loc 1 565 1 is_stmt 0 view .LVU830
 2784 0000 70B5     		push	{r4, r5, r6, lr}
 2785              	.LCFI30:
 2786              		.cfi_def_cfa_offset 16
 2787              		.cfi_offset 4, -16
 2788              		.cfi_offset 5, -12
 2789              		.cfi_offset 6, -8
 2790              		.cfi_offset 14, -4
 566:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2791              		.loc 1 566 5 is_stmt 1 view .LVU831
 2792              	.LVL310:
 567:..//kernel/core/tos_task.c ****     k_err_t rc;
 2793              		.loc 1 567 5 view .LVU832
 568:..//kernel/core/tos_task.c **** 
 569:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(depth);
 2794              		.loc 1 569 5 view .LVU833
 2795              		.loc 1 569 5 view .LVU834
 2796 0002 D9B1     		cbz	r1, .L204
 2797 0004 0446     		mov	r4, r0
 2798 0006 0D46     		mov	r5, r1
 570:..//kernel/core/tos_task.c **** 
 571:..//kernel/core/tos_task.c ****     if (unlikely(!task)) {
 2799              		.loc 1 571 5 view .LVU835
 2800              		.loc 1 571 8 is_stmt 0 view .LVU836
 2801 0008 40B1     		cbz	r0, .L207
 2802              	.LVL311:
 2803              	.L203:
 572:..//kernel/core/tos_task.c ****         task = k_curr_task;
 573:..//kernel/core/tos_task.c ****     }
 574:..//kernel/core/tos_task.c **** 
 575:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 2804              		.loc 1 575 5 is_stmt 1 view .LVU837
 2805              		.loc 1 575 5 view .LVU838
 2806              	.LBB220:
 2807              	.LBI220:
 182:..//kernel/core/include/tos_sys.h **** {
 2808              		.loc 4 182 31 view .LVU839
 2809              	.LBB221:
 184:..//kernel/core/include/tos_sys.h **** }
 2810              		.loc 4 184 5 view .LVU840
 184:..//kernel/core/include/tos_sys.h **** }
 2811              		.loc 4 184 19 is_stmt 0 view .LVU841
 2812 000a E288     		ldrh	r2, [r4, #6]
 2813              	.LVL312:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 84


 184:..//kernel/core/include/tos_sys.h **** }
 2814              		.loc 4 184 19 view .LVU842
 2815              	.LBE221:
 2816              	.LBE220:
 2817              		.loc 1 575 5 view .LVU843
 2818 000c 4DF6D823 		movw	r3, #56024
 2819 0010 9A42     		cmp	r2, r3
 2820 0012 06D0     		beq	.L208
 2821              		.loc 1 575 5 view .LVU844
 2822 0014 40F24D44 		movw	r4, #1101
 2823              	.LVL313:
 2824              	.L202:
 576:..//kernel/core/tos_task.c **** 
 577:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 578:..//kernel/core/tos_task.c ****     rc = cpu_task_stack_draught_depth(task->stk_base, task->stk_size, depth);
 579:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 580:..//kernel/core/tos_task.c **** 
 581:..//kernel/core/tos_task.c ****     return rc;
 582:..//kernel/core/tos_task.c **** }
 2825              		.loc 1 582 1 view .LVU845
 2826 0018 2046     		mov	r0, r4
 2827 001a 70BD     		pop	{r4, r5, r6, pc}
 2828              	.LVL314:
 2829              	.L207:
 572:..//kernel/core/tos_task.c ****     }
 2830              		.loc 1 572 9 is_stmt 1 view .LVU846
 572:..//kernel/core/tos_task.c ****     }
 2831              		.loc 1 572 14 is_stmt 0 view .LVU847
 2832 001c 094B     		ldr	r3, .L209
 2833 001e 1C68     		ldr	r4, [r3]
 2834              	.LVL315:
 572:..//kernel/core/tos_task.c ****     }
 2835              		.loc 1 572 14 view .LVU848
 2836 0020 F3E7     		b	.L203
 2837              	.L208:
 577:..//kernel/core/tos_task.c ****     rc = cpu_task_stack_draught_depth(task->stk_base, task->stk_size, depth);
 2838              		.loc 1 577 5 is_stmt 1 view .LVU849
 577:..//kernel/core/tos_task.c ****     rc = cpu_task_stack_draught_depth(task->stk_base, task->stk_size, depth);
 2839              		.loc 1 577 5 view .LVU850
 2840 0022 FFF7FEFF 		bl	tos_cpu_cpsr_save
 2841              	.LVL316:
 577:..//kernel/core/tos_task.c ****     rc = cpu_task_stack_draught_depth(task->stk_base, task->stk_size, depth);
 2842              		.loc 1 577 5 is_stmt 0 view .LVU851
 2843 0026 0646     		mov	r6, r0
 2844              	.LVL317:
 578:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2845              		.loc 1 578 5 is_stmt 1 view .LVU852
 578:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2846              		.loc 1 578 10 is_stmt 0 view .LVU853
 2847 0028 2A46     		mov	r2, r5
 2848 002a A16A     		ldr	r1, [r4, #40]
 2849 002c 606A     		ldr	r0, [r4, #36]
 2850              	.LVL318:
 578:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2851              		.loc 1 578 10 view .LVU854
 2852 002e FFF7FEFF 		bl	cpu_task_stack_draught_depth
 2853              	.LVL319:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 85


 2854 0032 0446     		mov	r4, r0
 2855              	.LVL320:
 579:..//kernel/core/tos_task.c **** 
 2856              		.loc 1 579 5 is_stmt 1 view .LVU855
 579:..//kernel/core/tos_task.c **** 
 2857              		.loc 1 579 5 view .LVU856
 2858 0034 3046     		mov	r0, r6
 2859 0036 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2860              	.LVL321:
 581:..//kernel/core/tos_task.c **** }
 2861              		.loc 1 581 5 view .LVU857
 581:..//kernel/core/tos_task.c **** }
 2862              		.loc 1 581 12 is_stmt 0 view .LVU858
 2863 003a EDE7     		b	.L202
 2864              	.LVL322:
 2865              	.L204:
 569:..//kernel/core/tos_task.c **** 
 2866              		.loc 1 569 5 view .LVU859
 2867 003c 40F24C44 		movw	r4, #1100
 2868 0040 EAE7     		b	.L202
 2869              	.L210:
 2870 0042 00BF     		.align	2
 2871              	.L209:
 2872 0044 00000000 		.word	k_curr_task
 2873              		.cfi_endproc
 2874              	.LFE131:
 2876              		.section	.rodata.task_default_walker.str1.4,"aMS",%progbits,1
 2877              		.align	2
 2878              	.LC0:
 2879 0000 52454144 		.ascii	"READY\000"
 2879      5900
 2880 0006 0000     		.space	2
 2881              	.LC1:
 2882 0008 52554E4E 		.ascii	"RUNNING\000"
 2882      494E4700 
 2883              	.LC2:
 2884 0010 50454E44 		.ascii	"PENDTIMEOUT_SUSPENDED\000"
 2884      54494D45 
 2884      4F55545F 
 2884      53555350 
 2884      454E4445 
 2885 0026 0000     		.space	2
 2886              	.LC3:
 2887 0028 50454E44 		.ascii	"PEND_SUSPENDED\000"
 2887      5F535553 
 2887      50454E44 
 2887      454400
 2888 0037 00       		.space	1
 2889              	.LC4:
 2890 0038 534C4545 		.ascii	"SLEEP_SUSPENDED\000"
 2890      505F5355 
 2890      5350454E 
 2890      44454400 
 2891              	.LC5:
 2892 0048 50454E44 		.ascii	"PENDTIMEOUT\000"
 2892      54494D45 
 2892      4F555400 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 86


 2893              	.LC6:
 2894 0054 53555350 		.ascii	"SUSPENDED\000"
 2894      454E4445 
 2894      4400
 2895 005e 0000     		.space	2
 2896              	.LC7:
 2897 0060 50454E44 		.ascii	"PEND\000"
 2897      00
 2898 0065 000000   		.space	3
 2899              	.LC8:
 2900 0068 534C4545 		.ascii	"SLEEP\000"
 2900      5000
 2901 006e 0000     		.space	2
 2902              	.LC9:
 2903 0070 41424E4F 		.ascii	"ABNORMAL\000"
 2903      524D414C 
 2903      00
 2904 0079 000000   		.space	3
 2905              	.LC10:
 2906 007c 74736B20 		.ascii	"tsk name: %s\000"
 2906      6E616D65 
 2906      3A202573 
 2906      00
 2907 0089 000000   		.space	3
 2908              	.LC11:
 2909 008c 74736B20 		.ascii	"tsk stat: %s\000"
 2909      73746174 
 2909      3A202573 
 2909      00
 2910 0099 000000   		.space	3
 2911              	.LC12:
 2912 009c 73746B20 		.ascii	"stk size: %d\000"
 2912      73697A65 
 2912      3A202564 
 2912      00
 2913 00a9 000000   		.space	3
 2914              	.LC13:
 2915 00ac 73746B20 		.ascii	"stk base: 0x%p\000"
 2915      62617365 
 2915      3A203078 
 2915      257000
 2916 00bb 00       		.space	1
 2917              	.LC14:
 2918 00bc 73746B20 		.ascii	"stk top : 0x%p\000"
 2918      746F7020 
 2918      3A203078 
 2918      257000
 2919              		.text
 2920              	.Letext0:
 2921              		.file 5 "..//kernel/core/include/tos_kerr.h"
 2922              		.file 6 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 2923              		.file 7 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 2924              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 2925              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2926              		.file 10 "d:\\arm_gcc\\8 2019-q3-update\\lib\\gcc\\arm-none-eabi\\8.3.1\\include\\stddef.h"
 2927              		.file 11 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_types.h"
 2928              		.file 12 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\reent.h"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 87


 2929              		.file 13 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\lock.h"
 2930              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2931              		.file 15 "..//arch/arm/arm-v7m/common/include/tos_cpu_types.h"
 2932              		.file 16 "..//kernel/core/include/tos_ktypes.h"
 2933              		.file 17 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\stdlib.h"
 2934              		.file 18 "..//kernel/core/include/tos_pend.h"
 2935              		.file 19 "..//kernel/core/include/tos_mutex.h"
 2936              		.file 20 "..//kernel/core/include/tos_timer.h"
 2937              		.file 21 "..//kernel/core/include/tos_mmheap.h"
 2938              		.file 22 "..//kernel/core/include/tos_sched.h"
 2939              		.file 23 "..//kernel/core/include/tos_global.h"
 2940              		.file 24 "..//arch/arm/arm-v7m/common/include/tos_cpu.h"
 2941              		.file 25 "..//kernel/core/include/tos_tick.h"
 2942              		.file 26 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\string.h"
 2943              		.file 27 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\stdio.h"
 2944              		.file 28 "<built-in>"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 88


DEFINED SYMBOLS
                            *ABS*:00000000 tos_task.c
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:16     .text.task_free:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:23     .text.task_free:00000000 task_free
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:55     .text.task_mutex_release:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:61     .text.task_mutex_release:00000000 task_mutex_release
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:113    .text.task_do_destroy:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:119    .text.task_do_destroy:00000000 task_do_destroy
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:449    .text.task_destroy_dyn:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:455    .text.task_destroy_dyn:00000000 task_destroy_dyn
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:553    .text.task_destroy_dyn:00000040 $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:558    .text.task_destroy_static:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:564    .text.task_destroy_static:00000000 task_destroy_static
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:611    .text.task_highest_pending_prio_get:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:617    .text.task_highest_pending_prio_get:00000000 task_highest_pending_prio_get
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:683    .text.tos_task_create:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:690    .text.tos_task_create:00000000 tos_task_create
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1079   .text.tos_task_create:00000124 $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1509   .text.task_exit:00000000 task_exit
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1085   .text.task_free_all:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1092   .text.task_free_all:00000000 task_free_all
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1185   .text.task_free_all:0000003c $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1190   .text.tos_task_create_dyn:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1197   .text.tos_task_create_dyn:00000000 tos_task_create_dyn
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1380   .text.tos_task_destroy:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1387   .text.tos_task_destroy:00000000 tos_task_destroy
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1498   .text.tos_task_destroy:00000054 $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1503   .text.task_exit:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1530   .text.tos_task_yield:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1537   .text.tos_task_yield:00000000 tos_task_yield
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1593   .text.tos_task_yield:0000002c $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1598   .text.tos_task_prio_change:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1605   .text.tos_task_prio_change:00000000 tos_task_prio_change
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1821   .text.tos_task_suspend:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1828   .text.tos_task_suspend:00000000 tos_task_suspend
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1976   .text.tos_task_suspend:00000070 $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1981   .text.tos_task_resume:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:1988   .text.tos_task_resume:00000000 tos_task_resume
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2142   .text.tos_task_delay:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2149   .text.tos_task_delay:00000000 tos_task_delay
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2250   .text.tos_task_delay:00000060 $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2255   .text.tos_task_delay_abort:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2262   .text.tos_task_delay_abort:00000000 tos_task_delay_abort
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2403   .text.tos_task_curr_task_get:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2410   .text.tos_task_curr_task_get:00000000 tos_task_curr_task_get
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2461   .text.tos_task_curr_task_get:00000020 $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2466   .text.task_default_walker:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2472   .text.task_default_walker:00000000 task_default_walker
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2634   .text.task_default_walker:000000a8 $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2653   .text.tos_task_walkthru:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2660   .text.tos_task_walkthru:00000000 tos_task_walkthru
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2732   .text.tos_task_walkthru:00000030 $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2737   .text.tos_task_info_display:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2744   .text.tos_task_info_display:00000000 tos_task_info_display
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2764   .text.tos_task_info_display:0000000c $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2769   .text.tos_task_stack_draught_depth:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2776   .text.tos_task_stack_draught_depth:00000000 tos_task_stack_draught_depth
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s 			page 89


C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2872   .text.tos_task_stack_draught_depth:00000044 $d
C:\Users\tianx\AppData\Local\Temp\ccNidk6k.s:2877   .rodata.task_default_walker.str1.4:00000000 $d

UNDEFINED SYMBOLS
tos_mmheap_free
mutex_release
knl_is_idle
tos_cpu_cpsr_save
tos_cpu_cpsr_restore
knl_sched
readyqueue_remove
tick_list_remove
pend_list_remove
tos_knl_sched_lock
knl_is_self
tos_knl_sched_unlock
k_dead_task_list
pend_highest_pending_prio_get
knl_is_inirq
cpu_task_stk_init
strncpy
readyqueue_add_tail
tos_knl_is_running
k_stat_list
tos_mmheap_calloc
tos_mmheap_alloc
knl_is_sched_locked
k_curr_task
pend_list_adjust
readyqueue_add_head
readyqueue_add
tick_list_add
printf
putchar
cpu_task_stack_draught_depth
