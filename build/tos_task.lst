ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tos_task.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.task_free,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	task_free:
  24              	.LVL0:
  25              	.LFB117:
  26              		.file 1 "..//kernel/core/tos_task.c"
   1:..//kernel/core/tos_task.c **** /*----------------------------------------------------------------------------
   2:..//kernel/core/tos_task.c ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/tos_task.c ****  * available.
   4:..//kernel/core/tos_task.c ****  *
   5:..//kernel/core/tos_task.c ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/tos_task.c ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/tos_task.c ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/tos_task.c ****  *
   9:..//kernel/core/tos_task.c ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/tos_task.c ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/tos_task.c ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/tos_task.c ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/tos_task.c ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/tos_task.c ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/tos_task.c ****  * within TencentOS.
  16:..//kernel/core/tos_task.c ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/tos_task.c **** 
  18:..//kernel/core/tos_task.c **** #include "tos_k.h"
  19:..//kernel/core/tos_task.c **** 
  20:..//kernel/core/tos_task.c **** __STATIC_INLINE__ void task_reset(k_task_t *task)
  21:..//kernel/core/tos_task.c **** {
  22:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
  23:..//kernel/core/tos_task.c ****     knl_object_alloc_reset(&task->knl_obj);
  24:..//kernel/core/tos_task.c **** 
  25:..//kernel/core/tos_task.c ****     tos_list_init(&task->dead_list);
  26:..//kernel/core/tos_task.c **** #endif
  27:..//kernel/core/tos_task.c ****     tos_list_init(&task->stat_list);
  28:..//kernel/core/tos_task.c ****     tos_list_init(&task->tick_list);
  29:..//kernel/core/tos_task.c ****     tos_list_init(&task->pend_list);
  30:..//kernel/core/tos_task.c **** 
  31:..//kernel/core/tos_task.c **** #if TOS_CFG_MUTEX_EN > 0u
  32:..//kernel/core/tos_task.c ****     tos_list_init(&task->mutex_own_list);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 2


  33:..//kernel/core/tos_task.c ****     task->prio_pending  = K_TASK_PRIO_INVALID;
  34:..//kernel/core/tos_task.c **** #endif
  35:..//kernel/core/tos_task.c **** 
  36:..//kernel/core/tos_task.c ****     task->pend_state    = PEND_STATE_NONE;
  37:..//kernel/core/tos_task.c ****     task->pending_obj   = (pend_obj_t *)K_NULL;
  38:..//kernel/core/tos_task.c **** 
  39:..//kernel/core/tos_task.c **** #if TOS_CFG_MESSAGE_QUEUE_EN > 0u
  40:..//kernel/core/tos_task.c ****     task->msg           = K_NULL;
  41:..//kernel/core/tos_task.c **** #endif
  42:..//kernel/core/tos_task.c **** 
  43:..//kernel/core/tos_task.c **** #if TOS_CFG_MAIL_QUEUE_EN > 0u
  44:..//kernel/core/tos_task.c ****     task->mail          = K_NULL;
  45:..//kernel/core/tos_task.c ****     task->mail_size     = 0;
  46:..//kernel/core/tos_task.c **** #endif
  47:..//kernel/core/tos_task.c **** 
  48:..//kernel/core/tos_task.c ****     TOS_OBJ_DEINIT(task);
  49:..//kernel/core/tos_task.c **** }
  50:..//kernel/core/tos_task.c **** 
  51:..//kernel/core/tos_task.c **** __STATIC__ void task_exit(void)
  52:..//kernel/core/tos_task.c **** {
  53:..//kernel/core/tos_task.c ****     tos_task_destroy(K_NULL);
  54:..//kernel/core/tos_task.c **** }
  55:..//kernel/core/tos_task.c **** 
  56:..//kernel/core/tos_task.c **** #if TOS_CFG_MUTEX_EN > 0u
  57:..//kernel/core/tos_task.c **** __STATIC__ k_prio_t task_highest_pending_prio_get(k_task_t *task)
  58:..//kernel/core/tos_task.c **** {
  59:..//kernel/core/tos_task.c ****     k_mutex_t *mutex;
  60:..//kernel/core/tos_task.c ****     k_prio_t prio, highest_prio_pending = K_TASK_PRIO_INVALID;
  61:..//kernel/core/tos_task.c **** 
  62:..//kernel/core/tos_task.c ****     TOS_LIST_FOR_EACH_ENTRY(mutex, k_mutex_t, owner_anchor, &task->mutex_own_list) {
  63:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
  64:..//kernel/core/tos_task.c ****         if (prio < highest_prio_pending) {
  65:..//kernel/core/tos_task.c ****             highest_prio_pending = prio;
  66:..//kernel/core/tos_task.c ****         }
  67:..//kernel/core/tos_task.c ****     }
  68:..//kernel/core/tos_task.c **** 
  69:..//kernel/core/tos_task.c ****     return highest_prio_pending;
  70:..//kernel/core/tos_task.c **** }
  71:..//kernel/core/tos_task.c **** 
  72:..//kernel/core/tos_task.c **** __STATIC__ void task_mutex_release(k_task_t *task)
  73:..//kernel/core/tos_task.c **** {
  74:..//kernel/core/tos_task.c ****     k_mutex_t *mutex, *tmp;
  75:..//kernel/core/tos_task.c **** 
  76:..//kernel/core/tos_task.c ****     TOS_LIST_FOR_EACH_ENTRY_SAFE(mutex, tmp, k_mutex_t, owner_anchor, &task->mutex_own_list) {
  77:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  78:..//kernel/core/tos_task.c ****     }
  79:..//kernel/core/tos_task.c **** }
  80:..//kernel/core/tos_task.c **** #endif
  81:..//kernel/core/tos_task.c **** 
  82:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_create(k_task_t *task,
  83:..//kernel/core/tos_task.c ****                                             char *name,
  84:..//kernel/core/tos_task.c ****                                             k_task_entry_t entry,
  85:..//kernel/core/tos_task.c ****                                             void *arg,
  86:..//kernel/core/tos_task.c ****                                             k_prio_t prio,
  87:..//kernel/core/tos_task.c ****                                             k_stack_t *stk_base,
  88:..//kernel/core/tos_task.c ****                                             size_t stk_size,
  89:..//kernel/core/tos_task.c ****                                             k_timeslice_t timeslice)
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 3


  90:..//kernel/core/tos_task.c **** {
  91:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
  92:..//kernel/core/tos_task.c **** 
  93:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
  94:..//kernel/core/tos_task.c **** 
  95:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
  96:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
  97:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(stk_base);
  98:..//kernel/core/tos_task.c **** 
  99:..//kernel/core/tos_task.c ****     /* try to re-create a task, kind of dangerous */
 100:..//kernel/core/tos_task.c ****     TOS_OBJ_TEST_RC(task, KNL_OBJ_TYPE_TASK, K_ERR_TASK_ALREADY_CREATED);
 101:..//kernel/core/tos_task.c **** 
 102:..//kernel/core/tos_task.c ****     if (unlikely(stk_size < K_TASK_STK_SIZE_MIN)) {
 103:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 104:..//kernel/core/tos_task.c ****     }
 105:..//kernel/core/tos_task.c **** 
 106:..//kernel/core/tos_task.c ****     if (unlikely(prio == K_TASK_PRIO_IDLE && !knl_is_idle(task))) {
 107:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 108:..//kernel/core/tos_task.c ****     }
 109:..//kernel/core/tos_task.c **** 
 110:..//kernel/core/tos_task.c ****     if (unlikely(prio > K_TASK_PRIO_IDLE)) {
 111:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 112:..//kernel/core/tos_task.c ****     }
 113:..//kernel/core/tos_task.c **** 
 114:..//kernel/core/tos_task.c ****     task_reset(task);
 115:..//kernel/core/tos_task.c ****     tos_list_add(&task->stat_list, &k_stat_list);
 116:..//kernel/core/tos_task.c **** 
 117:..//kernel/core/tos_task.c ****     TOS_OBJ_INIT(task, KNL_OBJ_TYPE_TASK);
 118:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 119:..//kernel/core/tos_task.c ****     knl_object_alloc_set_static(&task->knl_obj);
 120:..//kernel/core/tos_task.c **** #endif
 121:..//kernel/core/tos_task.c **** 
 122:..//kernel/core/tos_task.c ****     task->sp        = cpu_task_stk_init((void *)entry, arg, (void *)task_exit, stk_base, stk_size);
 123:..//kernel/core/tos_task.c ****     task->entry     = entry;
 124:..//kernel/core/tos_task.c ****     task->arg       = arg;
 125:..//kernel/core/tos_task.c ****     task->prio      = prio;
 126:..//kernel/core/tos_task.c ****     task->stk_base  = stk_base;
 127:..//kernel/core/tos_task.c ****     task->stk_size  = stk_size;
 128:..//kernel/core/tos_task.c ****     strncpy(task->name, name, K_TASK_NAME_MAX);
 129:..//kernel/core/tos_task.c **** 
 130:..//kernel/core/tos_task.c **** #if TOS_CFG_ROUND_ROBIN_EN > 0u
 131:..//kernel/core/tos_task.c ****     task->timeslice_reload = timeslice;
 132:..//kernel/core/tos_task.c **** 
 133:..//kernel/core/tos_task.c ****     if (timeslice == (k_timeslice_t)0u) {
 134:..//kernel/core/tos_task.c ****         task->timeslice = k_robin_default_timeslice;
 135:..//kernel/core/tos_task.c ****     } else {
 136:..//kernel/core/tos_task.c ****         task->timeslice = timeslice;
 137:..//kernel/core/tos_task.c ****     }
 138:..//kernel/core/tos_task.c **** #endif
 139:..//kernel/core/tos_task.c **** 
 140:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 141:..//kernel/core/tos_task.c ****     task_state_set_ready(task);
 142:..//kernel/core/tos_task.c ****     readyqueue_add_tail(task);
 143:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 144:..//kernel/core/tos_task.c **** 
 145:..//kernel/core/tos_task.c ****     if (tos_knl_is_running()) {
 146:..//kernel/core/tos_task.c ****         knl_sched();
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 4


 147:..//kernel/core/tos_task.c ****     }
 148:..//kernel/core/tos_task.c **** 
 149:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 150:..//kernel/core/tos_task.c **** }
 151:..//kernel/core/tos_task.c **** 
 152:..//kernel/core/tos_task.c **** __STATIC__ k_err_t task_do_destroy(k_task_t *task)
 153:..//kernel/core/tos_task.c **** {
 154:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 155:..//kernel/core/tos_task.c **** 
 156:..//kernel/core/tos_task.c ****     if (knl_is_idle(task)) {
 157:..//kernel/core/tos_task.c ****         return K_ERR_TASK_DESTROY_IDLE;
 158:..//kernel/core/tos_task.c ****     }
 159:..//kernel/core/tos_task.c **** 
 160:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 161:..//kernel/core/tos_task.c **** 
 162:..//kernel/core/tos_task.c **** #if TOS_CFG_MUTEX_EN > 0u
 163:..//kernel/core/tos_task.c ****     // when we die, wakeup all the people in this land.
 164:..//kernel/core/tos_task.c ****     if (!tos_list_empty(&task->mutex_own_list)) {
 165:..//kernel/core/tos_task.c ****         task_mutex_release(task);
 166:..//kernel/core/tos_task.c ****     }
 167:..//kernel/core/tos_task.c **** #endif
 168:..//kernel/core/tos_task.c **** 
 169:..//kernel/core/tos_task.c ****     if (task_state_is_ready(task)) { // that's simple, good kid
 170:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 171:..//kernel/core/tos_task.c ****     }
 172:..//kernel/core/tos_task.c ****     if (task_state_is_sleeping(task)) {
 173:..//kernel/core/tos_task.c ****         tick_list_remove(task);
 174:..//kernel/core/tos_task.c ****     }
 175:..//kernel/core/tos_task.c ****     if (task_state_is_pending(task)) {
 176:..//kernel/core/tos_task.c ****         pend_list_remove(task);
 177:..//kernel/core/tos_task.c ****     }
 178:..//kernel/core/tos_task.c **** 
 179:..//kernel/core/tos_task.c ****     tos_list_del(&task->stat_list);
 180:..//kernel/core/tos_task.c ****     task_reset(task);
 181:..//kernel/core/tos_task.c **** 
 182:..//kernel/core/tos_task.c ****     task_state_set_deleted(task);
 183:..//kernel/core/tos_task.c **** 
 184:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 185:..//kernel/core/tos_task.c ****     knl_sched();
 186:..//kernel/core/tos_task.c **** 
 187:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 188:..//kernel/core/tos_task.c **** }
 189:..//kernel/core/tos_task.c **** 
 190:..//kernel/core/tos_task.c **** __STATIC__ k_err_t task_destroy_static(k_task_t *task)
 191:..//kernel/core/tos_task.c **** {
 192:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 193:..//kernel/core/tos_task.c ****     if (!knl_object_alloc_is_static(&task->knl_obj)) {
 194:..//kernel/core/tos_task.c ****         return K_ERR_OBJ_INVALID_ALLOC_TYPE;
 195:..//kernel/core/tos_task.c ****     }
 196:..//kernel/core/tos_task.c **** #endif
 197:..//kernel/core/tos_task.c **** 
 198:..//kernel/core/tos_task.c ****     return task_do_destroy(task);
 199:..//kernel/core/tos_task.c **** }
 200:..//kernel/core/tos_task.c **** 
 201:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 202:..//kernel/core/tos_task.c **** 
 203:..//kernel/core/tos_task.c **** __STATIC__ void task_free(k_task_t *task)
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 5


 204:..//kernel/core/tos_task.c **** {
  27              		.loc 1 204 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 204 1 is_stmt 0 view .LVU1
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 0446     		mov	r4, r0
 205:..//kernel/core/tos_task.c ****     tos_mmheap_free(task->stk_base);
  38              		.loc 1 205 5 is_stmt 1 view .LVU2
  39 0004 406A     		ldr	r0, [r0, #36]
  40              	.LVL1:
  41              		.loc 1 205 5 is_stmt 0 view .LVU3
  42 0006 FFF7FEFF 		bl	tos_mmheap_free
  43              	.LVL2:
 206:..//kernel/core/tos_task.c ****     tos_mmheap_free(task);
  44              		.loc 1 206 5 is_stmt 1 view .LVU4
  45 000a 2046     		mov	r0, r4
  46 000c FFF7FEFF 		bl	tos_mmheap_free
  47              	.LVL3:
 207:..//kernel/core/tos_task.c **** }
  48              		.loc 1 207 1 is_stmt 0 view .LVU5
  49 0010 10BD     		pop	{r4, pc}
  50              		.loc 1 207 1 view .LVU6
  51              		.cfi_endproc
  52              	.LFE117:
  54              		.section	.text.task_mutex_release,"ax",%progbits
  55              		.align	1
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	task_mutex_release:
  62              	.LVL4:
  63              	.LFB113:
  73:..//kernel/core/tos_task.c ****     k_mutex_t *mutex, *tmp;
  64              		.loc 1 73 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  73:..//kernel/core/tos_task.c ****     k_mutex_t *mutex, *tmp;
  68              		.loc 1 73 1 is_stmt 0 view .LVU8
  69 0000 38B5     		push	{r3, r4, r5, lr}
  70              	.LCFI1:
  71              		.cfi_def_cfa_offset 16
  72              		.cfi_offset 3, -16
  73              		.cfi_offset 4, -12
  74              		.cfi_offset 5, -8
  75              		.cfi_offset 14, -4
  76 0002 0546     		mov	r5, r0
  74:..//kernel/core/tos_task.c **** 
  77              		.loc 1 74 5 is_stmt 1 view .LVU9
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 6


  78              		.loc 1 76 5 view .LVU10
  79 0004 806D     		ldr	r0, [r0, #88]
  80              	.LVL5:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  81              		.loc 1 76 5 is_stmt 0 view .LVU11
  82 0006 50F81849 		ldr	r4, [r0], #-24
  83              	.LVL6:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  84              		.loc 1 76 5 view .LVU12
  85 000a 183C     		subs	r4, r4, #24
  86              	.LVL7:
  87              	.L4:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  88              		.loc 1 76 5 discriminator 1 view .LVU13
  89 000c 00F11803 		add	r3, r0, #24
  90 0010 05F15802 		add	r2, r5, #88
  91 0014 9342     		cmp	r3, r2
  92 0016 06D0     		beq	.L7
  77:..//kernel/core/tos_task.c ****     }
  93              		.loc 1 77 9 is_stmt 1 discriminator 3 view .LVU14
  94 0018 FFF7FEFF 		bl	mutex_release
  95              	.LVL8:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  96              		.loc 1 76 5 is_stmt 0 discriminator 3 view .LVU15
  97 001c A369     		ldr	r3, [r4, #24]
  98              	.LVL9:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
  99              		.loc 1 76 5 discriminator 3 view .LVU16
 100 001e 2046     		mov	r0, r4
 101 0020 A3F11804 		sub	r4, r3, #24
 102              	.LVL10:
  76:..//kernel/core/tos_task.c ****         mutex_release(mutex);
 103              		.loc 1 76 5 discriminator 3 view .LVU17
 104 0024 F2E7     		b	.L4
 105              	.L7:
  79:..//kernel/core/tos_task.c **** #endif
 106              		.loc 1 79 1 view .LVU18
 107 0026 38BD     		pop	{r3, r4, r5, pc}
  79:..//kernel/core/tos_task.c **** #endif
 108              		.loc 1 79 1 view .LVU19
 109              		.cfi_endproc
 110              	.LFE113:
 112              		.section	.text.task_do_destroy,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu softvfp
 119              	task_do_destroy:
 120              	.LVL11:
 121              	.LFB115:
 153:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 122              		.loc 1 153 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 153:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 7


 126              		.loc 1 153 1 is_stmt 0 view .LVU21
 127 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 128              	.LCFI2:
 129              		.cfi_def_cfa_offset 24
 130              		.cfi_offset 3, -24
 131              		.cfi_offset 4, -20
 132              		.cfi_offset 5, -16
 133              		.cfi_offset 6, -12
 134              		.cfi_offset 7, -8
 135              		.cfi_offset 14, -4
 136 0002 0446     		mov	r4, r0
 154:..//kernel/core/tos_task.c **** 
 137              		.loc 1 154 5 is_stmt 1 view .LVU22
 138              	.LVL12:
 156:..//kernel/core/tos_task.c ****         return K_ERR_TASK_DESTROY_IDLE;
 139              		.loc 1 156 5 view .LVU23
 156:..//kernel/core/tos_task.c ****         return K_ERR_TASK_DESTROY_IDLE;
 140              		.loc 1 156 9 is_stmt 0 view .LVU24
 141 0004 FFF7FEFF 		bl	knl_is_idle
 142              	.LVL13:
 156:..//kernel/core/tos_task.c ****         return K_ERR_TASK_DESTROY_IDLE;
 143              		.loc 1 156 8 view .LVU25
 144 0008 0028     		cmp	r0, #0
 145 000a 4FD1     		bne	.L14
 160:..//kernel/core/tos_task.c **** 
 146              		.loc 1 160 5 is_stmt 1 view .LVU26
 160:..//kernel/core/tos_task.c **** 
 147              		.loc 1 160 5 view .LVU27
 148 000c FFF7FEFF 		bl	tos_cpu_cpsr_save
 149              	.LVL14:
 150 0010 0746     		mov	r7, r0
 151              	.LVL15:
 164:..//kernel/core/tos_task.c ****         task_mutex_release(task);
 152              		.loc 1 164 5 view .LVU28
 164:..//kernel/core/tos_task.c ****         task_mutex_release(task);
 153              		.loc 1 164 25 is_stmt 0 view .LVU29
 154 0012 04F15806 		add	r6, r4, #88
 155              	.LVL16:
 156              	.LBB126:
 157              	.LBI126:
 158              		.file 2 "..//kernel/core/include/tos_list.h"
   1:..//kernel/core/include/tos_list.h **** /*----------------------------------------------------------------------------
   2:..//kernel/core/include/tos_list.h ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/include/tos_list.h ****  * available.
   4:..//kernel/core/include/tos_list.h ****  *
   5:..//kernel/core/include/tos_list.h ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/include/tos_list.h ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/include/tos_list.h ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/include/tos_list.h ****  *
   9:..//kernel/core/include/tos_list.h ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/include/tos_list.h ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/include/tos_list.h ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/include/tos_list.h ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/include/tos_list.h ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/include/tos_list.h ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/include/tos_list.h ****  * within TencentOS.
  16:..//kernel/core/include/tos_list.h ****  *---------------------------------------------------------------------------*/
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 8


  17:..//kernel/core/include/tos_list.h **** 
  18:..//kernel/core/include/tos_list.h **** #ifndef _TOS_LIST_H_
  19:..//kernel/core/include/tos_list.h **** #define  _TOS_LIST_H_
  20:..//kernel/core/include/tos_list.h **** 
  21:..//kernel/core/include/tos_list.h **** __CDECLS_BEGIN
  22:..//kernel/core/include/tos_list.h **** 
  23:..//kernel/core/include/tos_list.h **** typedef struct k_list_node_st {
  24:..//kernel/core/include/tos_list.h ****     struct k_list_node_st *next;
  25:..//kernel/core/include/tos_list.h ****     struct k_list_node_st *prev;
  26:..//kernel/core/include/tos_list.h **** } k_list_t;
  27:..//kernel/core/include/tos_list.h **** 
  28:..//kernel/core/include/tos_list.h **** #define TOS_LIST_NODE(node) \
  29:..//kernel/core/include/tos_list.h ****     { &(node), &(node) }
  30:..//kernel/core/include/tos_list.h **** 
  31:..//kernel/core/include/tos_list.h **** #define TOS_LIST_DEFINE(list) \
  32:..//kernel/core/include/tos_list.h ****     k_list_t list = { &(list), &(list) }
  33:..//kernel/core/include/tos_list.h **** 
  34:..//kernel/core/include/tos_list.h **** #define TOS_LIST_ENTRY(node, type, field) \
  35:..//kernel/core/include/tos_list.h ****     TOS_CONTAINER_OF_FIELD(node, type, field)
  36:..//kernel/core/include/tos_list.h **** 
  37:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FIRST_ENTRY(list, type, field) \
  38:..//kernel/core/include/tos_list.h ****     TOS_LIST_ENTRY((list)->next, type, field)
  39:..//kernel/core/include/tos_list.h **** 
  40:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FIRST_ENTRY_OR_NULL(list, type, field) \
  41:..//kernel/core/include/tos_list.h ****     (tos_list_empty(list) ? K_NULL : TOS_LIST_FIRST_ENTRY(list, type, field))
  42:..//kernel/core/include/tos_list.h **** 
  43:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH(curr, list) \
  44:..//kernel/core/include/tos_list.h ****     for (curr = (list)->next; curr != (list); curr = curr->next)
  45:..//kernel/core/include/tos_list.h **** 
  46:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_PREV(curr, list) \
  47:..//kernel/core/include/tos_list.h ****     for (curr = (list)->prev; curr != (list); curr = curr->prev)
  48:..//kernel/core/include/tos_list.h **** 
  49:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_SAFE(curr, next, list) \
  50:..//kernel/core/include/tos_list.h ****     for (curr = (list)->next, next = curr->next; curr != (list); \
  51:..//kernel/core/include/tos_list.h ****             curr = next, next = curr->next)
  52:..//kernel/core/include/tos_list.h **** 
  53:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_PREV_SAFE(curr, next, list) \
  54:..//kernel/core/include/tos_list.h ****     for (curr = (list)->prev, next = curr->prev; \
  55:..//kernel/core/include/tos_list.h ****             curr != (list); \
  56:..//kernel/core/include/tos_list.h ****             curr = next, next = curr->prev)
  57:..//kernel/core/include/tos_list.h **** 
  58:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY(entry, type, field, list) \
  59:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->next, type, field); \
  60:..//kernel/core/include/tos_list.h ****         &entry->field != (list); \
  61:..//kernel/core/include/tos_list.h ****         entry = TOS_LIST_ENTRY(entry->field.next, type, field))
  62:..//kernel/core/include/tos_list.h **** 
  63:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY_REVERSE(entry, type, field, list) \
  64:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->prev, type, field); \
  65:..//kernel/core/include/tos_list.h ****             &entry->field != (list); \
  66:..//kernel/core/include/tos_list.h ****             entry = TOS_LIST_ENTRY(entry->field.prev, type, field))
  67:..//kernel/core/include/tos_list.h **** 
  68:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY_SAFE(entry, tmp, type, field, list) \
  69:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->next, type, field), \
  70:..//kernel/core/include/tos_list.h ****             tmp = TOS_LIST_ENTRY(entry->field.next, type, field); \
  71:..//kernel/core/include/tos_list.h ****             &entry->field != (list); \
  72:..//kernel/core/include/tos_list.h ****             entry = tmp, tmp = TOS_LIST_ENTRY(entry->field.next, type, field))
  73:..//kernel/core/include/tos_list.h **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 9


  74:..//kernel/core/include/tos_list.h **** #define TOS_LIST_FOR_EACH_ENTRY_SAFE_REVERSE(entry, tmp, type, field, list) \
  75:..//kernel/core/include/tos_list.h ****     for (entry = TOS_LIST_ENTRY((list)->prev, type, field), \
  76:..//kernel/core/include/tos_list.h ****             tmp = TOS_LIST_ENTRY(entry->field.prev, type, field); \
  77:..//kernel/core/include/tos_list.h ****             &entry->field != (list); \
  78:..//kernel/core/include/tos_list.h ****             entry = tmp, tmp = TOS_LIST_ENTRY(entry->field.prev, type, field))
  79:..//kernel/core/include/tos_list.h **** 
  80:..//kernel/core/include/tos_list.h **** __STATIC_INLINE__ void _list_add(k_list_t *node, k_list_t *prev, k_list_t *next)
  81:..//kernel/core/include/tos_list.h **** {
  82:..//kernel/core/include/tos_list.h ****     next->prev = node;
  83:..//kernel/core/include/tos_list.h ****     node->next = next;
  84:..//kernel/core/include/tos_list.h ****     node->prev = prev;
  85:..//kernel/core/include/tos_list.h ****     prev->next = node;
  86:..//kernel/core/include/tos_list.h **** }
  87:..//kernel/core/include/tos_list.h **** 
  88:..//kernel/core/include/tos_list.h **** __STATIC_INLINE__ void _list_del(k_list_t *prev, k_list_t *next)
  89:..//kernel/core/include/tos_list.h **** {
  90:..//kernel/core/include/tos_list.h ****     next->prev = prev;
  91:..//kernel/core/include/tos_list.h ****     prev->next = next;
  92:..//kernel/core/include/tos_list.h **** }
  93:..//kernel/core/include/tos_list.h **** 
  94:..//kernel/core/include/tos_list.h **** __STATIC_INLINE__ void _list_del_node(k_list_t *node)
  95:..//kernel/core/include/tos_list.h **** {
  96:..//kernel/core/include/tos_list.h ****     _list_del(node->prev, node->next);
  97:..//kernel/core/include/tos_list.h **** }
  98:..//kernel/core/include/tos_list.h **** 
  99:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_init(k_list_t *list)
 100:..//kernel/core/include/tos_list.h **** {
 101:..//kernel/core/include/tos_list.h ****     list->next = list;
 102:..//kernel/core/include/tos_list.h ****     list->prev = list;
 103:..//kernel/core/include/tos_list.h **** }
 104:..//kernel/core/include/tos_list.h **** 
 105:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_add(k_list_t *node, k_list_t *list)
 106:..//kernel/core/include/tos_list.h **** {
 107:..//kernel/core/include/tos_list.h ****     _list_add(node, list, list->next);
 108:..//kernel/core/include/tos_list.h **** }
 109:..//kernel/core/include/tos_list.h **** 
 110:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_add_tail(k_list_t *node, k_list_t *list)
 111:..//kernel/core/include/tos_list.h **** {
 112:..//kernel/core/include/tos_list.h ****     _list_add(node, list->prev, list);
 113:..//kernel/core/include/tos_list.h **** }
 114:..//kernel/core/include/tos_list.h **** 
 115:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_del(k_list_t *node)
 116:..//kernel/core/include/tos_list.h **** {
 117:..//kernel/core/include/tos_list.h ****     _list_del(node->prev, node->next);
 118:..//kernel/core/include/tos_list.h **** }
 119:..//kernel/core/include/tos_list.h **** 
 120:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_del_init(k_list_t *node)
 121:..//kernel/core/include/tos_list.h **** {
 122:..//kernel/core/include/tos_list.h ****     _list_del_node(node);
 123:..//kernel/core/include/tos_list.h ****     tos_list_init(node);
 124:..//kernel/core/include/tos_list.h **** }
 125:..//kernel/core/include/tos_list.h **** 
 126:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_move(k_list_t *node, k_list_t *list)
 127:..//kernel/core/include/tos_list.h **** {
 128:..//kernel/core/include/tos_list.h ****     _list_del_node(node);
 129:..//kernel/core/include/tos_list.h ****     tos_list_add(node, list);
 130:..//kernel/core/include/tos_list.h **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 10


 131:..//kernel/core/include/tos_list.h **** 
 132:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ void tos_list_move_tail(k_list_t *node, k_list_t *list)
 133:..//kernel/core/include/tos_list.h **** {
 134:..//kernel/core/include/tos_list.h ****     _list_del_node(node);
 135:..//kernel/core/include/tos_list.h ****     tos_list_add_tail(node, list);
 136:..//kernel/core/include/tos_list.h **** }
 137:..//kernel/core/include/tos_list.h **** 
 138:..//kernel/core/include/tos_list.h **** __API__ __STATIC_INLINE__ int tos_list_empty(const k_list_t *list)
 159              		.loc 2 138 31 is_stmt 1 view .LVU30
 160              	.LBB127:
 139:..//kernel/core/include/tos_list.h **** {
 140:..//kernel/core/include/tos_list.h ****     return list->next == list;
 161              		.loc 2 140 5 view .LVU31
 162              		.loc 2 140 16 is_stmt 0 view .LVU32
 163 0016 A36D     		ldr	r3, [r4, #88]
 164              	.LVL17:
 165              		.loc 2 140 16 view .LVU33
 166              	.LBE127:
 167              	.LBE126:
 164:..//kernel/core/tos_task.c ****         task_mutex_release(task);
 168              		.loc 1 164 8 view .LVU34
 169 0018 9E42     		cmp	r6, r3
 170 001a 02D0     		beq	.L10
 165:..//kernel/core/tos_task.c ****     }
 171              		.loc 1 165 9 is_stmt 1 view .LVU35
 172 001c 2046     		mov	r0, r4
 173              	.LVL18:
 165:..//kernel/core/tos_task.c ****     }
 174              		.loc 1 165 9 is_stmt 0 view .LVU36
 175 001e FFF7FEFF 		bl	task_mutex_release
 176              	.LVL19:
 177              	.L10:
 169:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 178              		.loc 1 169 5 is_stmt 1 view .LVU37
 179              	.LBB128:
 180              	.LBI128:
 181              		.file 3 "..//kernel/core/include/tos_task.h"
   1:..//kernel/core/include/tos_task.h **** /*----------------------------------------------------------------------------
   2:..//kernel/core/include/tos_task.h ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/include/tos_task.h ****  * available.
   4:..//kernel/core/include/tos_task.h ****  *
   5:..//kernel/core/include/tos_task.h ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/include/tos_task.h ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/include/tos_task.h ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/include/tos_task.h ****  *
   9:..//kernel/core/include/tos_task.h ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/include/tos_task.h ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/include/tos_task.h ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/include/tos_task.h ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/include/tos_task.h ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/include/tos_task.h ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/include/tos_task.h ****  * within TencentOS.
  16:..//kernel/core/include/tos_task.h ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/include/tos_task.h **** 
  18:..//kernel/core/include/tos_task.h **** #ifndef _TOS_TASK_H_
  19:..//kernel/core/include/tos_task.h **** #define  _TOS_TASK_H_
  20:..//kernel/core/include/tos_task.h **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 11


  21:..//kernel/core/include/tos_task.h **** __CDECLS_BEGIN
  22:..//kernel/core/include/tos_task.h **** 
  23:..//kernel/core/include/tos_task.h **** #define K_TASK_NAME_MAX                 (16u)
  24:..//kernel/core/include/tos_task.h **** #define K_TASK_STK_SIZE_MIN             (sizeof(cpu_context_t))
  25:..//kernel/core/include/tos_task.h **** 
  26:..//kernel/core/include/tos_task.h **** // task state is just a flag, indicating which manager list we are in.
  27:..//kernel/core/include/tos_task.h **** 
  28:..//kernel/core/include/tos_task.h **** // ready to schedule
  29:..//kernel/core/include/tos_task.h **** // a task's pend_list is in readyqueue
  30:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_READY                (k_task_state_t)0x0000
  31:..//kernel/core/include/tos_task.h **** 
  32:..//kernel/core/include/tos_task.h **** // delayed, or pend for a timeout
  33:..//kernel/core/include/tos_task.h **** // a task's tick_list is in k_tick_list
  34:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_SLEEP                (k_task_state_t)0x0001
  35:..//kernel/core/include/tos_task.h **** 
  36:..//kernel/core/include/tos_task.h **** // pend for something
  37:..//kernel/core/include/tos_task.h **** // a task's pend_list is in some pend object's list
  38:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_PEND                 (k_task_state_t)0x0002
  39:..//kernel/core/include/tos_task.h **** 
  40:..//kernel/core/include/tos_task.h **** // suspended
  41:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_SUSPENDED            (k_task_state_t)0x0004
  42:..//kernel/core/include/tos_task.h **** 
  43:..//kernel/core/include/tos_task.h **** // deleted
  44:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_DELETED              (k_task_state_t)0x0008
  45:..//kernel/core/include/tos_task.h **** 
  46:..//kernel/core/include/tos_task.h **** // actually we don't really need those TASK_STATE below, if you understand the task state deeply, t
  47:..//kernel/core/include/tos_task.h **** 
  48:..//kernel/core/include/tos_task.h **** // we are pending, also we are waitting for a timeout(eg. tos_sem_pend with a valid timeout, not TO
  49:..//kernel/core/include/tos_task.h **** // both a task's tick_list and pend_list is not empty
  50:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_PENDTIMEOUT                      (k_task_state_t)(K_TASK_STATE_PEND | K_TASK_S
  51:..//kernel/core/include/tos_task.h **** 
  52:..//kernel/core/include/tos_task.h **** // suspended when sleeping
  53:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_SLEEP_SUSPENDED                  (k_task_state_t)(K_TASK_STATE_SLEEP | K_TASK_
  54:..//kernel/core/include/tos_task.h **** 
  55:..//kernel/core/include/tos_task.h **** // suspended when pending
  56:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_PEND_SUSPENDED                   (k_task_state_t)(K_TASK_STATE_PEND | K_TASK_S
  57:..//kernel/core/include/tos_task.h **** 
  58:..//kernel/core/include/tos_task.h **** // suspended when pendtimeout
  59:..//kernel/core/include/tos_task.h **** #define K_TASK_STATE_PENDTIMEOUT_SUSPENDED            (k_task_state_t)(K_TASK_STATE_PENDTIMEOUT | K
  60:..//kernel/core/include/tos_task.h **** 
  61:..//kernel/core/include/tos_task.h **** 
  62:..//kernel/core/include/tos_task.h **** // if you configure TOS_CFG_TASK_PRIO_MAX as 10, means the priority for kernel is (0 ... 9]
  63:..//kernel/core/include/tos_task.h **** // the priority 9(TOS_CFG_TASK_PRIO_MAX - 1) is only for idle, so avaliable priority for you is (0 
  64:..//kernel/core/include/tos_task.h **** #define K_TASK_PRIO_IDLE                                (k_prio_t)(TOS_CFG_TASK_PRIO_MAX - (k_prio_
  65:..//kernel/core/include/tos_task.h **** #define K_TASK_PRIO_INVALID                             (k_prio_t)(TOS_CFG_TASK_PRIO_MAX)
  66:..//kernel/core/include/tos_task.h **** 
  67:..//kernel/core/include/tos_task.h **** typedef void (*k_task_entry_t)(void *arg);
  68:..//kernel/core/include/tos_task.h **** 
  69:..//kernel/core/include/tos_task.h **** typedef void (*k_task_walker_t)(k_task_t *task);
  70:..//kernel/core/include/tos_task.h **** 
  71:..//kernel/core/include/tos_task.h **** /**
  72:..//kernel/core/include/tos_task.h ****  * task control block
  73:..//kernel/core/include/tos_task.h ****  */
  74:..//kernel/core/include/tos_task.h **** struct k_task_st {
  75:..//kernel/core/include/tos_task.h ****     k_stack_t          *sp;                     /**< task stack pointer. This lady always comes fir
  76:..//kernel/core/include/tos_task.h **** 
  77:..//kernel/core/include/tos_task.h ****     knl_obj_t           knl_obj;                /**< just for verification, test whether current ob
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 12


  78:..//kernel/core/include/tos_task.h **** 
  79:..//kernel/core/include/tos_task.h ****     char                name[K_TASK_NAME_MAX];  /**< task name */
  80:..//kernel/core/include/tos_task.h ****     k_task_entry_t      entry;                  /**< task entry */
  81:..//kernel/core/include/tos_task.h ****     void               *arg;                    /**< argument for task entry */
  82:..//kernel/core/include/tos_task.h ****     k_task_state_t      state;                  /**< just state */
  83:..//kernel/core/include/tos_task.h ****     k_prio_t            prio;                   /**< just priority */
  84:..//kernel/core/include/tos_task.h **** 
  85:..//kernel/core/include/tos_task.h ****     k_stack_t          *stk_base;               /**< task stack base address */
  86:..//kernel/core/include/tos_task.h ****     size_t              stk_size;               /**< stack size of the task */
  87:..//kernel/core/include/tos_task.h **** 
  88:..//kernel/core/include/tos_task.h **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
  89:..//kernel/core/include/tos_task.h ****     k_list_t            dead_list;              /**< when a dynamic allocated task destroyed, we ho
  90:..//kernel/core/include/tos_task.h **** #endif
  91:..//kernel/core/include/tos_task.h **** 
  92:..//kernel/core/include/tos_task.h ****     k_list_t            stat_list;              /**< list for hooking us to the k_stat_list */
  93:..//kernel/core/include/tos_task.h **** 
  94:..//kernel/core/include/tos_task.h ****     k_tick_t            tick_expires;           /**< if we are in k_tick_list, how much time will w
  95:..//kernel/core/include/tos_task.h **** 
  96:..//kernel/core/include/tos_task.h ****     k_list_t            tick_list;              /**< list for hooking us to the k_tick_list */
  97:..//kernel/core/include/tos_task.h ****     k_list_t            pend_list;              /**< when we are ready, our pend_list is in readyqu
  98:..//kernel/core/include/tos_task.h **** 
  99:..//kernel/core/include/tos_task.h **** #if TOS_CFG_MUTEX_EN > 0u
 100:..//kernel/core/include/tos_task.h ****     k_list_t            mutex_own_list;         /**< the list hold all the mutex we own.
 101:..//kernel/core/include/tos_task.h ****                                                     When we die(tos_task_destroy), we have an oblig
 102:..//kernel/core/include/tos_task.h ****                                                     if not, those pending tasks may never get a cha
 103:..//kernel/core/include/tos_task.h ****     k_prio_t            prio_pending;           /*< when tos_task_prio_change called, we may be jus
 104:..//kernel/core/include/tos_task.h ****                                                     to avoid PRIORITY INVERSION, must make sure our
 105:..//kernel/core/include/tos_task.h ****                                                     the mutex we hold. So, if the prio_new of tos_t
 106:..//kernel/core/include/tos_task.h ****                                                     (may against the principle of PRIORITY INVERSIO
 107:..//kernel/core/include/tos_task.h ****                                                     change in the right time(mutex_old_owner_releas
 108:..//kernel/core/include/tos_task.h **** #endif
 109:..//kernel/core/include/tos_task.h **** 
 110:..//kernel/core/include/tos_task.h ****     pend_obj_t         *pending_obj;            /**< if we are pending, which pend object's list we
 111:..//kernel/core/include/tos_task.h ****     pend_state_t        pend_state;             /**< why we wakeup from a pend */
 112:..//kernel/core/include/tos_task.h **** 
 113:..//kernel/core/include/tos_task.h **** #if TOS_CFG_ROUND_ROBIN_EN > 0u
 114:..//kernel/core/include/tos_task.h ****     k_timeslice_t       timeslice_reload;   /**< if current time slice is used up, use time_slice_r
 115:..//kernel/core/include/tos_task.h ****     k_timeslice_t       timeslice;          /**< how much time slice left for us? */
 116:..//kernel/core/include/tos_task.h **** #endif
 117:..//kernel/core/include/tos_task.h **** 
 118:..//kernel/core/include/tos_task.h **** #if (TOS_CFG_MESSAGE_QUEUE_EN > 0u) || (TOS_CFG_PRIORITY_MESSAGE_QUEUE_EN > 0u)
 119:..//kernel/core/include/tos_task.h ****     void               *msg;                /**< if we pend a message queue successfully, our msg w
 120:..//kernel/core/include/tos_task.h **** #endif
 121:..//kernel/core/include/tos_task.h **** 
 122:..//kernel/core/include/tos_task.h **** #if (TOS_CFG_MAIL_QUEUE_EN > 0u) || (TOS_CFG_PRIORITY_MAIL_QUEUE_EN > 0u)
 123:..//kernel/core/include/tos_task.h ****     void               *mail;               /**< if we pend a mail queue successfully, our mail and
 124:..//kernel/core/include/tos_task.h ****     size_t              mail_size;
 125:..//kernel/core/include/tos_task.h **** #endif
 126:..//kernel/core/include/tos_task.h **** 
 127:..//kernel/core/include/tos_task.h **** #if TOS_CFG_EVENT_EN > 0u
 128:..//kernel/core/include/tos_task.h ****     k_opt_t             opt_event_pend;     /**< if we are pending an event, what's the option for 
 129:..//kernel/core/include/tos_task.h ****     k_event_flag_t      flag_expect;        /**< if we are pending an event, what event flag are we
 130:..//kernel/core/include/tos_task.h ****     k_event_flag_t     *flag_match;         /**< if we pend an event successfully, flag_match will 
 131:..//kernel/core/include/tos_task.h ****                                                     by tos_event_pend to the caller */
 132:..//kernel/core/include/tos_task.h **** #endif
 133:..//kernel/core/include/tos_task.h **** };
 134:..//kernel/core/include/tos_task.h **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 13


 135:..//kernel/core/include/tos_task.h **** /**
 136:..//kernel/core/include/tos_task.h ****  * @brief Create a task.
 137:..//kernel/core/include/tos_task.h ****  * create a task.
 138:..//kernel/core/include/tos_task.h ****  *
 139:..//kernel/core/include/tos_task.h ****  * @attention None
 140:..//kernel/core/include/tos_task.h ****  *
 141:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task.
 142:..//kernel/core/include/tos_task.h ****  * @param[in]   name        name of the task.
 143:..//kernel/core/include/tos_task.h ****  * @param[in]   entry       running entry of the task.
 144:..//kernel/core/include/tos_task.h ****  * @param[in]   arg         argument for the entry of the task.
 145:..//kernel/core/include/tos_task.h ****  * @param[in]   prio        priority of the task.
 146:..//kernel/core/include/tos_task.h ****  * @param[in]   stk_base    stack base address of the task.
 147:..//kernel/core/include/tos_task.h ****  * @param[in]   stk_size    stack size of the task.
 148:..//kernel/core/include/tos_task.h ****  * @param[in]   timeslice   time slice of the task.
 149:..//kernel/core/include/tos_task.h ****  *
 150:..//kernel/core/include/tos_task.h ****  * @return  errcode
 151:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_STK_SIZE_INVALID    stack size is invalid.
 152:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_PRIO_INVALID        priority is invalid.
 153:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE                     return successfully.
 154:..//kernel/core/include/tos_task.h ****  */
 155:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_create(k_task_t *task,
 156:..//kernel/core/include/tos_task.h ****                                             char *name,
 157:..//kernel/core/include/tos_task.h ****                                             k_task_entry_t entry,
 158:..//kernel/core/include/tos_task.h ****                                             void *arg,
 159:..//kernel/core/include/tos_task.h ****                                             k_prio_t prio,
 160:..//kernel/core/include/tos_task.h ****                                             k_stack_t *stk_base,
 161:..//kernel/core/include/tos_task.h ****                                             size_t stk_size,
 162:..//kernel/core/include/tos_task.h ****                                             k_timeslice_t timeslice);
 163:..//kernel/core/include/tos_task.h **** 
 164:..//kernel/core/include/tos_task.h **** /**
 165:..//kernel/core/include/tos_task.h ****  * @brief Destroy a task.
 166:..//kernel/core/include/tos_task.h ****  * delete a task.
 167:..//kernel/core/include/tos_task.h ****  *
 168:..//kernel/core/include/tos_task.h ****  * @attention None
 169:..//kernel/core/include/tos_task.h ****  *
 170:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task to be deleted.
 171:..//kernel/core/include/tos_task.h ****  *
 172:..//kernel/core/include/tos_task.h ****  * @return  errcode
 173:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_DESTROY_IDLE    attempt to destroy idle task.
 174:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE                 return successfully.
 175:..//kernel/core/include/tos_task.h ****  */
 176:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_destroy(k_task_t *task);
 177:..//kernel/core/include/tos_task.h **** 
 178:..//kernel/core/include/tos_task.h **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 179:..//kernel/core/include/tos_task.h **** 
 180:..//kernel/core/include/tos_task.h **** /**
 181:..//kernel/core/include/tos_task.h ****  * @brief Create a task with a dynamic allocated task handler and stack.
 182:..//kernel/core/include/tos_task.h ****  * create a task with a dynamic allocated task handler and stack.
 183:..//kernel/core/include/tos_task.h ****  *
 184:..//kernel/core/include/tos_task.h ****  * @param[out]  task        dynamic allocated task handler.
 185:..//kernel/core/include/tos_task.h ****  * @param[in]   name        name of the task.
 186:..//kernel/core/include/tos_task.h ****  * @param[in]   entry       running entry of the task.
 187:..//kernel/core/include/tos_task.h ****  * @param[in]   arg         argument for the entry of the task.
 188:..//kernel/core/include/tos_task.h ****  * @param[in]   prio        priority of the task.
 189:..//kernel/core/include/tos_task.h ****  * @param[in]   stk_size    stack size of the task.
 190:..//kernel/core/include/tos_task.h ****  * @param[in]   timeslice   time slice of the task.
 191:..//kernel/core/include/tos_task.h ****  *
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 14


 192:..//kernel/core/include/tos_task.h ****  * @return  errcode
 193:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_STK_SIZE_INVALID    stack size is invalid.
 194:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_PRIO_INVALID        priority is invalid.
 195:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_OUT_OF_MEMORY       out of memory(insufficient heap memory).
 196:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE                     return successfully.
 197:..//kernel/core/include/tos_task.h ****  */
 198:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_create_dyn(k_task_t **task,
 199:..//kernel/core/include/tos_task.h ****                                                     char *name,
 200:..//kernel/core/include/tos_task.h ****                                                     k_task_entry_t entry,
 201:..//kernel/core/include/tos_task.h ****                                                     void *arg,
 202:..//kernel/core/include/tos_task.h ****                                                     k_prio_t prio,
 203:..//kernel/core/include/tos_task.h ****                                                     size_t stk_size,
 204:..//kernel/core/include/tos_task.h ****                                                     k_timeslice_t timeslice);
 205:..//kernel/core/include/tos_task.h **** 
 206:..//kernel/core/include/tos_task.h **** #endif
 207:..//kernel/core/include/tos_task.h **** 
 208:..//kernel/core/include/tos_task.h **** /**
 209:..//kernel/core/include/tos_task.h ****  * @brief Delay current task for ticks.
 210:..//kernel/core/include/tos_task.h ****  * Delay for a specified amount of ticks.
 211:..//kernel/core/include/tos_task.h ****  *
 212:..//kernel/core/include/tos_task.h ****  * @attention None
 213:..//kernel/core/include/tos_task.h ****  *
 214:..//kernel/core/include/tos_task.h ****  * @param[in]   delay       amount of ticks to delay.
 215:..//kernel/core/include/tos_task.h ****  *
 216:..//kernel/core/include/tos_task.h ****  * @return  errcode
 217:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_DELAY_ZERO     delay is zero.
 218:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE           return successfully.
 219:..//kernel/core/include/tos_task.h ****  */
 220:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_delay(k_tick_t delay);
 221:..//kernel/core/include/tos_task.h **** 
 222:..//kernel/core/include/tos_task.h **** /**
 223:..//kernel/core/include/tos_task.h ****  * @brief Resume task from delay.
 224:..//kernel/core/include/tos_task.h ****  * Resume a delayed task from delay.
 225:..//kernel/core/include/tos_task.h ****  *
 226:..//kernel/core/include/tos_task.h ****  * @attention None
 227:..//kernel/core/include/tos_task.h ****  *
 228:..//kernel/core/include/tos_task.h ****  * @param[in]   task        the pointer to the handler of the task.
 229:..//kernel/core/include/tos_task.h ****  *
 230:..//kernel/core/include/tos_task.h ****  * @return  errcode
 231:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_NOT_DELAY         task is not delayed.
 232:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_SUSPENDED         task is suspended.
 233:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE                   return successfully.
 234:..//kernel/core/include/tos_task.h ****  */
 235:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_delay_abort(k_task_t *task);
 236:..//kernel/core/include/tos_task.h **** 
 237:..//kernel/core/include/tos_task.h **** /**
 238:..//kernel/core/include/tos_task.h ****  * @brief Suspend a task.
 239:..//kernel/core/include/tos_task.h ****  * Bring a task to sleep.
 240:..//kernel/core/include/tos_task.h ****  *
 241:..//kernel/core/include/tos_task.h ****  * @attention None
 242:..//kernel/core/include/tos_task.h ****  *
 243:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task to be resume.
 244:..//kernel/core/include/tos_task.h ****  *
 245:..//kernel/core/include/tos_task.h ****  * @return  errcode
 246:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_SUSPEND_IDLE  attempt to suspend idle task.
 247:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE               return successfully.
 248:..//kernel/core/include/tos_task.h ****  */
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 15


 249:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_suspend(k_task_t *task);
 250:..//kernel/core/include/tos_task.h **** 
 251:..//kernel/core/include/tos_task.h **** /**
 252:..//kernel/core/include/tos_task.h ****  * @brief Resume a task.
 253:..//kernel/core/include/tos_task.h ****  * Bring a task to run.
 254:..//kernel/core/include/tos_task.h ****  *
 255:..//kernel/core/include/tos_task.h ****  * @attention None
 256:..//kernel/core/include/tos_task.h ****  *
 257:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task to be resume.
 258:..//kernel/core/include/tos_task.h ****  *
 259:..//kernel/core/include/tos_task.h ****  * @return  errcode
 260:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_RESUME_SELF   attempt to resume self-task.
 261:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE               return successfully.
 262:..//kernel/core/include/tos_task.h ****  */
 263:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_resume(k_task_t *task);
 264:..//kernel/core/include/tos_task.h **** 
 265:..//kernel/core/include/tos_task.h **** /**
 266:..//kernel/core/include/tos_task.h ****  * @brief Change task priority.
 267:..//kernel/core/include/tos_task.h ****  * Change a priority of the task.
 268:..//kernel/core/include/tos_task.h ****  *
 269:..//kernel/core/include/tos_task.h ****  * @attention None
 270:..//kernel/core/include/tos_task.h ****  *
 271:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task to be resume.
 272:..//kernel/core/include/tos_task.h ****  * @param[in]   prio_new    new priority.
 273:..//kernel/core/include/tos_task.h ****  *
 274:..//kernel/core/include/tos_task.h ****  * @return  errcode
 275:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_PRIO_INVALID  new priority is invalid.
 276:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE               return successfully.
 277:..//kernel/core/include/tos_task.h ****  */
 278:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_prio_change(k_task_t *task, k_prio_t prio_new);
 279:..//kernel/core/include/tos_task.h **** 
 280:..//kernel/core/include/tos_task.h **** /**
 281:..//kernel/core/include/tos_task.h ****  * @brief Quit schedule this time.
 282:..//kernel/core/include/tos_task.h ****  * Quit the cpu this time.
 283:..//kernel/core/include/tos_task.h ****  *
 284:..//kernel/core/include/tos_task.h ****  * @attention None
 285:..//kernel/core/include/tos_task.h ****  *
 286:..//kernel/core/include/tos_task.h ****  * @param   None
 287:..//kernel/core/include/tos_task.h ****  *
 288:..//kernel/core/include/tos_task.h ****  * @return  None
 289:..//kernel/core/include/tos_task.h ****  */
 290:..//kernel/core/include/tos_task.h **** __API__ void    tos_task_yield(void);
 291:..//kernel/core/include/tos_task.h **** 
 292:..//kernel/core/include/tos_task.h **** /**
 293:..//kernel/core/include/tos_task.h ****  * @brief Get current running task.
 294:..//kernel/core/include/tos_task.h ****  * Get current running task.
 295:..//kernel/core/include/tos_task.h ****  *
 296:..//kernel/core/include/tos_task.h ****  * @attention if kernel is not running, you'll get K_NULL
 297:..//kernel/core/include/tos_task.h ****  *
 298:..//kernel/core/include/tos_task.h ****  * @param   None
 299:..//kernel/core/include/tos_task.h ****  *
 300:..//kernel/core/include/tos_task.h ****  * @return  current running task handler
 301:..//kernel/core/include/tos_task.h ****  */
 302:..//kernel/core/include/tos_task.h **** __API__ k_task_t *tos_task_curr_task_get(void);
 303:..//kernel/core/include/tos_task.h **** 
 304:..//kernel/core/include/tos_task.h **** 
 305:..//kernel/core/include/tos_task.h **** #if TOS_CFG_TASK_STACK_DRAUGHT_DEPTH_DETACT_EN > 0u
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 16


 306:..//kernel/core/include/tos_task.h **** 
 307:..//kernel/core/include/tos_task.h **** /**
 308:..//kernel/core/include/tos_task.h ****  * @brief Get the maximum stack draught depth of a task.
 309:..//kernel/core/include/tos_task.h ****  *
 310:..//kernel/core/include/tos_task.h ****  * @attention None
 311:..//kernel/core/include/tos_task.h ****  *
 312:..//kernel/core/include/tos_task.h ****  * @param[in]   task        pointer to the handler of the task.
 313:..//kernel/core/include/tos_task.h ****  * @param[out]  depth       task stack draught depth.
 314:..//kernel/core/include/tos_task.h ****  *
 315:..//kernel/core/include/tos_task.h ****  * @return  errcode
 316:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_NONE                 get depth successfully.
 317:..//kernel/core/include/tos_task.h ****  * @retval  #K_ERR_TASK_STK_OVERFLOW    task stack is overflow.
 318:..//kernel/core/include/tos_task.h ****  */
 319:..//kernel/core/include/tos_task.h **** __API__ k_err_t tos_task_stack_draught_depth(k_task_t *task, int *depth);
 320:..//kernel/core/include/tos_task.h **** 
 321:..//kernel/core/include/tos_task.h **** #endif
 322:..//kernel/core/include/tos_task.h **** 
 323:..//kernel/core/include/tos_task.h **** /**
 324:..//kernel/core/include/tos_task.h ****  * @brief Walk through all the tasks in the statistic list.
 325:..//kernel/core/include/tos_task.h ****  *
 326:..//kernel/core/include/tos_task.h ****  * @attention None
 327:..//kernel/core/include/tos_task.h ****  *
 328:..//kernel/core/include/tos_task.h ****  * @param[in]   walker      a function involved when meeting each tasks in the list.
 329:..//kernel/core/include/tos_task.h ****  *
 330:..//kernel/core/include/tos_task.h ****  * @return  None
 331:..//kernel/core/include/tos_task.h ****  */
 332:..//kernel/core/include/tos_task.h **** __API__ void tos_task_walkthru(k_task_walker_t walker);
 333:..//kernel/core/include/tos_task.h **** 
 334:..//kernel/core/include/tos_task.h **** /**
 335:..//kernel/core/include/tos_task.h ****  * @brief A debug API for display all tasks information.
 336:..//kernel/core/include/tos_task.h ****  *
 337:..//kernel/core/include/tos_task.h ****  * @attention None
 338:..//kernel/core/include/tos_task.h ****  *
 339:..//kernel/core/include/tos_task.h ****  * @param   None
 340:..//kernel/core/include/tos_task.h ****  *
 341:..//kernel/core/include/tos_task.h ****  * @return  None
 342:..//kernel/core/include/tos_task.h ****  */
 343:..//kernel/core/include/tos_task.h **** __DEBUG__ void tos_task_info_display(void);
 344:..//kernel/core/include/tos_task.h **** 
 345:..//kernel/core/include/tos_task.h **** __KNL__ void task_free_all(void);
 346:..//kernel/core/include/tos_task.h **** 
 347:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ int task_state_is_ready(k_task_t *task)
 182              		.loc 3 347 31 view .LVU38
 183              	.LBB129:
 348:..//kernel/core/include/tos_task.h **** {
 349:..//kernel/core/include/tos_task.h ****     return task->state == K_TASK_STATE_READY;
 184              		.loc 3 349 5 view .LVU39
 185              		.loc 3 349 16 is_stmt 0 view .LVU40
 186 0022 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 187              	.LVL20:
 188              		.loc 3 349 16 view .LVU41
 189              	.LBE129:
 190              	.LBE128:
 169:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 191              		.loc 1 169 8 view .LVU42
 192 0026 002B     		cmp	r3, #0
 193 0028 34D0     		beq	.L16
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 17


 194              	.L11:
 172:..//kernel/core/tos_task.c ****         tick_list_remove(task);
 195              		.loc 1 172 5 is_stmt 1 view .LVU43
 196              	.LVL21:
 197              	.LBB130:
 198              	.LBI130:
 350:..//kernel/core/include/tos_task.h **** }
 351:..//kernel/core/include/tos_task.h **** 
 352:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ int task_state_is_sleeping(k_task_t *task)
 199              		.loc 3 352 31 view .LVU44
 200              	.LBB131:
 353:..//kernel/core/include/tos_task.h **** {
 354:..//kernel/core/include/tos_task.h ****     return task->state & K_TASK_STATE_SLEEP;
 201              		.loc 3 354 5 view .LVU45
 202              		.loc 3 354 16 is_stmt 0 view .LVU46
 203 002a 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 204              	.LVL22:
 205              		.loc 3 354 16 view .LVU47
 206              	.LBE131:
 207              	.LBE130:
 172:..//kernel/core/tos_task.c ****         tick_list_remove(task);
 208              		.loc 1 172 8 view .LVU48
 209 002e 13F0010F 		tst	r3, #1
 210 0032 33D1     		bne	.L17
 211              	.L12:
 175:..//kernel/core/tos_task.c ****         pend_list_remove(task);
 212              		.loc 1 175 5 is_stmt 1 view .LVU49
 213              	.LVL23:
 214              	.LBB132:
 215              	.LBI132:
 355:..//kernel/core/include/tos_task.h **** }
 356:..//kernel/core/include/tos_task.h **** 
 357:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ int task_state_is_pending(k_task_t *task)
 216              		.loc 3 357 31 view .LVU50
 217              	.LBB133:
 358:..//kernel/core/include/tos_task.h **** {
 359:..//kernel/core/include/tos_task.h ****     return task->state & K_TASK_STATE_PEND;
 218              		.loc 3 359 5 view .LVU51
 219              		.loc 3 359 16 is_stmt 0 view .LVU52
 220 0034 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 221              	.LVL24:
 222              		.loc 3 359 16 view .LVU53
 223              	.LBE133:
 224              	.LBE132:
 175:..//kernel/core/tos_task.c ****         pend_list_remove(task);
 225              		.loc 1 175 8 view .LVU54
 226 0038 13F0020F 		tst	r3, #2
 227 003c 32D1     		bne	.L18
 228              	.L13:
 179:..//kernel/core/tos_task.c ****     task_reset(task);
 229              		.loc 1 179 5 is_stmt 1 view .LVU55
 230              	.LVL25:
 231              	.LBB134:
 232              	.LBI134:
 115:..//kernel/core/include/tos_list.h **** {
 233              		.loc 2 115 32 view .LVU56
 234              	.LBB135:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 18


 117:..//kernel/core/include/tos_list.h **** }
 235              		.loc 2 117 5 view .LVU57
 117:..//kernel/core/include/tos_list.h **** }
 236              		.loc 2 117 19 is_stmt 0 view .LVU58
 237 003e A36B     		ldr	r3, [r4, #56]
 117:..//kernel/core/include/tos_list.h **** }
 238              		.loc 2 117 31 view .LVU59
 239 0040 626B     		ldr	r2, [r4, #52]
 240              	.LVL26:
 241              	.LBB136:
 242              	.LBI136:
  88:..//kernel/core/include/tos_list.h **** {
 243              		.loc 2 88 24 is_stmt 1 view .LVU60
 244              	.LBB137:
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 245              		.loc 2 90 5 view .LVU61
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 246              		.loc 2 90 16 is_stmt 0 view .LVU62
 247 0042 5360     		str	r3, [r2, #4]
  91:..//kernel/core/include/tos_list.h **** }
 248              		.loc 2 91 5 is_stmt 1 view .LVU63
  91:..//kernel/core/include/tos_list.h **** }
 249              		.loc 2 91 16 is_stmt 0 view .LVU64
 250 0044 1A60     		str	r2, [r3]
 251              	.LVL27:
  91:..//kernel/core/include/tos_list.h **** }
 252              		.loc 2 91 16 view .LVU65
 253              	.LBE137:
 254              	.LBE136:
 255              	.LBE135:
 256              	.LBE134:
 180:..//kernel/core/tos_task.c **** 
 257              		.loc 1 180 5 is_stmt 1 view .LVU66
 258              	.LBB138:
 259              	.LBI138:
  20:..//kernel/core/tos_task.c **** {
 260              		.loc 1 20 24 view .LVU67
 261              	.LBB139:
  23:..//kernel/core/tos_task.c **** 
 262              		.loc 1 23 5 view .LVU68
 263              	.LBB140:
 264              	.LBI140:
 265              		.file 4 "..//kernel/core/include/tos_sys.h"
   1:..//kernel/core/include/tos_sys.h **** /*----------------------------------------------------------------------------
   2:..//kernel/core/include/tos_sys.h ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/include/tos_sys.h ****  * available.
   4:..//kernel/core/include/tos_sys.h ****  *
   5:..//kernel/core/include/tos_sys.h ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/include/tos_sys.h ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/include/tos_sys.h ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/include/tos_sys.h ****  *
   9:..//kernel/core/include/tos_sys.h ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/include/tos_sys.h ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/include/tos_sys.h ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/include/tos_sys.h ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/include/tos_sys.h ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/include/tos_sys.h ****  * as the other licenses applicable to the third-party components included
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 19


  15:..//kernel/core/include/tos_sys.h ****  * within TencentOS.
  16:..//kernel/core/include/tos_sys.h ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/include/tos_sys.h **** 
  18:..//kernel/core/include/tos_sys.h **** #ifndef _TOS_SYS_H_
  19:..//kernel/core/include/tos_sys.h **** #define  _TOS_SYS_H_
  20:..//kernel/core/include/tos_sys.h **** 
  21:..//kernel/core/include/tos_sys.h **** __CDECLS_BEGIN
  22:..//kernel/core/include/tos_sys.h **** 
  23:..//kernel/core/include/tos_sys.h **** #define K_NESTING_LIMIT_IRQ             (k_nesting_t)250u
  24:..//kernel/core/include/tos_sys.h **** #define K_NESTING_LIMIT_SCHED_LOCK      (k_nesting_t)250u
  25:..//kernel/core/include/tos_sys.h **** 
  26:..//kernel/core/include/tos_sys.h **** typedef enum knl_state_en {
  27:..//kernel/core/include/tos_sys.h ****     KNL_STATE_STOPPED,
  28:..//kernel/core/include/tos_sys.h ****     KNL_STATE_RUNNING,
  29:..//kernel/core/include/tos_sys.h **** } knl_state_t;
  30:..//kernel/core/include/tos_sys.h **** 
  31:..//kernel/core/include/tos_sys.h **** // some kind of magic number, mainly for identifing whether the object is initialized, or whether u
  32:..//kernel/core/include/tos_sys.h **** typedef enum knl_obj_type_en {
  33:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_NONE                           = 0x0000,
  34:..//kernel/core/include/tos_sys.h **** 
  35:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BINARY_HEAP                    = 0xDAD0,
  36:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BITMAP                         = 0xDAD1,
  37:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_CHAR_FIFO                      = 0xDAD2,
  38:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MMBLK_POOL                     = 0xDAD3,
  39:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MSG_QUEUE                      = 0xDAD4,
  40:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_QUEUE                 = 0xDAD5,
  41:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_RING_QUEUE                     = 0xDAD6,
  42:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_STOPWATCH                      = 0xDAD7,
  43:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_TASK                           = 0xDAD8,
  44:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_TIMER                          = 0xDAD9,
  45:..//kernel/core/include/tos_sys.h **** 
  46:..//kernel/core/include/tos_sys.h ****     // ipc object
  47:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BARRIER                        = 0x0BEE,
  48:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_COMPLETION                     = 0x1BEE,
  49:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_COUNTDOWNLATCH                 = 0x2BEE,
  50:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_EVENT                          = 0x3BEE,
  51:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MAIL_QUEUE                     = 0x4BEE,
  52:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MESSAGE_QUEUE                  = 0x5BEE,
  53:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MUTEX                          = 0x6BEE,
  54:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_MAIL_QUEUE            = 0x7BEE,
  55:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_MESSAGE_QUEUE         = 0x8BEE,
  56:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_RWLOCK                         = 0x9BEE,
  57:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_SEMAPHORE                      = 0xABEE,
  58:..//kernel/core/include/tos_sys.h **** } knl_obj_type_t;
  59:..//kernel/core/include/tos_sys.h **** 
  60:..//kernel/core/include/tos_sys.h **** typedef enum knl_obj_alloc_type_en {
  61:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_NONE,
  62:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_STATIC,
  63:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_DYNAMIC,
  64:..//kernel/core/include/tos_sys.h **** } knl_obj_alloc_type_t;
  65:..//kernel/core/include/tos_sys.h **** 
  66:..//kernel/core/include/tos_sys.h **** typedef struct knl_object_st {
  67:..//kernel/core/include/tos_sys.h ****     knl_obj_alloc_type_t    alloc_type; /* is dynamic allocated(using tos_mmheap) or static memory?
  68:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_OBJECT_VERIFY_EN > 0u
  69:..//kernel/core/include/tos_sys.h ****     knl_obj_type_t          type;
  70:..//kernel/core/include/tos_sys.h **** #endif
  71:..//kernel/core/include/tos_sys.h **** } knl_obj_t;
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 20


  72:..//kernel/core/include/tos_sys.h **** 
  73:..//kernel/core/include/tos_sys.h **** /**
  74:..//kernel/core/include/tos_sys.h ****  * @brief Initialize the kernel.
  75:..//kernel/core/include/tos_sys.h ****  * initialize the tos tiny kernel.
  76:..//kernel/core/include/tos_sys.h ****  *
  77:..//kernel/core/include/tos_sys.h ****  * @attention None
  78:..//kernel/core/include/tos_sys.h ****  *
  79:..//kernel/core/include/tos_sys.h ****  * @param   None
  80:..//kernel/core/include/tos_sys.h ****  *
  81:..//kernel/core/include/tos_sys.h ****  * @return  errcode
  82:..//kernel/core/include/tos_sys.h ****  * @retval  Non-#K_ERR_NONE               return failed.
  83:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_NONE                   return successfully.
  84:..//kernel/core/include/tos_sys.h ****  */
  85:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_init(void);
  86:..//kernel/core/include/tos_sys.h **** 
  87:..//kernel/core/include/tos_sys.h **** /**
  88:..//kernel/core/include/tos_sys.h ****  * @brief Start the kernel.
  89:..//kernel/core/include/tos_sys.h ****  * get the kernel start to run, which means start the multitask scheduling.
  90:..//kernel/core/include/tos_sys.h ****  *
  91:..//kernel/core/include/tos_sys.h ****  * @attention None
  92:..//kernel/core/include/tos_sys.h ****  *
  93:..//kernel/core/include/tos_sys.h ****  * @param   None
  94:..//kernel/core/include/tos_sys.h ****  *
  95:..//kernel/core/include/tos_sys.h ****  * @return  errcode
  96:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_KNL_RUNNING            the kernel is already running.
  97:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_NONE                   return successfully.
  98:..//kernel/core/include/tos_sys.h ****  */
  99:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_start(void);
 100:..//kernel/core/include/tos_sys.h **** 
 101:..//kernel/core/include/tos_sys.h **** /**
 102:..//kernel/core/include/tos_sys.h ****  * @brief Get the kernel state.
 103:..//kernel/core/include/tos_sys.h ****  * whether the kernel is running.
 104:..//kernel/core/include/tos_sys.h ****  *
 105:..//kernel/core/include/tos_sys.h ****  * @attention None
 106:..//kernel/core/include/tos_sys.h ****  *
 107:..//kernel/core/include/tos_sys.h ****  * @param   None
 108:..//kernel/core/include/tos_sys.h ****  *
 109:..//kernel/core/include/tos_sys.h ****  * @return  whether the kernel is running.
 110:..//kernel/core/include/tos_sys.h ****  * @retval  Non-0                           the kernel is running.
 111:..//kernel/core/include/tos_sys.h ****  * @retval  0                               the kernel is not running.
 112:..//kernel/core/include/tos_sys.h ****  */
 113:..//kernel/core/include/tos_sys.h **** __API__ int     tos_knl_is_running(void);
 114:..//kernel/core/include/tos_sys.h **** 
 115:..//kernel/core/include/tos_sys.h **** /**
 116:..//kernel/core/include/tos_sys.h ****  * @brief Kernel enter the interrupt.
 117:..//kernel/core/include/tos_sys.h ****  * this function should be called in the entrance of a interrupt handler.
 118:..//kernel/core/include/tos_sys.h ****  *
 119:..//kernel/core/include/tos_sys.h ****  * @attention None
 120:..//kernel/core/include/tos_sys.h ****  *
 121:..//kernel/core/include/tos_sys.h ****  * @param   None
 122:..//kernel/core/include/tos_sys.h ****  *
 123:..//kernel/core/include/tos_sys.h ****  * @return  None
 124:..//kernel/core/include/tos_sys.h ****  */
 125:..//kernel/core/include/tos_sys.h **** __API__ void    tos_knl_irq_enter(void);
 126:..//kernel/core/include/tos_sys.h **** 
 127:..//kernel/core/include/tos_sys.h **** /**
 128:..//kernel/core/include/tos_sys.h ****  * @brief Kernel exit the interrupt.
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 21


 129:..//kernel/core/include/tos_sys.h ****  * this function should be called in the exit of a interrupt handler.
 130:..//kernel/core/include/tos_sys.h ****  *
 131:..//kernel/core/include/tos_sys.h ****  * @attention None
 132:..//kernel/core/include/tos_sys.h ****  *
 133:..//kernel/core/include/tos_sys.h ****  * @param   None
 134:..//kernel/core/include/tos_sys.h ****  *
 135:..//kernel/core/include/tos_sys.h ****  * @return  None
 136:..//kernel/core/include/tos_sys.h ****  */
 137:..//kernel/core/include/tos_sys.h **** __API__ void    tos_knl_irq_leave(void);
 138:..//kernel/core/include/tos_sys.h **** 
 139:..//kernel/core/include/tos_sys.h **** /**
 140:..//kernel/core/include/tos_sys.h ****  * @brief Lock the scheduler.
 141:..//kernel/core/include/tos_sys.h ****  * prevent the kernel from performing task schedule.
 142:..//kernel/core/include/tos_sys.h ****  *
 143:..//kernel/core/include/tos_sys.h ****  * @attention None
 144:..//kernel/core/include/tos_sys.h ****  *
 145:..//kernel/core/include/tos_sys.h ****  * @param   None
 146:..//kernel/core/include/tos_sys.h ****  *
 147:..//kernel/core/include/tos_sys.h ****  * @return  errcode
 148:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_KNL_NOT_RUNNING         the kernel is not running.
 149:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_LOCK_NESTING_OVERFLOW   the schedule lock nesting is overflow.
 150:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_NONE                    return successfully.
 151:..//kernel/core/include/tos_sys.h ****  */
 152:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_sched_lock(void);
 153:..//kernel/core/include/tos_sys.h **** 
 154:..//kernel/core/include/tos_sys.h **** /**
 155:..//kernel/core/include/tos_sys.h ****  * @brief Unlock the scheduler.
 156:..//kernel/core/include/tos_sys.h ****  * re-enable the task schedule.
 157:..//kernel/core/include/tos_sys.h ****  *
 158:..//kernel/core/include/tos_sys.h ****  * @attention None
 159:..//kernel/core/include/tos_sys.h ****  *
 160:..//kernel/core/include/tos_sys.h ****  * @param   None
 161:..//kernel/core/include/tos_sys.h ****  *
 162:..//kernel/core/include/tos_sys.h ****  * @return  errcode
 163:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_KNL_NOT_RUNNING         the kernel is not running.
 164:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_SCHED_NOT_LOCKED        the scheduler is not locked.
 165:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_NONE                    return successfully.
 166:..//kernel/core/include/tos_sys.h ****  */
 167:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_sched_unlock(void);
 168:..//kernel/core/include/tos_sys.h **** 
 169:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_TICKLESS_EN > 0u
 170:..//kernel/core/include/tos_sys.h **** __KNL__ k_tick_t knl_next_expires_get(void);
 171:..//kernel/core/include/tos_sys.h **** #endif
 172:..//kernel/core/include/tos_sys.h **** 
 173:..//kernel/core/include/tos_sys.h **** __KNL__ void    knl_sched(void);
 174:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_sched_locked(void);
 175:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_inirq(void);
 176:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_idle(k_task_t *task);
 177:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_self(k_task_t *task);
 178:..//kernel/core/include/tos_sys.h **** __KNL__ k_err_t knl_idle_init(void);
 179:..//kernel/core/include/tos_sys.h **** 
 180:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_OBJECT_VERIFY_EN > 0u
 181:..//kernel/core/include/tos_sys.h **** 
 182:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ int knl_object_verify(knl_obj_t *knl_obj, knl_obj_type_t type)
 183:..//kernel/core/include/tos_sys.h **** {
 184:..//kernel/core/include/tos_sys.h ****     return knl_obj->type == type;
 185:..//kernel/core/include/tos_sys.h **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 22


 186:..//kernel/core/include/tos_sys.h **** 
 187:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_init(knl_obj_t *knl_obj, knl_obj_type_t type)
 188:..//kernel/core/include/tos_sys.h **** {
 189:..//kernel/core/include/tos_sys.h ****     knl_obj->type = type;
 190:..//kernel/core/include/tos_sys.h **** }
 191:..//kernel/core/include/tos_sys.h **** 
 192:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_deinit(knl_obj_t *knl_obj)
 193:..//kernel/core/include/tos_sys.h **** {
 194:..//kernel/core/include/tos_sys.h ****     knl_obj->type = KNL_OBJ_TYPE_NONE;
 195:..//kernel/core/include/tos_sys.h **** }
 196:..//kernel/core/include/tos_sys.h **** 
 197:..//kernel/core/include/tos_sys.h **** #endif
 198:..//kernel/core/include/tos_sys.h **** 
 199:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_alloc_reset(knl_obj_t *knl_obj)
 266              		.loc 4 199 32 view .LVU69
 267              	.LBB141:
 200:..//kernel/core/include/tos_sys.h **** {
 201:..//kernel/core/include/tos_sys.h ****     knl_obj->alloc_type = KNL_OBJ_ALLOC_TYPE_NONE;
 268              		.loc 4 201 5 view .LVU70
 269              		.loc 4 201 25 is_stmt 0 view .LVU71
 270 0046 0025     		movs	r5, #0
 271 0048 2571     		strb	r5, [r4, #4]
 272              	.LVL28:
 273              		.loc 4 201 25 view .LVU72
 274              	.LBE141:
 275              	.LBE140:
  25:..//kernel/core/tos_task.c **** #endif
 276              		.loc 1 25 5 is_stmt 1 view .LVU73
 277 004a 04F12C03 		add	r3, r4, #44
 278              	.LVL29:
 279              	.LBB142:
 280              	.LBI142:
  99:..//kernel/core/include/tos_list.h **** {
 281              		.loc 2 99 32 view .LVU74
 282              	.LBB143:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 283              		.loc 2 101 5 view .LVU75
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 284              		.loc 2 101 16 is_stmt 0 view .LVU76
 285 004e E362     		str	r3, [r4, #44]
 102:..//kernel/core/include/tos_list.h **** }
 286              		.loc 2 102 5 is_stmt 1 view .LVU77
 102:..//kernel/core/include/tos_list.h **** }
 287              		.loc 2 102 16 is_stmt 0 view .LVU78
 288 0050 2363     		str	r3, [r4, #48]
 289              	.LVL30:
 102:..//kernel/core/include/tos_list.h **** }
 290              		.loc 2 102 16 view .LVU79
 291              	.LBE143:
 292              	.LBE142:
  27:..//kernel/core/tos_task.c ****     tos_list_init(&task->tick_list);
 293              		.loc 1 27 5 is_stmt 1 view .LVU80
 294 0052 04F13403 		add	r3, r4, #52
 295              	.LVL31:
 296              	.LBB144:
 297              	.LBI144:
  99:..//kernel/core/include/tos_list.h **** {
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 23


 298              		.loc 2 99 32 view .LVU81
 299              	.LBB145:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 300              		.loc 2 101 5 view .LVU82
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 301              		.loc 2 101 16 is_stmt 0 view .LVU83
 302 0056 6363     		str	r3, [r4, #52]
 102:..//kernel/core/include/tos_list.h **** }
 303              		.loc 2 102 5 is_stmt 1 view .LVU84
 102:..//kernel/core/include/tos_list.h **** }
 304              		.loc 2 102 16 is_stmt 0 view .LVU85
 305 0058 A363     		str	r3, [r4, #56]
 306              	.LVL32:
 102:..//kernel/core/include/tos_list.h **** }
 307              		.loc 2 102 16 view .LVU86
 308              	.LBE145:
 309              	.LBE144:
  28:..//kernel/core/tos_task.c ****     tos_list_init(&task->pend_list);
 310              		.loc 1 28 5 is_stmt 1 view .LVU87
 311 005a 04F14803 		add	r3, r4, #72
 312              	.LVL33:
 313              	.LBB146:
 314              	.LBI146:
  99:..//kernel/core/include/tos_list.h **** {
 315              		.loc 2 99 32 view .LVU88
 316              	.LBB147:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 317              		.loc 2 101 5 view .LVU89
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 318              		.loc 2 101 16 is_stmt 0 view .LVU90
 319 005e A364     		str	r3, [r4, #72]
 102:..//kernel/core/include/tos_list.h **** }
 320              		.loc 2 102 5 is_stmt 1 view .LVU91
 102:..//kernel/core/include/tos_list.h **** }
 321              		.loc 2 102 16 is_stmt 0 view .LVU92
 322 0060 E364     		str	r3, [r4, #76]
 323              	.LVL34:
 102:..//kernel/core/include/tos_list.h **** }
 324              		.loc 2 102 16 view .LVU93
 325              	.LBE147:
 326              	.LBE146:
  29:..//kernel/core/tos_task.c **** 
 327              		.loc 1 29 5 is_stmt 1 view .LVU94
 328 0062 04F15003 		add	r3, r4, #80
 329              	.LVL35:
 330              	.LBB148:
 331              	.LBI148:
  99:..//kernel/core/include/tos_list.h **** {
 332              		.loc 2 99 32 view .LVU95
 333              	.LBB149:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 334              		.loc 2 101 5 view .LVU96
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 335              		.loc 2 101 16 is_stmt 0 view .LVU97
 336 0066 2365     		str	r3, [r4, #80]
 102:..//kernel/core/include/tos_list.h **** }
 337              		.loc 2 102 5 is_stmt 1 view .LVU98
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 24


 102:..//kernel/core/include/tos_list.h **** }
 338              		.loc 2 102 16 is_stmt 0 view .LVU99
 339 0068 6365     		str	r3, [r4, #84]
 340              	.LVL36:
 102:..//kernel/core/include/tos_list.h **** }
 341              		.loc 2 102 16 view .LVU100
 342              	.LBE149:
 343              	.LBE148:
  32:..//kernel/core/tos_task.c ****     task->prio_pending  = K_TASK_PRIO_INVALID;
 344              		.loc 1 32 5 is_stmt 1 view .LVU101
 345              	.LBB150:
 346              	.LBI150:
  99:..//kernel/core/include/tos_list.h **** {
 347              		.loc 2 99 32 view .LVU102
 348              	.LBB151:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 349              		.loc 2 101 5 view .LVU103
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 350              		.loc 2 101 16 is_stmt 0 view .LVU104
 351 006a A665     		str	r6, [r4, #88]
 102:..//kernel/core/include/tos_list.h **** }
 352              		.loc 2 102 5 is_stmt 1 view .LVU105
 102:..//kernel/core/include/tos_list.h **** }
 353              		.loc 2 102 16 is_stmt 0 view .LVU106
 354 006c E665     		str	r6, [r4, #92]
 355              	.LVL37:
 102:..//kernel/core/include/tos_list.h **** }
 356              		.loc 2 102 16 view .LVU107
 357              	.LBE151:
 358              	.LBE150:
  33:..//kernel/core/tos_task.c **** #endif
 359              		.loc 1 33 5 is_stmt 1 view .LVU108
  33:..//kernel/core/tos_task.c **** #endif
 360              		.loc 1 33 25 is_stmt 0 view .LVU109
 361 006e 0823     		movs	r3, #8
 362 0070 84F86030 		strb	r3, [r4, #96]
  36:..//kernel/core/tos_task.c ****     task->pending_obj   = (pend_obj_t *)K_NULL;
 363              		.loc 1 36 5 is_stmt 1 view .LVU110
  36:..//kernel/core/tos_task.c ****     task->pending_obj   = (pend_obj_t *)K_NULL;
 364              		.loc 1 36 25 is_stmt 0 view .LVU111
 365 0074 84F86850 		strb	r5, [r4, #104]
  37:..//kernel/core/tos_task.c **** 
 366              		.loc 1 37 5 is_stmt 1 view .LVU112
  37:..//kernel/core/tos_task.c **** 
 367              		.loc 1 37 25 is_stmt 0 view .LVU113
 368 0078 6566     		str	r5, [r4, #100]
  40:..//kernel/core/tos_task.c **** #endif
 369              		.loc 1 40 5 is_stmt 1 view .LVU114
  40:..//kernel/core/tos_task.c **** #endif
 370              		.loc 1 40 25 is_stmt 0 view .LVU115
 371 007a E566     		str	r5, [r4, #108]
  44:..//kernel/core/tos_task.c ****     task->mail_size     = 0;
 372              		.loc 1 44 5 is_stmt 1 view .LVU116
  44:..//kernel/core/tos_task.c ****     task->mail_size     = 0;
 373              		.loc 1 44 25 is_stmt 0 view .LVU117
 374 007c 2567     		str	r5, [r4, #112]
  45:..//kernel/core/tos_task.c **** #endif
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 25


 375              		.loc 1 45 5 is_stmt 1 view .LVU118
  45:..//kernel/core/tos_task.c **** #endif
 376              		.loc 1 45 25 is_stmt 0 view .LVU119
 377 007e 6567     		str	r5, [r4, #116]
  48:..//kernel/core/tos_task.c **** }
 378              		.loc 1 48 5 is_stmt 1 view .LVU120
 379              	.LVL38:
 380              	.LBB152:
 381              	.LBI152:
 192:..//kernel/core/include/tos_sys.h **** {
 382              		.loc 4 192 32 view .LVU121
 383              	.LBB153:
 194:..//kernel/core/include/tos_sys.h **** }
 384              		.loc 4 194 5 view .LVU122
 194:..//kernel/core/include/tos_sys.h **** }
 385              		.loc 4 194 19 is_stmt 0 view .LVU123
 386 0080 E580     		strh	r5, [r4, #6]	@ movhi
 387              	.LVL39:
 194:..//kernel/core/include/tos_sys.h **** }
 388              		.loc 4 194 19 view .LVU124
 389              	.LBE153:
 390              	.LBE152:
 391              	.LBE139:
 392              	.LBE138:
 182:..//kernel/core/tos_task.c **** 
 393              		.loc 1 182 5 is_stmt 1 view .LVU125
 394              	.LBB154:
 395              	.LBI154:
 360:..//kernel/core/include/tos_task.h **** }
 361:..//kernel/core/include/tos_task.h **** 
 362:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ int task_state_is_suspended(k_task_t *task)
 363:..//kernel/core/include/tos_task.h **** {
 364:..//kernel/core/include/tos_task.h ****     return task->state & K_TASK_STATE_SUSPENDED;
 365:..//kernel/core/include/tos_task.h **** }
 366:..//kernel/core/include/tos_task.h **** 
 367:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_reset_pending(k_task_t *task)
 368:..//kernel/core/include/tos_task.h **** {
 369:..//kernel/core/include/tos_task.h ****     task->state &= ~K_TASK_STATE_PEND;
 370:..//kernel/core/include/tos_task.h **** }
 371:..//kernel/core/include/tos_task.h **** 
 372:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_reset_sleeping(k_task_t *task)
 373:..//kernel/core/include/tos_task.h **** {
 374:..//kernel/core/include/tos_task.h ****     task->state &= ~K_TASK_STATE_SLEEP;
 375:..//kernel/core/include/tos_task.h **** }
 376:..//kernel/core/include/tos_task.h **** 
 377:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_reset_suspended(k_task_t *task)
 378:..//kernel/core/include/tos_task.h **** {
 379:..//kernel/core/include/tos_task.h ****     task->state &= ~K_TASK_STATE_SUSPENDED;
 380:..//kernel/core/include/tos_task.h **** }
 381:..//kernel/core/include/tos_task.h **** 
 382:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_set_suspended(k_task_t *task)
 383:..//kernel/core/include/tos_task.h **** {
 384:..//kernel/core/include/tos_task.h ****     task->state |= K_TASK_STATE_SUSPENDED;
 385:..//kernel/core/include/tos_task.h **** }
 386:..//kernel/core/include/tos_task.h **** 
 387:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_set_pend(k_task_t *task)
 388:..//kernel/core/include/tos_task.h **** {
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 26


 389:..//kernel/core/include/tos_task.h ****     task->state |= K_TASK_STATE_PEND;
 390:..//kernel/core/include/tos_task.h **** }
 391:..//kernel/core/include/tos_task.h **** 
 392:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_set_ready(k_task_t *task)
 393:..//kernel/core/include/tos_task.h **** {
 394:..//kernel/core/include/tos_task.h ****     task->state = K_TASK_STATE_READY;
 395:..//kernel/core/include/tos_task.h **** }
 396:..//kernel/core/include/tos_task.h **** 
 397:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_set_deleted(k_task_t *task)
 396              		.loc 3 397 32 view .LVU126
 397              	.LBB155:
 398:..//kernel/core/include/tos_task.h **** {
 399:..//kernel/core/include/tos_task.h ****     task->state = K_TASK_STATE_DELETED;
 398              		.loc 3 399 5 view .LVU127
 399              		.loc 3 399 17 is_stmt 0 view .LVU128
 400 0082 84F82030 		strb	r3, [r4, #32]
 401              	.LVL40:
 402              		.loc 3 399 17 view .LVU129
 403              	.LBE155:
 404              	.LBE154:
 184:..//kernel/core/tos_task.c ****     knl_sched();
 405              		.loc 1 184 5 is_stmt 1 view .LVU130
 184:..//kernel/core/tos_task.c ****     knl_sched();
 406              		.loc 1 184 5 view .LVU131
 407 0086 3846     		mov	r0, r7
 408 0088 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 409              	.LVL41:
 185:..//kernel/core/tos_task.c **** 
 410              		.loc 1 185 5 view .LVU132
 411 008c FFF7FEFF 		bl	knl_sched
 412              	.LVL42:
 187:..//kernel/core/tos_task.c **** }
 413              		.loc 1 187 5 view .LVU133
 187:..//kernel/core/tos_task.c **** }
 414              		.loc 1 187 12 is_stmt 0 view .LVU134
 415 0090 2846     		mov	r0, r5
 416              	.LVL43:
 417              	.L9:
 188:..//kernel/core/tos_task.c **** 
 418              		.loc 1 188 1 view .LVU135
 419 0092 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 420              	.LVL44:
 421              	.L16:
 170:..//kernel/core/tos_task.c ****     }
 422              		.loc 1 170 9 is_stmt 1 view .LVU136
 423 0094 2046     		mov	r0, r4
 424 0096 FFF7FEFF 		bl	readyqueue_remove
 425              	.LVL45:
 426 009a C6E7     		b	.L11
 427              	.L17:
 173:..//kernel/core/tos_task.c ****     }
 428              		.loc 1 173 9 view .LVU137
 429 009c 2046     		mov	r0, r4
 430 009e FFF7FEFF 		bl	tick_list_remove
 431              	.LVL46:
 432 00a2 C7E7     		b	.L12
 433              	.L18:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 27


 176:..//kernel/core/tos_task.c ****     }
 434              		.loc 1 176 9 view .LVU138
 435 00a4 2046     		mov	r0, r4
 436 00a6 FFF7FEFF 		bl	pend_list_remove
 437              	.LVL47:
 438 00aa C8E7     		b	.L13
 439              	.LVL48:
 440              	.L14:
 157:..//kernel/core/tos_task.c ****     }
 441              		.loc 1 157 16 is_stmt 0 view .LVU139
 442 00ac 40F26D70 		movw	r0, #1901
 443 00b0 EFE7     		b	.L9
 444              		.cfi_endproc
 445              	.LFE115:
 447              		.section	.text.task_destroy_dyn,"ax",%progbits
 448              		.align	1
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu softvfp
 454              	task_destroy_dyn:
 455              	.LVL49:
 456              	.LFB120:
 208:..//kernel/core/tos_task.c **** 
 209:..//kernel/core/tos_task.c **** __KNL__ void task_free_all(void)
 210:..//kernel/core/tos_task.c **** {
 211:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 212:..//kernel/core/tos_task.c ****     k_task_t *task, *tmp;
 213:..//kernel/core/tos_task.c **** 
 214:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 215:..//kernel/core/tos_task.c **** 
 216:..//kernel/core/tos_task.c ****     TOS_LIST_FOR_EACH_ENTRY_SAFE(task, tmp, k_task_t, dead_list, &k_dead_task_list) {
 217:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 218:..//kernel/core/tos_task.c ****         task_free(task);
 219:..//kernel/core/tos_task.c ****     }
 220:..//kernel/core/tos_task.c **** 
 221:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 222:..//kernel/core/tos_task.c **** }
 223:..//kernel/core/tos_task.c **** 
 224:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_create_dyn(k_task_t **task,
 225:..//kernel/core/tos_task.c ****                                                     char *name,
 226:..//kernel/core/tos_task.c ****                                                     k_task_entry_t entry,
 227:..//kernel/core/tos_task.c ****                                                     void *arg,
 228:..//kernel/core/tos_task.c ****                                                     k_prio_t prio,
 229:..//kernel/core/tos_task.c ****                                                     size_t stk_size,
 230:..//kernel/core/tos_task.c ****                                                     k_timeslice_t timeslice)
 231:..//kernel/core/tos_task.c **** {
 232:..//kernel/core/tos_task.c ****     k_err_t err;
 233:..//kernel/core/tos_task.c ****     k_task_t *the_task;
 234:..//kernel/core/tos_task.c ****     k_stack_t *stk_base;
 235:..//kernel/core/tos_task.c **** 
 236:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
 237:..//kernel/core/tos_task.c **** 
 238:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 239:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 240:..//kernel/core/tos_task.c **** 
 241:..//kernel/core/tos_task.c ****     if (unlikely(stk_size < sizeof(cpu_context_t))) {
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 28


 242:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 243:..//kernel/core/tos_task.c ****     }
 244:..//kernel/core/tos_task.c **** 
 245:..//kernel/core/tos_task.c ****     if (unlikely(prio == K_TASK_PRIO_IDLE)) {
 246:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 247:..//kernel/core/tos_task.c ****     }
 248:..//kernel/core/tos_task.c **** 
 249:..//kernel/core/tos_task.c ****     if (unlikely(prio > K_TASK_PRIO_IDLE)) {
 250:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 251:..//kernel/core/tos_task.c ****     }
 252:..//kernel/core/tos_task.c **** 
 253:..//kernel/core/tos_task.c ****     the_task = tos_mmheap_calloc(1, sizeof(k_task_t));
 254:..//kernel/core/tos_task.c ****     if (!the_task) {
 255:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 256:..//kernel/core/tos_task.c ****     }
 257:..//kernel/core/tos_task.c **** 
 258:..//kernel/core/tos_task.c ****     stk_base = tos_mmheap_alloc(stk_size);
 259:..//kernel/core/tos_task.c ****     if (!stk_base) {
 260:..//kernel/core/tos_task.c ****         tos_mmheap_free(the_task);
 261:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 262:..//kernel/core/tos_task.c ****     }
 263:..//kernel/core/tos_task.c **** 
 264:..//kernel/core/tos_task.c ****     the_task->stk_base = stk_base;
 265:..//kernel/core/tos_task.c ****     err = tos_task_create(the_task, name, entry, arg, prio, stk_base, stk_size, timeslice);
 266:..//kernel/core/tos_task.c ****     if (err != K_ERR_NONE) {
 267:..//kernel/core/tos_task.c ****         task_free(the_task);
 268:..//kernel/core/tos_task.c ****         return err;
 269:..//kernel/core/tos_task.c ****     }
 270:..//kernel/core/tos_task.c **** 
 271:..//kernel/core/tos_task.c ****     knl_object_alloc_set_dynamic(&the_task->knl_obj);
 272:..//kernel/core/tos_task.c **** 
 273:..//kernel/core/tos_task.c ****     *task = the_task;
 274:..//kernel/core/tos_task.c **** 
 275:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 276:..//kernel/core/tos_task.c **** }
 277:..//kernel/core/tos_task.c **** 
 278:..//kernel/core/tos_task.c **** __STATIC__ k_err_t task_destroy_dyn(k_task_t *task)
 279:..//kernel/core/tos_task.c **** {
 457              		.loc 1 279 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		.loc 1 279 1 is_stmt 0 view .LVU141
 462 0000 38B5     		push	{r3, r4, r5, lr}
 463              	.LCFI3:
 464              		.cfi_def_cfa_offset 16
 465              		.cfi_offset 3, -16
 466              		.cfi_offset 4, -12
 467              		.cfi_offset 5, -8
 468              		.cfi_offset 14, -4
 469 0002 0446     		mov	r4, r0
 280:..//kernel/core/tos_task.c ****     k_err_t err;
 470              		.loc 1 280 5 is_stmt 1 view .LVU142
 281:..//kernel/core/tos_task.c **** 
 282:..//kernel/core/tos_task.c ****     tos_knl_sched_lock();
 471              		.loc 1 282 5 view .LVU143
 472 0004 FFF7FEFF 		bl	tos_knl_sched_lock
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 29


 473              	.LVL50:
 283:..//kernel/core/tos_task.c **** 
 284:..//kernel/core/tos_task.c ****     err = task_do_destroy(task);
 474              		.loc 1 284 5 view .LVU144
 475              		.loc 1 284 11 is_stmt 0 view .LVU145
 476 0008 2046     		mov	r0, r4
 477 000a FFF7FEFF 		bl	task_do_destroy
 478              	.LVL51:
 285:..//kernel/core/tos_task.c ****     if (err != K_ERR_NONE) {
 479              		.loc 1 285 5 is_stmt 1 view .LVU146
 480              		.loc 1 285 8 is_stmt 0 view .LVU147
 481 000e 0546     		mov	r5, r0
 482 0010 78B9     		cbnz	r0, .L25
 286:..//kernel/core/tos_task.c ****         tos_knl_sched_unlock();
 287:..//kernel/core/tos_task.c ****         return err;
 288:..//kernel/core/tos_task.c ****     }
 289:..//kernel/core/tos_task.c **** 
 290:..//kernel/core/tos_task.c ****     if (knl_is_self(task)) { // we are destroying ourself
 483              		.loc 1 290 5 is_stmt 1 view .LVU148
 484              		.loc 1 290 9 is_stmt 0 view .LVU149
 485 0012 2046     		mov	r0, r4
 486              	.LVL52:
 487              		.loc 1 290 9 view .LVU150
 488 0014 FFF7FEFF 		bl	knl_is_self
 489              	.LVL53:
 490              		.loc 1 290 8 view .LVU151
 491 0018 70B1     		cbz	r0, .L22
 291:..//kernel/core/tos_task.c ****         // in this situation, we cannot just free ourself's task stack because we are using it
 292:..//kernel/core/tos_task.c ****         // we count on the idle task to free the memory
 293:..//kernel/core/tos_task.c ****         tos_list_add(&task->dead_list, &k_dead_task_list);
 492              		.loc 1 293 9 is_stmt 1 view .LVU152
 493 001a 04F12C02 		add	r2, r4, #44
 494              	.LVL54:
 495              	.LBB156:
 496              	.LBI156:
 105:..//kernel/core/include/tos_list.h **** {
 497              		.loc 2 105 32 view .LVU153
 498              	.LBB157:
 107:..//kernel/core/include/tos_list.h **** }
 499              		.loc 2 107 5 view .LVU154
 107:..//kernel/core/include/tos_list.h **** }
 500              		.loc 2 107 31 is_stmt 0 view .LVU155
 501 001e 084B     		ldr	r3, .L26
 502 0020 1968     		ldr	r1, [r3]
 503              	.LVL55:
 504              	.LBB158:
 505              	.LBI158:
  80:..//kernel/core/include/tos_list.h **** {
 506              		.loc 2 80 24 is_stmt 1 view .LVU156
 507              	.LBB159:
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 508              		.loc 2 82 5 view .LVU157
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 509              		.loc 2 82 16 is_stmt 0 view .LVU158
 510 0022 4A60     		str	r2, [r1, #4]
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 511              		.loc 2 83 5 is_stmt 1 view .LVU159
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 30


  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 512              		.loc 2 83 16 is_stmt 0 view .LVU160
 513 0024 E162     		str	r1, [r4, #44]
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 514              		.loc 2 84 5 is_stmt 1 view .LVU161
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 515              		.loc 2 84 16 is_stmt 0 view .LVU162
 516 0026 2363     		str	r3, [r4, #48]
  85:..//kernel/core/include/tos_list.h **** }
 517              		.loc 2 85 5 is_stmt 1 view .LVU163
  85:..//kernel/core/include/tos_list.h **** }
 518              		.loc 2 85 16 is_stmt 0 view .LVU164
 519 0028 1A60     		str	r2, [r3]
 520              	.LVL56:
 521              	.L23:
  85:..//kernel/core/include/tos_list.h **** }
 522              		.loc 2 85 16 view .LVU165
 523              	.LBE159:
 524              	.LBE158:
 525              	.LBE157:
 526              	.LBE156:
 294:..//kernel/core/tos_task.c ****     } else {
 295:..//kernel/core/tos_task.c ****         task_free(task);
 296:..//kernel/core/tos_task.c ****     }
 297:..//kernel/core/tos_task.c **** 
 298:..//kernel/core/tos_task.c ****     tos_knl_sched_unlock();
 527              		.loc 1 298 5 is_stmt 1 view .LVU166
 528 002a FFF7FEFF 		bl	tos_knl_sched_unlock
 529              	.LVL57:
 299:..//kernel/core/tos_task.c **** 
 300:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 530              		.loc 1 300 5 view .LVU167
 531              	.L21:
 301:..//kernel/core/tos_task.c **** }
 532              		.loc 1 301 1 is_stmt 0 view .LVU168
 533 002e 2846     		mov	r0, r5
 534 0030 38BD     		pop	{r3, r4, r5, pc}
 535              	.LVL58:
 536              	.L25:
 286:..//kernel/core/tos_task.c ****         return err;
 537              		.loc 1 286 9 is_stmt 1 view .LVU169
 538 0032 FFF7FEFF 		bl	tos_knl_sched_unlock
 539              	.LVL59:
 287:..//kernel/core/tos_task.c ****     }
 540              		.loc 1 287 9 view .LVU170
 287:..//kernel/core/tos_task.c ****     }
 541              		.loc 1 287 16 is_stmt 0 view .LVU171
 542 0036 FAE7     		b	.L21
 543              	.L22:
 295:..//kernel/core/tos_task.c ****     }
 544              		.loc 1 295 9 is_stmt 1 view .LVU172
 545 0038 2046     		mov	r0, r4
 546 003a FFF7FEFF 		bl	task_free
 547              	.LVL60:
 548 003e F4E7     		b	.L23
 549              	.L27:
 550              		.align	2
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 31


 551              	.L26:
 552 0040 00000000 		.word	k_dead_task_list
 553              		.cfi_endproc
 554              	.LFE120:
 556              		.section	.text.task_destroy_static,"ax",%progbits
 557              		.align	1
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 563              	task_destroy_static:
 564              	.LVL61:
 565              	.LFB116:
 191:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 566              		.loc 1 191 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 191:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 570              		.loc 1 191 1 is_stmt 0 view .LVU174
 571 0000 08B5     		push	{r3, lr}
 572              	.LCFI4:
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 3, -8
 575              		.cfi_offset 14, -4
 193:..//kernel/core/tos_task.c ****         return K_ERR_OBJ_INVALID_ALLOC_TYPE;
 576              		.loc 1 193 5 is_stmt 1 view .LVU175
 577              	.LVL62:
 578              	.LBB160:
 579              	.LBI160:
 202:..//kernel/core/include/tos_sys.h **** }
 203:..//kernel/core/include/tos_sys.h **** 
 204:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_alloc_set_dynamic(knl_obj_t *knl_obj)
 205:..//kernel/core/include/tos_sys.h **** {
 206:..//kernel/core/include/tos_sys.h ****     knl_obj->alloc_type = KNL_OBJ_ALLOC_TYPE_DYNAMIC;
 207:..//kernel/core/include/tos_sys.h **** }
 208:..//kernel/core/include/tos_sys.h **** 
 209:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_alloc_set_static(knl_obj_t *knl_obj)
 210:..//kernel/core/include/tos_sys.h **** {
 211:..//kernel/core/include/tos_sys.h ****     knl_obj->alloc_type = KNL_OBJ_ALLOC_TYPE_STATIC;
 212:..//kernel/core/include/tos_sys.h **** }
 213:..//kernel/core/include/tos_sys.h **** 
 214:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ int knl_object_alloc_is_dynamic(knl_obj_t *knl_obj)
 215:..//kernel/core/include/tos_sys.h **** {
 216:..//kernel/core/include/tos_sys.h ****     return knl_obj->alloc_type == KNL_OBJ_ALLOC_TYPE_DYNAMIC;
 217:..//kernel/core/include/tos_sys.h **** }
 218:..//kernel/core/include/tos_sys.h **** 
 219:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ int knl_object_alloc_is_static(knl_obj_t *knl_obj)
 580              		.loc 4 219 31 view .LVU176
 581              	.LBB161:
 220:..//kernel/core/include/tos_sys.h **** {
 221:..//kernel/core/include/tos_sys.h ****     return knl_obj->alloc_type == KNL_OBJ_ALLOC_TYPE_STATIC;
 582              		.loc 4 221 5 view .LVU177
 583              		.loc 4 221 19 is_stmt 0 view .LVU178
 584 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 585              	.LVL63:
 586              		.loc 4 221 19 view .LVU179
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 32


 587              	.LBE161:
 588              	.LBE160:
 193:..//kernel/core/tos_task.c ****         return K_ERR_OBJ_INVALID_ALLOC_TYPE;
 589              		.loc 1 193 8 view .LVU180
 590 0004 012B     		cmp	r3, #1
 591 0006 02D0     		beq	.L32
 194:..//kernel/core/tos_task.c ****     }
 592              		.loc 1 194 16 view .LVU181
 593 0008 40F24E40 		movw	r0, #1102
 594              	.LVL64:
 595              	.L29:
 199:..//kernel/core/tos_task.c **** 
 596              		.loc 1 199 1 view .LVU182
 597 000c 08BD     		pop	{r3, pc}
 598              	.LVL65:
 599              	.L32:
 198:..//kernel/core/tos_task.c **** }
 600              		.loc 1 198 5 is_stmt 1 view .LVU183
 198:..//kernel/core/tos_task.c **** }
 601              		.loc 1 198 12 is_stmt 0 view .LVU184
 602 000e FFF7FEFF 		bl	task_do_destroy
 603              	.LVL66:
 198:..//kernel/core/tos_task.c **** }
 604              		.loc 1 198 12 view .LVU185
 605 0012 FBE7     		b	.L29
 606              		.cfi_endproc
 607              	.LFE116:
 609              		.section	.text.task_highest_pending_prio_get,"ax",%progbits
 610              		.align	1
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu softvfp
 616              	task_highest_pending_prio_get:
 617              	.LVL67:
 618              	.LFB112:
  58:..//kernel/core/tos_task.c ****     k_mutex_t *mutex;
 619              		.loc 1 58 1 is_stmt 1 view -0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
  58:..//kernel/core/tos_task.c ****     k_mutex_t *mutex;
 623              		.loc 1 58 1 is_stmt 0 view .LVU187
 624 0000 70B5     		push	{r4, r5, r6, lr}
 625              	.LCFI5:
 626              		.cfi_def_cfa_offset 16
 627              		.cfi_offset 4, -16
 628              		.cfi_offset 5, -12
 629              		.cfi_offset 6, -8
 630              		.cfi_offset 14, -4
 631 0002 0546     		mov	r5, r0
  59:..//kernel/core/tos_task.c ****     k_prio_t prio, highest_prio_pending = K_TASK_PRIO_INVALID;
 632              		.loc 1 59 5 is_stmt 1 view .LVU188
  60:..//kernel/core/tos_task.c **** 
 633              		.loc 1 60 5 view .LVU189
 634              	.LVL68:
  62:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 33


 635              		.loc 1 62 5 view .LVU190
 636 0004 846D     		ldr	r4, [r0, #88]
 637 0006 183C     		subs	r4, r4, #24
 638              	.LVL69:
  60:..//kernel/core/tos_task.c **** 
 639              		.loc 1 60 20 is_stmt 0 view .LVU191
 640 0008 0826     		movs	r6, #8
  62:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
 641              		.loc 1 62 5 view .LVU192
 642 000a 01E0     		b	.L34
 643              	.LVL70:
 644              	.L35:
  62:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
 645              		.loc 1 62 5 discriminator 2 view .LVU193
 646 000c A469     		ldr	r4, [r4, #24]
 647              	.LVL71:
  62:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
 648              		.loc 1 62 5 discriminator 2 view .LVU194
 649 000e 183C     		subs	r4, r4, #24
 650              	.LVL72:
 651              	.L34:
  62:..//kernel/core/tos_task.c ****         prio = pend_highest_pending_prio_get(&mutex->pend_obj);
 652              		.loc 1 62 5 discriminator 1 view .LVU195
 653 0010 04F11803 		add	r3, r4, #24
 654 0014 05F15802 		add	r2, r5, #88
 655 0018 9342     		cmp	r3, r2
 656 001a 06D0     		beq	.L39
  63:..//kernel/core/tos_task.c ****         if (prio < highest_prio_pending) {
 657              		.loc 1 63 9 is_stmt 1 view .LVU196
  63:..//kernel/core/tos_task.c ****         if (prio < highest_prio_pending) {
 658              		.loc 1 63 16 is_stmt 0 view .LVU197
 659 001c 201D     		adds	r0, r4, #4
 660 001e FFF7FEFF 		bl	pend_highest_pending_prio_get
 661              	.LVL73:
  64:..//kernel/core/tos_task.c ****             highest_prio_pending = prio;
 662              		.loc 1 64 9 is_stmt 1 view .LVU198
  64:..//kernel/core/tos_task.c ****             highest_prio_pending = prio;
 663              		.loc 1 64 12 is_stmt 0 view .LVU199
 664 0022 8642     		cmp	r6, r0
 665 0024 F2D9     		bls	.L35
  65:..//kernel/core/tos_task.c ****         }
 666              		.loc 1 65 34 view .LVU200
 667 0026 0646     		mov	r6, r0
 668              	.LVL74:
  65:..//kernel/core/tos_task.c ****         }
 669              		.loc 1 65 34 view .LVU201
 670 0028 F0E7     		b	.L35
 671              	.LVL75:
 672              	.L39:
  69:..//kernel/core/tos_task.c **** }
 673              		.loc 1 69 5 is_stmt 1 view .LVU202
  70:..//kernel/core/tos_task.c **** 
 674              		.loc 1 70 1 is_stmt 0 view .LVU203
 675 002a 3046     		mov	r0, r6
 676 002c 70BD     		pop	{r4, r5, r6, pc}
  70:..//kernel/core/tos_task.c **** 
 677              		.loc 1 70 1 view .LVU204
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 34


 678              		.cfi_endproc
 679              	.LFE112:
 681              		.section	.text.tos_task_create,"ax",%progbits
 682              		.align	1
 683              		.global	tos_task_create
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu softvfp
 689              	tos_task_create:
 690              	.LVL76:
 691              	.LFB114:
  90:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 692              		.loc 1 90 1 is_stmt 1 view -0
 693              		.cfi_startproc
 694              		@ args = 16, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
  90:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 696              		.loc 1 90 1 is_stmt 0 view .LVU206
 697 0000 2DE9F04E 		push	{r4, r5, r6, r7, r9, r10, fp, lr}
 698              	.LCFI6:
 699              		.cfi_def_cfa_offset 32
 700              		.cfi_offset 4, -32
 701              		.cfi_offset 5, -28
 702              		.cfi_offset 6, -24
 703              		.cfi_offset 7, -20
 704              		.cfi_offset 9, -16
 705              		.cfi_offset 10, -12
 706              		.cfi_offset 11, -8
 707              		.cfi_offset 14, -4
 708 0004 82B0     		sub	sp, sp, #8
 709              	.LCFI7:
 710              		.cfi_def_cfa_offset 40
 711 0006 0446     		mov	r4, r0
 712 0008 8B46     		mov	fp, r1
 713 000a 1646     		mov	r6, r2
 714 000c 9A46     		mov	r10, r3
 715 000e 9DF82890 		ldrb	r9, [sp, #40]	@ zero_extendqisi2
 716 0012 0C9F     		ldr	r7, [sp, #48]
  91:..//kernel/core/tos_task.c **** 
 717              		.loc 1 91 5 is_stmt 1 view .LVU207
 718              	.LVL77:
  93:..//kernel/core/tos_task.c **** 
 719              		.loc 1 93 5 view .LVU208
  93:..//kernel/core/tos_task.c **** 
 720              		.loc 1 93 5 view .LVU209
 721 0014 FFF7FEFF 		bl	knl_is_inirq
 722              	.LVL78:
  93:..//kernel/core/tos_task.c **** 
 723              		.loc 1 93 5 is_stmt 0 view .LVU210
 724 0018 0028     		cmp	r0, #0
 725 001a 6ED1     		bne	.L43
  95:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 726              		.loc 1 95 5 is_stmt 1 view .LVU211
  95:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 727              		.loc 1 95 5 view .LVU212
 728 001c 002C     		cmp	r4, #0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 35


 729 001e 6FD0     		beq	.L44
  96:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(stk_base);
 730              		.loc 1 96 5 view .LVU213
  96:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(stk_base);
 731              		.loc 1 96 5 view .LVU214
 732 0020 002E     		cmp	r6, #0
 733 0022 70D0     		beq	.L45
  97:..//kernel/core/tos_task.c **** 
 734              		.loc 1 97 5 view .LVU215
  97:..//kernel/core/tos_task.c **** 
 735              		.loc 1 97 5 view .LVU216
 736 0024 0B9B     		ldr	r3, [sp, #44]
 737 0026 002B     		cmp	r3, #0
 738 0028 70D0     		beq	.L46
 100:..//kernel/core/tos_task.c **** 
 739              		.loc 1 100 5 view .LVU217
 100:..//kernel/core/tos_task.c **** 
 740              		.loc 1 100 5 view .LVU218
 741              	.LVL79:
 742              	.LBB162:
 743              	.LBI162:
 182:..//kernel/core/include/tos_sys.h **** {
 744              		.loc 4 182 31 view .LVU219
 745              	.LBB163:
 184:..//kernel/core/include/tos_sys.h **** }
 746              		.loc 4 184 5 view .LVU220
 184:..//kernel/core/include/tos_sys.h **** }
 747              		.loc 4 184 19 is_stmt 0 view .LVU221
 748 002a E288     		ldrh	r2, [r4, #6]
 749              	.LVL80:
 184:..//kernel/core/include/tos_sys.h **** }
 750              		.loc 4 184 19 view .LVU222
 751              	.LBE163:
 752              	.LBE162:
 100:..//kernel/core/tos_task.c **** 
 753              		.loc 1 100 5 view .LVU223
 754 002c 4DF6D823 		movw	r3, #56024
 755 0030 9A42     		cmp	r2, r3
 756 0032 6ED0     		beq	.L47
 102:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 757              		.loc 1 102 5 is_stmt 1 view .LVU224
 102:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 758              		.loc 1 102 8 is_stmt 0 view .LVU225
 759 0034 3F2F     		cmp	r7, #63
 760 0036 6FD9     		bls	.L48
 106:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 761              		.loc 1 106 5 is_stmt 1 view .LVU226
 106:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 762              		.loc 1 106 8 is_stmt 0 view .LVU227
 763 0038 B9F1070F 		cmp	r9, #7
 764 003c 51D0     		beq	.L53
 765              	.L42:
 110:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 766              		.loc 1 110 5 is_stmt 1 view .LVU228
 110:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 767              		.loc 1 110 8 is_stmt 0 view .LVU229
 768 003e B9F1070F 		cmp	r9, #7
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 36


 769 0042 6CD8     		bhi	.L50
 114:..//kernel/core/tos_task.c ****     tos_list_add(&task->stat_list, &k_stat_list);
 770              		.loc 1 114 5 is_stmt 1 view .LVU230
 771              	.LVL81:
 772              	.LBB164:
 773              	.LBI164:
  20:..//kernel/core/tos_task.c **** {
 774              		.loc 1 20 24 view .LVU231
 775              	.LBB165:
  23:..//kernel/core/tos_task.c **** 
 776              		.loc 1 23 5 view .LVU232
  23:..//kernel/core/tos_task.c **** 
 777              		.loc 1 23 5 is_stmt 0 view .LVU233
 778              	.LBE165:
 779              	.LBE164:
 201:..//kernel/core/include/tos_sys.h **** }
 780              		.loc 4 201 5 is_stmt 1 view .LVU234
 781              	.LBB176:
 782              	.LBB174:
  25:..//kernel/core/tos_task.c **** #endif
 783              		.loc 1 25 5 view .LVU235
 784 0044 04F12C03 		add	r3, r4, #44
 785              	.LVL82:
 786              	.LBB166:
 787              	.LBI166:
  99:..//kernel/core/include/tos_list.h **** {
 788              		.loc 2 99 32 view .LVU236
 789              	.LBB167:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 790              		.loc 2 101 5 view .LVU237
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 791              		.loc 2 101 16 is_stmt 0 view .LVU238
 792 0048 E362     		str	r3, [r4, #44]
 102:..//kernel/core/include/tos_list.h **** }
 793              		.loc 2 102 5 is_stmt 1 view .LVU239
 102:..//kernel/core/include/tos_list.h **** }
 794              		.loc 2 102 16 is_stmt 0 view .LVU240
 795 004a 2363     		str	r3, [r4, #48]
 796              	.LVL83:
 102:..//kernel/core/include/tos_list.h **** }
 797              		.loc 2 102 16 view .LVU241
 798              	.LBE167:
 799              	.LBE166:
  27:..//kernel/core/tos_task.c ****     tos_list_init(&task->tick_list);
 800              		.loc 1 27 5 is_stmt 1 view .LVU242
 801 004c 04F13402 		add	r2, r4, #52
 802              	.LVL84:
  27:..//kernel/core/tos_task.c ****     tos_list_init(&task->tick_list);
 803              		.loc 1 27 5 is_stmt 0 view .LVU243
 804              	.LBE174:
 805              	.LBE176:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 806              		.loc 2 101 5 is_stmt 1 view .LVU244
 102:..//kernel/core/include/tos_list.h **** }
 807              		.loc 2 102 5 view .LVU245
 808              	.LBB177:
 809              	.LBB175:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 37


  28:..//kernel/core/tos_task.c ****     tos_list_init(&task->pend_list);
 810              		.loc 1 28 5 view .LVU246
 811 0050 04F14803 		add	r3, r4, #72
 812              	.LVL85:
 813              	.LBB168:
 814              	.LBI168:
  99:..//kernel/core/include/tos_list.h **** {
 815              		.loc 2 99 32 view .LVU247
 816              	.LBB169:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 817              		.loc 2 101 5 view .LVU248
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 818              		.loc 2 101 16 is_stmt 0 view .LVU249
 819 0054 A364     		str	r3, [r4, #72]
 102:..//kernel/core/include/tos_list.h **** }
 820              		.loc 2 102 5 is_stmt 1 view .LVU250
 102:..//kernel/core/include/tos_list.h **** }
 821              		.loc 2 102 16 is_stmt 0 view .LVU251
 822 0056 E364     		str	r3, [r4, #76]
 823              	.LVL86:
 102:..//kernel/core/include/tos_list.h **** }
 824              		.loc 2 102 16 view .LVU252
 825              	.LBE169:
 826              	.LBE168:
  29:..//kernel/core/tos_task.c **** 
 827              		.loc 1 29 5 is_stmt 1 view .LVU253
 828 0058 04F15003 		add	r3, r4, #80
 829              	.LVL87:
 830              	.LBB170:
 831              	.LBI170:
  99:..//kernel/core/include/tos_list.h **** {
 832              		.loc 2 99 32 view .LVU254
 833              	.LBB171:
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 834              		.loc 2 101 5 view .LVU255
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 835              		.loc 2 101 16 is_stmt 0 view .LVU256
 836 005c 2365     		str	r3, [r4, #80]
 102:..//kernel/core/include/tos_list.h **** }
 837              		.loc 2 102 5 is_stmt 1 view .LVU257
 102:..//kernel/core/include/tos_list.h **** }
 838              		.loc 2 102 16 is_stmt 0 view .LVU258
 839 005e 6365     		str	r3, [r4, #84]
 840              	.LVL88:
 102:..//kernel/core/include/tos_list.h **** }
 841              		.loc 2 102 16 view .LVU259
 842              	.LBE171:
 843              	.LBE170:
  32:..//kernel/core/tos_task.c ****     task->prio_pending  = K_TASK_PRIO_INVALID;
 844              		.loc 1 32 5 is_stmt 1 view .LVU260
 845 0060 04F15803 		add	r3, r4, #88
 846              	.LVL89:
 847              	.LBB172:
 848              	.LBI172:
  99:..//kernel/core/include/tos_list.h **** {
 849              		.loc 2 99 32 view .LVU261
 850              	.LBB173:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 38


 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 851              		.loc 2 101 5 view .LVU262
 101:..//kernel/core/include/tos_list.h ****     list->prev = list;
 852              		.loc 2 101 16 is_stmt 0 view .LVU263
 853 0064 A365     		str	r3, [r4, #88]
 102:..//kernel/core/include/tos_list.h **** }
 854              		.loc 2 102 5 is_stmt 1 view .LVU264
 102:..//kernel/core/include/tos_list.h **** }
 855              		.loc 2 102 16 is_stmt 0 view .LVU265
 856 0066 E365     		str	r3, [r4, #92]
 857              	.LVL90:
 102:..//kernel/core/include/tos_list.h **** }
 858              		.loc 2 102 16 view .LVU266
 859              	.LBE173:
 860              	.LBE172:
  33:..//kernel/core/tos_task.c **** #endif
 861              		.loc 1 33 5 is_stmt 1 view .LVU267
  33:..//kernel/core/tos_task.c **** #endif
 862              		.loc 1 33 25 is_stmt 0 view .LVU268
 863 0068 0823     		movs	r3, #8
 864 006a 84F86030 		strb	r3, [r4, #96]
  36:..//kernel/core/tos_task.c ****     task->pending_obj   = (pend_obj_t *)K_NULL;
 865              		.loc 1 36 5 is_stmt 1 view .LVU269
  36:..//kernel/core/tos_task.c ****     task->pending_obj   = (pend_obj_t *)K_NULL;
 866              		.loc 1 36 25 is_stmt 0 view .LVU270
 867 006e 0025     		movs	r5, #0
 868 0070 84F86850 		strb	r5, [r4, #104]
  37:..//kernel/core/tos_task.c **** 
 869              		.loc 1 37 5 is_stmt 1 view .LVU271
  37:..//kernel/core/tos_task.c **** 
 870              		.loc 1 37 25 is_stmt 0 view .LVU272
 871 0074 6566     		str	r5, [r4, #100]
  40:..//kernel/core/tos_task.c **** #endif
 872              		.loc 1 40 5 is_stmt 1 view .LVU273
  40:..//kernel/core/tos_task.c **** #endif
 873              		.loc 1 40 25 is_stmt 0 view .LVU274
 874 0076 E566     		str	r5, [r4, #108]
  44:..//kernel/core/tos_task.c ****     task->mail_size     = 0;
 875              		.loc 1 44 5 is_stmt 1 view .LVU275
  44:..//kernel/core/tos_task.c ****     task->mail_size     = 0;
 876              		.loc 1 44 25 is_stmt 0 view .LVU276
 877 0078 2567     		str	r5, [r4, #112]
  45:..//kernel/core/tos_task.c **** #endif
 878              		.loc 1 45 5 is_stmt 1 view .LVU277
  45:..//kernel/core/tos_task.c **** #endif
 879              		.loc 1 45 25 is_stmt 0 view .LVU278
 880 007a 6567     		str	r5, [r4, #116]
  48:..//kernel/core/tos_task.c **** }
 881              		.loc 1 48 5 is_stmt 1 view .LVU279
 882              	.LVL91:
  48:..//kernel/core/tos_task.c **** }
 883              		.loc 1 48 5 is_stmt 0 view .LVU280
 884              	.LBE175:
 885              	.LBE177:
 194:..//kernel/core/include/tos_sys.h **** }
 886              		.loc 4 194 5 is_stmt 1 view .LVU281
 115:..//kernel/core/tos_task.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 39


 887              		.loc 1 115 5 view .LVU282
 888              	.LBB178:
 889              	.LBI178:
 105:..//kernel/core/include/tos_list.h **** {
 890              		.loc 2 105 32 view .LVU283
 891              	.LBB179:
 107:..//kernel/core/include/tos_list.h **** }
 892              		.loc 2 107 5 view .LVU284
 107:..//kernel/core/include/tos_list.h **** }
 893              		.loc 2 107 31 is_stmt 0 view .LVU285
 894 007c 294B     		ldr	r3, .L55
 895 007e 1968     		ldr	r1, [r3]
 896              	.LVL92:
 897              	.LBB180:
 898              	.LBI180:
  80:..//kernel/core/include/tos_list.h **** {
 899              		.loc 2 80 24 is_stmt 1 view .LVU286
 900              	.LBB181:
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 901              		.loc 2 82 5 view .LVU287
  82:..//kernel/core/include/tos_list.h ****     node->next = next;
 902              		.loc 2 82 16 is_stmt 0 view .LVU288
 903 0080 4A60     		str	r2, [r1, #4]
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 904              		.loc 2 83 5 is_stmt 1 view .LVU289
  83:..//kernel/core/include/tos_list.h ****     node->prev = prev;
 905              		.loc 2 83 16 is_stmt 0 view .LVU290
 906 0082 6163     		str	r1, [r4, #52]
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 907              		.loc 2 84 5 is_stmt 1 view .LVU291
  84:..//kernel/core/include/tos_list.h ****     prev->next = node;
 908              		.loc 2 84 16 is_stmt 0 view .LVU292
 909 0084 A363     		str	r3, [r4, #56]
  85:..//kernel/core/include/tos_list.h **** }
 910              		.loc 2 85 5 is_stmt 1 view .LVU293
  85:..//kernel/core/include/tos_list.h **** }
 911              		.loc 2 85 16 is_stmt 0 view .LVU294
 912 0086 1A60     		str	r2, [r3]
 913              	.LVL93:
  85:..//kernel/core/include/tos_list.h **** }
 914              		.loc 2 85 16 view .LVU295
 915              	.LBE181:
 916              	.LBE180:
 917              	.LBE179:
 918              	.LBE178:
 117:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 919              		.loc 1 117 5 is_stmt 1 view .LVU296
 920              	.LBB182:
 921              	.LBI182:
 187:..//kernel/core/include/tos_sys.h **** {
 922              		.loc 4 187 32 view .LVU297
 923              	.LBB183:
 189:..//kernel/core/include/tos_sys.h **** }
 924              		.loc 4 189 5 view .LVU298
 189:..//kernel/core/include/tos_sys.h **** }
 925              		.loc 4 189 19 is_stmt 0 view .LVU299
 926 0088 4DF6D823 		movw	r3, #56024
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 40


 927 008c E380     		strh	r3, [r4, #6]	@ movhi
 928              	.LVL94:
 189:..//kernel/core/include/tos_sys.h **** }
 929              		.loc 4 189 19 view .LVU300
 930              	.LBE183:
 931              	.LBE182:
 119:..//kernel/core/tos_task.c **** #endif
 932              		.loc 1 119 5 is_stmt 1 view .LVU301
 933              	.LBB184:
 934              	.LBI184:
 209:..//kernel/core/include/tos_sys.h **** {
 935              		.loc 4 209 32 view .LVU302
 936              	.LBB185:
 211:..//kernel/core/include/tos_sys.h **** }
 937              		.loc 4 211 5 view .LVU303
 211:..//kernel/core/include/tos_sys.h **** }
 938              		.loc 4 211 25 is_stmt 0 view .LVU304
 939 008e 0123     		movs	r3, #1
 940 0090 2371     		strb	r3, [r4, #4]
 941              	.LVL95:
 211:..//kernel/core/include/tos_sys.h **** }
 942              		.loc 4 211 25 view .LVU305
 943              	.LBE185:
 944              	.LBE184:
 122:..//kernel/core/tos_task.c ****     task->entry     = entry;
 945              		.loc 1 122 5 is_stmt 1 view .LVU306
 122:..//kernel/core/tos_task.c ****     task->entry     = entry;
 946              		.loc 1 122 23 is_stmt 0 view .LVU307
 947 0092 0097     		str	r7, [sp]
 948 0094 0B9B     		ldr	r3, [sp, #44]
 949 0096 244A     		ldr	r2, .L55+4
 950 0098 5146     		mov	r1, r10
 951 009a 3046     		mov	r0, r6
 952 009c FFF7FEFF 		bl	cpu_task_stk_init
 953              	.LVL96:
 122:..//kernel/core/tos_task.c ****     task->entry     = entry;
 954              		.loc 1 122 21 view .LVU308
 955 00a0 2060     		str	r0, [r4]
 123:..//kernel/core/tos_task.c ****     task->arg       = arg;
 956              		.loc 1 123 5 is_stmt 1 view .LVU309
 123:..//kernel/core/tos_task.c ****     task->arg       = arg;
 957              		.loc 1 123 21 is_stmt 0 view .LVU310
 958 00a2 A661     		str	r6, [r4, #24]
 124:..//kernel/core/tos_task.c ****     task->prio      = prio;
 959              		.loc 1 124 5 is_stmt 1 view .LVU311
 124:..//kernel/core/tos_task.c ****     task->prio      = prio;
 960              		.loc 1 124 21 is_stmt 0 view .LVU312
 961 00a4 C4F81CA0 		str	r10, [r4, #28]
 125:..//kernel/core/tos_task.c ****     task->stk_base  = stk_base;
 962              		.loc 1 125 5 is_stmt 1 view .LVU313
 125:..//kernel/core/tos_task.c ****     task->stk_base  = stk_base;
 963              		.loc 1 125 21 is_stmt 0 view .LVU314
 964 00a8 84F82190 		strb	r9, [r4, #33]
 126:..//kernel/core/tos_task.c ****     task->stk_size  = stk_size;
 965              		.loc 1 126 5 is_stmt 1 view .LVU315
 126:..//kernel/core/tos_task.c ****     task->stk_size  = stk_size;
 966              		.loc 1 126 21 is_stmt 0 view .LVU316
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 41


 967 00ac 0B9B     		ldr	r3, [sp, #44]
 968 00ae 6362     		str	r3, [r4, #36]
 127:..//kernel/core/tos_task.c ****     strncpy(task->name, name, K_TASK_NAME_MAX);
 969              		.loc 1 127 5 is_stmt 1 view .LVU317
 127:..//kernel/core/tos_task.c ****     strncpy(task->name, name, K_TASK_NAME_MAX);
 970              		.loc 1 127 21 is_stmt 0 view .LVU318
 971 00b0 A762     		str	r7, [r4, #40]
 128:..//kernel/core/tos_task.c **** 
 972              		.loc 1 128 5 is_stmt 1 view .LVU319
 973 00b2 1022     		movs	r2, #16
 974 00b4 5946     		mov	r1, fp
 975 00b6 04F10800 		add	r0, r4, #8
 976 00ba FFF7FEFF 		bl	strncpy
 977              	.LVL97:
 140:..//kernel/core/tos_task.c ****     task_state_set_ready(task);
 978              		.loc 1 140 5 view .LVU320
 140:..//kernel/core/tos_task.c ****     task_state_set_ready(task);
 979              		.loc 1 140 5 view .LVU321
 980 00be FFF7FEFF 		bl	tos_cpu_cpsr_save
 981              	.LVL98:
 982 00c2 0646     		mov	r6, r0
 983              	.LVL99:
 141:..//kernel/core/tos_task.c ****     readyqueue_add_tail(task);
 984              		.loc 1 141 5 view .LVU322
 985              	.LBB186:
 986              	.LBI186:
 392:..//kernel/core/include/tos_task.h **** {
 987              		.loc 3 392 32 view .LVU323
 988              	.LBB187:
 394:..//kernel/core/include/tos_task.h **** }
 989              		.loc 3 394 5 view .LVU324
 394:..//kernel/core/include/tos_task.h **** }
 990              		.loc 3 394 17 is_stmt 0 view .LVU325
 991 00c4 84F82050 		strb	r5, [r4, #32]
 992              	.LVL100:
 394:..//kernel/core/include/tos_task.h **** }
 993              		.loc 3 394 17 view .LVU326
 994              	.LBE187:
 995              	.LBE186:
 142:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 996              		.loc 1 142 5 is_stmt 1 view .LVU327
 997 00c8 2046     		mov	r0, r4
 998              	.LVL101:
 142:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 999              		.loc 1 142 5 is_stmt 0 view .LVU328
 1000 00ca FFF7FEFF 		bl	readyqueue_add_tail
 1001              	.LVL102:
 143:..//kernel/core/tos_task.c **** 
 1002              		.loc 1 143 5 is_stmt 1 view .LVU329
 143:..//kernel/core/tos_task.c **** 
 1003              		.loc 1 143 5 view .LVU330
 1004 00ce 3046     		mov	r0, r6
 1005 00d0 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1006              	.LVL103:
 145:..//kernel/core/tos_task.c ****         knl_sched();
 1007              		.loc 1 145 5 view .LVU331
 145:..//kernel/core/tos_task.c ****         knl_sched();
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 42


 1008              		.loc 1 145 9 is_stmt 0 view .LVU332
 1009 00d4 FFF7FEFF 		bl	tos_knl_is_running
 1010              	.LVL104:
 145:..//kernel/core/tos_task.c ****         knl_sched();
 1011              		.loc 1 145 8 view .LVU333
 1012 00d8 58B9     		cbnz	r0, .L54
 149:..//kernel/core/tos_task.c **** }
 1013              		.loc 1 149 12 view .LVU334
 1014 00da 0020     		movs	r0, #0
 1015              	.LVL105:
 1016              	.L41:
 150:..//kernel/core/tos_task.c **** 
 1017              		.loc 1 150 1 view .LVU335
 1018 00dc 02B0     		add	sp, sp, #8
 1019              	.LCFI8:
 1020              		.cfi_remember_state
 1021              		.cfi_def_cfa_offset 32
 1022              		@ sp needed
 1023 00de BDE8F08E 		pop	{r4, r5, r6, r7, r9, r10, fp, pc}
 1024              	.LVL106:
 1025              	.L53:
 1026              	.LCFI9:
 1027              		.cfi_restore_state
 106:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1028              		.loc 1 106 9 discriminator 1 view .LVU336
 1029 00e2 2046     		mov	r0, r4
 1030 00e4 FFF7FEFF 		bl	knl_is_idle
 1031              	.LVL107:
 106:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1032              		.loc 1 106 8 discriminator 1 view .LVU337
 1033 00e8 0028     		cmp	r0, #0
 1034 00ea A8D1     		bne	.L42
 107:..//kernel/core/tos_task.c ****     }
 1035              		.loc 1 107 16 view .LVU338
 1036 00ec 40F26F70 		movw	r0, #1903
 1037 00f0 F4E7     		b	.L41
 1038              	.LVL108:
 1039              	.L54:
 146:..//kernel/core/tos_task.c ****     }
 1040              		.loc 1 146 9 is_stmt 1 view .LVU339
 1041 00f2 FFF7FEFF 		bl	knl_sched
 1042              	.LVL109:
 149:..//kernel/core/tos_task.c **** }
 1043              		.loc 1 149 12 is_stmt 0 view .LVU340
 1044 00f6 2846     		mov	r0, r5
 1045 00f8 F0E7     		b	.L41
 1046              	.LVL110:
 1047              	.L43:
  93:..//kernel/core/tos_task.c **** 
 1048              		.loc 1 93 5 view .LVU341
 1049 00fa 4FF4C870 		mov	r0, #400
 1050 00fe EDE7     		b	.L41
 1051              	.L44:
  95:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 1052              		.loc 1 95 5 view .LVU342
 1053 0100 40F24C40 		movw	r0, #1100
 1054 0104 EAE7     		b	.L41
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 43


 1055              	.L45:
  96:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(stk_base);
 1056              		.loc 1 96 5 view .LVU343
 1057 0106 40F24C40 		movw	r0, #1100
 1058 010a E7E7     		b	.L41
 1059              	.L46:
  97:..//kernel/core/tos_task.c **** 
 1060              		.loc 1 97 5 view .LVU344
 1061 010c 40F24C40 		movw	r0, #1100
 1062 0110 E4E7     		b	.L41
 1063              	.L47:
 100:..//kernel/core/tos_task.c **** 
 1064              		.loc 1 100 5 view .LVU345
 1065 0112 40F26C70 		movw	r0, #1900
 1066 0116 E1E7     		b	.L41
 1067              	.L48:
 103:..//kernel/core/tos_task.c ****     }
 1068              		.loc 1 103 16 view .LVU346
 1069 0118 40F27470 		movw	r0, #1908
 1070 011c DEE7     		b	.L41
 1071              	.L50:
 111:..//kernel/core/tos_task.c ****     }
 1072              		.loc 1 111 16 view .LVU347
 1073 011e 40F26F70 		movw	r0, #1903
 1074 0122 DBE7     		b	.L41
 1075              	.L56:
 1076              		.align	2
 1077              	.L55:
 1078 0124 00000000 		.word	k_stat_list
 1079 0128 00000000 		.word	task_exit
 1080              		.cfi_endproc
 1081              	.LFE114:
 1083              		.section	.text.task_free_all,"ax",%progbits
 1084              		.align	1
 1085              		.global	task_free_all
 1086              		.syntax unified
 1087              		.thumb
 1088              		.thumb_func
 1089              		.fpu softvfp
 1091              	task_free_all:
 1092              	.LFB118:
 210:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1093              		.loc 1 210 1 is_stmt 1 view -0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097 0000 38B5     		push	{r3, r4, r5, lr}
 1098              	.LCFI10:
 1099              		.cfi_def_cfa_offset 16
 1100              		.cfi_offset 3, -16
 1101              		.cfi_offset 4, -12
 1102              		.cfi_offset 5, -8
 1103              		.cfi_offset 14, -4
 211:..//kernel/core/tos_task.c ****     k_task_t *task, *tmp;
 1104              		.loc 1 211 5 view .LVU349
 1105              	.LVL111:
 212:..//kernel/core/tos_task.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 44


 1106              		.loc 1 212 5 view .LVU350
 214:..//kernel/core/tos_task.c **** 
 1107              		.loc 1 214 5 view .LVU351
 214:..//kernel/core/tos_task.c **** 
 1108              		.loc 1 214 5 view .LVU352
 1109 0002 FFF7FEFF 		bl	tos_cpu_cpsr_save
 1110              	.LVL112:
 1111 0006 0546     		mov	r5, r0
 1112              	.LVL113:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1113              		.loc 1 216 5 view .LVU353
 1114 0008 0C4B     		ldr	r3, .L62
 1115 000a 1868     		ldr	r0, [r3]
 1116              	.LVL114:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1117              		.loc 1 216 5 is_stmt 0 view .LVU354
 1118 000c 50F82C49 		ldr	r4, [r0], #-44
 1119              	.LVL115:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1120              		.loc 1 216 5 view .LVU355
 1121 0010 2C3C     		subs	r4, r4, #44
 1122              	.LVL116:
 1123              	.L58:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1124              		.loc 1 216 5 discriminator 1 view .LVU356
 1125 0012 00F12C02 		add	r2, r0, #44
 1126 0016 094B     		ldr	r3, .L62
 1127 0018 9A42     		cmp	r2, r3
 1128 001a 0AD0     		beq	.L61
 217:..//kernel/core/tos_task.c ****         task_free(task);
 1129              		.loc 1 217 9 is_stmt 1 discriminator 3 view .LVU357
 1130              	.LVL117:
 1131              	.LBB188:
 1132              	.LBI188:
 115:..//kernel/core/include/tos_list.h **** {
 1133              		.loc 2 115 32 discriminator 3 view .LVU358
 1134              	.LBB189:
 117:..//kernel/core/include/tos_list.h **** }
 1135              		.loc 2 117 5 discriminator 3 view .LVU359
 117:..//kernel/core/include/tos_list.h **** }
 1136              		.loc 2 117 19 is_stmt 0 discriminator 3 view .LVU360
 1137 001c 036B     		ldr	r3, [r0, #48]
 117:..//kernel/core/include/tos_list.h **** }
 1138              		.loc 2 117 31 discriminator 3 view .LVU361
 1139 001e C26A     		ldr	r2, [r0, #44]
 1140              	.LVL118:
 1141              	.LBB190:
 1142              	.LBI190:
  88:..//kernel/core/include/tos_list.h **** {
 1143              		.loc 2 88 24 is_stmt 1 discriminator 3 view .LVU362
 1144              	.LBB191:
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 1145              		.loc 2 90 5 discriminator 3 view .LVU363
  90:..//kernel/core/include/tos_list.h ****     prev->next = next;
 1146              		.loc 2 90 16 is_stmt 0 discriminator 3 view .LVU364
 1147 0020 5360     		str	r3, [r2, #4]
  91:..//kernel/core/include/tos_list.h **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 45


 1148              		.loc 2 91 5 is_stmt 1 discriminator 3 view .LVU365
  91:..//kernel/core/include/tos_list.h **** }
 1149              		.loc 2 91 16 is_stmt 0 discriminator 3 view .LVU366
 1150 0022 1A60     		str	r2, [r3]
 1151              	.LVL119:
  91:..//kernel/core/include/tos_list.h **** }
 1152              		.loc 2 91 16 discriminator 3 view .LVU367
 1153              	.LBE191:
 1154              	.LBE190:
 1155              	.LBE189:
 1156              	.LBE188:
 218:..//kernel/core/tos_task.c ****     }
 1157              		.loc 1 218 9 is_stmt 1 discriminator 3 view .LVU368
 1158 0024 FFF7FEFF 		bl	task_free
 1159              	.LVL120:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1160              		.loc 1 216 5 is_stmt 0 discriminator 3 view .LVU369
 1161 0028 E36A     		ldr	r3, [r4, #44]
 1162              	.LVL121:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1163              		.loc 1 216 5 discriminator 3 view .LVU370
 1164 002a 2046     		mov	r0, r4
 1165 002c A3F12C04 		sub	r4, r3, #44
 1166              	.LVL122:
 216:..//kernel/core/tos_task.c ****         tos_list_del(&task->dead_list);
 1167              		.loc 1 216 5 discriminator 3 view .LVU371
 1168 0030 EFE7     		b	.L58
 1169              	.L61:
 221:..//kernel/core/tos_task.c **** }
 1170              		.loc 1 221 5 is_stmt 1 view .LVU372
 221:..//kernel/core/tos_task.c **** }
 1171              		.loc 1 221 5 view .LVU373
 1172 0032 2846     		mov	r0, r5
 1173              	.LVL123:
 221:..//kernel/core/tos_task.c **** }
 1174              		.loc 1 221 5 is_stmt 0 view .LVU374
 1175 0034 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1176              	.LVL124:
 222:..//kernel/core/tos_task.c **** 
 1177              		.loc 1 222 1 view .LVU375
 1178 0038 38BD     		pop	{r3, r4, r5, pc}
 1179              	.LVL125:
 1180              	.L63:
 222:..//kernel/core/tos_task.c **** 
 1181              		.loc 1 222 1 view .LVU376
 1182 003a 00BF     		.align	2
 1183              	.L62:
 1184 003c 00000000 		.word	k_dead_task_list
 1185              		.cfi_endproc
 1186              	.LFE118:
 1188              		.section	.text.tos_task_create_dyn,"ax",%progbits
 1189              		.align	1
 1190              		.global	tos_task_create_dyn
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu softvfp
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 46


 1196              	tos_task_create_dyn:
 1197              	.LVL126:
 1198              	.LFB119:
 231:..//kernel/core/tos_task.c ****     k_err_t err;
 1199              		.loc 1 231 1 is_stmt 1 view -0
 1200              		.cfi_startproc
 1201              		@ args = 12, pretend = 0, frame = 0
 1202              		@ frame_needed = 0, uses_anonymous_args = 0
 231:..//kernel/core/tos_task.c ****     k_err_t err;
 1203              		.loc 1 231 1 is_stmt 0 view .LVU378
 1204 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1205              	.LCFI11:
 1206              		.cfi_def_cfa_offset 32
 1207              		.cfi_offset 4, -32
 1208              		.cfi_offset 5, -28
 1209              		.cfi_offset 6, -24
 1210              		.cfi_offset 7, -20
 1211              		.cfi_offset 8, -16
 1212              		.cfi_offset 9, -12
 1213              		.cfi_offset 10, -8
 1214              		.cfi_offset 14, -4
 1215 0004 84B0     		sub	sp, sp, #16
 1216              	.LCFI12:
 1217              		.cfi_def_cfa_offset 48
 1218 0006 0646     		mov	r6, r0
 1219 0008 8946     		mov	r9, r1
 1220 000a 1746     		mov	r7, r2
 1221 000c 9A46     		mov	r10, r3
 1222 000e 9DF83040 		ldrb	r4, [sp, #48]	@ zero_extendqisi2
 1223 0012 0D9D     		ldr	r5, [sp, #52]
 232:..//kernel/core/tos_task.c ****     k_task_t *the_task;
 1224              		.loc 1 232 5 is_stmt 1 view .LVU379
 233:..//kernel/core/tos_task.c ****     k_stack_t *stk_base;
 1225              		.loc 1 233 5 view .LVU380
 234:..//kernel/core/tos_task.c **** 
 1226              		.loc 1 234 5 view .LVU381
 236:..//kernel/core/tos_task.c **** 
 1227              		.loc 1 236 5 view .LVU382
 236:..//kernel/core/tos_task.c **** 
 1228              		.loc 1 236 5 view .LVU383
 1229 0014 FFF7FEFF 		bl	knl_is_inirq
 1230              	.LVL127:
 236:..//kernel/core/tos_task.c **** 
 1231              		.loc 1 236 5 is_stmt 0 view .LVU384
 1232 0018 90BB     		cbnz	r0, .L68
 238:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 1233              		.loc 1 238 5 is_stmt 1 view .LVU385
 238:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 1234              		.loc 1 238 5 view .LVU386
 1235 001a A6B3     		cbz	r6, .L69
 239:..//kernel/core/tos_task.c **** 
 1236              		.loc 1 239 5 view .LVU387
 239:..//kernel/core/tos_task.c **** 
 1237              		.loc 1 239 5 view .LVU388
 1238 001c B7B3     		cbz	r7, .L70
 241:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 1239              		.loc 1 241 5 view .LVU389
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 47


 241:..//kernel/core/tos_task.c ****         return K_ERR_TASK_STK_SIZE_INVALID;
 1240              		.loc 1 241 8 is_stmt 0 view .LVU390
 1241 001e 3F2D     		cmp	r5, #63
 1242 0020 37D9     		bls	.L71
 245:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1243              		.loc 1 245 5 is_stmt 1 view .LVU391
 245:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1244              		.loc 1 245 8 is_stmt 0 view .LVU392
 1245 0022 072C     		cmp	r4, #7
 1246 0024 38D0     		beq	.L72
 249:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1247              		.loc 1 249 5 is_stmt 1 view .LVU393
 249:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 1248              		.loc 1 249 8 is_stmt 0 view .LVU394
 1249 0026 3AD8     		bhi	.L73
 253:..//kernel/core/tos_task.c ****     if (!the_task) {
 1250              		.loc 1 253 5 is_stmt 1 view .LVU395
 253:..//kernel/core/tos_task.c ****     if (!the_task) {
 1251              		.loc 1 253 16 is_stmt 0 view .LVU396
 1252 0028 8821     		movs	r1, #136
 1253 002a 0120     		movs	r0, #1
 1254 002c FFF7FEFF 		bl	tos_mmheap_calloc
 1255              	.LVL128:
 254:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 1256              		.loc 1 254 5 is_stmt 1 view .LVU397
 254:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 1257              		.loc 1 254 8 is_stmt 0 view .LVU398
 1258 0030 8046     		mov	r8, r0
 1259 0032 B8B3     		cbz	r0, .L74
 258:..//kernel/core/tos_task.c ****     if (!stk_base) {
 1260              		.loc 1 258 5 is_stmt 1 view .LVU399
 258:..//kernel/core/tos_task.c ****     if (!stk_base) {
 1261              		.loc 1 258 16 is_stmt 0 view .LVU400
 1262 0034 2846     		mov	r0, r5
 1263              	.LVL129:
 258:..//kernel/core/tos_task.c ****     if (!stk_base) {
 1264              		.loc 1 258 16 view .LVU401
 1265 0036 FFF7FEFF 		bl	tos_mmheap_alloc
 1266              	.LVL130:
 259:..//kernel/core/tos_task.c ****         tos_mmheap_free(the_task);
 1267              		.loc 1 259 5 is_stmt 1 view .LVU402
 259:..//kernel/core/tos_task.c ****         tos_mmheap_free(the_task);
 1268              		.loc 1 259 8 is_stmt 0 view .LVU403
 1269 003a B8B1     		cbz	r0, .L76
 264:..//kernel/core/tos_task.c ****     err = tos_task_create(the_task, name, entry, arg, prio, stk_base, stk_size, timeslice);
 1270              		.loc 1 264 5 is_stmt 1 view .LVU404
 264:..//kernel/core/tos_task.c ****     err = tos_task_create(the_task, name, entry, arg, prio, stk_base, stk_size, timeslice);
 1271              		.loc 1 264 24 is_stmt 0 view .LVU405
 1272 003c C8F82400 		str	r0, [r8, #36]
 265:..//kernel/core/tos_task.c ****     if (err != K_ERR_NONE) {
 1273              		.loc 1 265 5 is_stmt 1 view .LVU406
 265:..//kernel/core/tos_task.c ****     if (err != K_ERR_NONE) {
 1274              		.loc 1 265 11 is_stmt 0 view .LVU407
 1275 0040 0E9A     		ldr	r2, [sp, #56]
 1276 0042 0392     		str	r2, [sp, #12]
 1277 0044 0295     		str	r5, [sp, #8]
 1278 0046 0190     		str	r0, [sp, #4]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 48


 1279 0048 0094     		str	r4, [sp]
 1280 004a 5346     		mov	r3, r10
 1281 004c 3A46     		mov	r2, r7
 1282 004e 4946     		mov	r1, r9
 1283 0050 4046     		mov	r0, r8
 1284              	.LVL131:
 265:..//kernel/core/tos_task.c ****     if (err != K_ERR_NONE) {
 1285              		.loc 1 265 11 view .LVU408
 1286 0052 FFF7FEFF 		bl	tos_task_create
 1287              	.LVL132:
 266:..//kernel/core/tos_task.c ****         task_free(the_task);
 1288              		.loc 1 266 5 is_stmt 1 view .LVU409
 266:..//kernel/core/tos_task.c ****         task_free(the_task);
 1289              		.loc 1 266 8 is_stmt 0 view .LVU410
 1290 0056 0446     		mov	r4, r0
 1291 0058 70B9     		cbnz	r0, .L77
 271:..//kernel/core/tos_task.c **** 
 1292              		.loc 1 271 5 is_stmt 1 view .LVU411
 1293              	.LVL133:
 1294              	.LBB192:
 1295              	.LBI192:
 204:..//kernel/core/include/tos_sys.h **** {
 1296              		.loc 4 204 32 view .LVU412
 1297              	.LBB193:
 206:..//kernel/core/include/tos_sys.h **** }
 1298              		.loc 4 206 5 view .LVU413
 206:..//kernel/core/include/tos_sys.h **** }
 1299              		.loc 4 206 25 is_stmt 0 view .LVU414
 1300 005a 0223     		movs	r3, #2
 1301 005c 88F80430 		strb	r3, [r8, #4]
 1302              	.LVL134:
 206:..//kernel/core/include/tos_sys.h **** }
 1303              		.loc 4 206 25 view .LVU415
 1304              	.LBE193:
 1305              	.LBE192:
 273:..//kernel/core/tos_task.c **** 
 1306              		.loc 1 273 5 is_stmt 1 view .LVU416
 273:..//kernel/core/tos_task.c **** 
 1307              		.loc 1 273 11 is_stmt 0 view .LVU417
 1308 0060 C6F80080 		str	r8, [r6]
 275:..//kernel/core/tos_task.c **** }
 1309              		.loc 1 275 5 is_stmt 1 view .LVU418
 1310              	.LVL135:
 1311              	.L65:
 276:..//kernel/core/tos_task.c **** 
 1312              		.loc 1 276 1 is_stmt 0 view .LVU419
 1313 0064 2046     		mov	r0, r4
 1314 0066 04B0     		add	sp, sp, #16
 1315              	.LCFI13:
 1316              		.cfi_remember_state
 1317              		.cfi_def_cfa_offset 32
 1318              		@ sp needed
 1319 0068 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1320              	.LVL136:
 1321              	.L76:
 1322              	.LCFI14:
 1323              		.cfi_restore_state
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 49


 260:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 1324              		.loc 1 260 9 is_stmt 1 view .LVU420
 1325 006c 4046     		mov	r0, r8
 1326              	.LVL137:
 260:..//kernel/core/tos_task.c ****         return K_ERR_TASK_OUT_OF_MEMORY;
 1327              		.loc 1 260 9 is_stmt 0 view .LVU421
 1328 006e FFF7FEFF 		bl	tos_mmheap_free
 1329              	.LVL138:
 261:..//kernel/core/tos_task.c ****     }
 1330              		.loc 1 261 9 is_stmt 1 view .LVU422
 261:..//kernel/core/tos_task.c ****     }
 1331              		.loc 1 261 16 is_stmt 0 view .LVU423
 1332 0072 40F27574 		movw	r4, #1909
 1333 0076 F5E7     		b	.L65
 1334              	.LVL139:
 1335              	.L77:
 267:..//kernel/core/tos_task.c ****         return err;
 1336              		.loc 1 267 9 is_stmt 1 view .LVU424
 1337 0078 4046     		mov	r0, r8
 1338              	.LVL140:
 267:..//kernel/core/tos_task.c ****         return err;
 1339              		.loc 1 267 9 is_stmt 0 view .LVU425
 1340 007a FFF7FEFF 		bl	task_free
 1341              	.LVL141:
 268:..//kernel/core/tos_task.c ****     }
 1342              		.loc 1 268 9 is_stmt 1 view .LVU426
 268:..//kernel/core/tos_task.c ****     }
 1343              		.loc 1 268 16 is_stmt 0 view .LVU427
 1344 007e F1E7     		b	.L65
 1345              	.LVL142:
 1346              	.L68:
 236:..//kernel/core/tos_task.c **** 
 1347              		.loc 1 236 5 view .LVU428
 1348 0080 4FF4C874 		mov	r4, #400
 1349 0084 EEE7     		b	.L65
 1350              	.L69:
 238:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(entry);
 1351              		.loc 1 238 5 view .LVU429
 1352 0086 40F24C44 		movw	r4, #1100
 1353 008a EBE7     		b	.L65
 1354              	.L70:
 239:..//kernel/core/tos_task.c **** 
 1355              		.loc 1 239 5 view .LVU430
 1356 008c 40F24C44 		movw	r4, #1100
 1357 0090 E8E7     		b	.L65
 1358              	.L71:
 242:..//kernel/core/tos_task.c ****     }
 1359              		.loc 1 242 16 view .LVU431
 1360 0092 40F27474 		movw	r4, #1908
 1361 0096 E5E7     		b	.L65
 1362              	.L72:
 246:..//kernel/core/tos_task.c ****     }
 1363              		.loc 1 246 16 view .LVU432
 1364 0098 40F26F74 		movw	r4, #1903
 1365 009c E2E7     		b	.L65
 1366              	.L73:
 250:..//kernel/core/tos_task.c ****     }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 50


 1367              		.loc 1 250 16 view .LVU433
 1368 009e 40F26F74 		movw	r4, #1903
 1369 00a2 DFE7     		b	.L65
 1370              	.LVL143:
 1371              	.L74:
 255:..//kernel/core/tos_task.c ****     }
 1372              		.loc 1 255 16 view .LVU434
 1373 00a4 40F27574 		movw	r4, #1909
 1374 00a8 DCE7     		b	.L65
 1375              		.cfi_endproc
 1376              	.LFE119:
 1378              		.section	.text.tos_task_destroy,"ax",%progbits
 1379              		.align	1
 1380              		.global	tos_task_destroy
 1381              		.syntax unified
 1382              		.thumb
 1383              		.thumb_func
 1384              		.fpu softvfp
 1386              	tos_task_destroy:
 1387              	.LVL144:
 1388              	.LFB121:
 302:..//kernel/core/tos_task.c **** 
 303:..//kernel/core/tos_task.c **** #endif
 304:..//kernel/core/tos_task.c **** 
 305:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_destroy(k_task_t *task)
 306:..//kernel/core/tos_task.c **** {
 1389              		.loc 1 306 1 is_stmt 1 view -0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 0
 1392              		@ frame_needed = 0, uses_anonymous_args = 0
 1393              		.loc 1 306 1 is_stmt 0 view .LVU436
 1394 0000 10B5     		push	{r4, lr}
 1395              	.LCFI15:
 1396              		.cfi_def_cfa_offset 8
 1397              		.cfi_offset 4, -8
 1398              		.cfi_offset 14, -4
 1399 0002 0446     		mov	r4, r0
 307:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
 1400              		.loc 1 307 5 is_stmt 1 view .LVU437
 1401              		.loc 1 307 5 view .LVU438
 1402 0004 FFF7FEFF 		bl	knl_is_inirq
 1403              	.LVL145:
 1404              		.loc 1 307 5 is_stmt 0 view .LVU439
 1405 0008 08BB     		cbnz	r0, .L83
 308:..//kernel/core/tos_task.c **** 
 309:..//kernel/core/tos_task.c ****     if (unlikely(!task)) {
 1406              		.loc 1 309 5 is_stmt 1 view .LVU440
 1407              		.loc 1 309 8 is_stmt 0 view .LVU441
 1408 000a 3CB1     		cbz	r4, .L87
 1409              	.L80:
 310:..//kernel/core/tos_task.c ****         task = k_curr_task;
 311:..//kernel/core/tos_task.c ****     }
 312:..//kernel/core/tos_task.c **** 
 313:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 1410              		.loc 1 313 5 is_stmt 1 view .LVU442
 1411              		.loc 1 313 5 view .LVU443
 1412              	.LVL146:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 51


 1413              	.LBB194:
 1414              	.LBI194:
 182:..//kernel/core/include/tos_sys.h **** {
 1415              		.loc 4 182 31 view .LVU444
 1416              	.LBB195:
 184:..//kernel/core/include/tos_sys.h **** }
 1417              		.loc 4 184 5 view .LVU445
 184:..//kernel/core/include/tos_sys.h **** }
 1418              		.loc 4 184 19 is_stmt 0 view .LVU446
 1419 000c E288     		ldrh	r2, [r4, #6]
 1420              	.LVL147:
 184:..//kernel/core/include/tos_sys.h **** }
 1421              		.loc 4 184 19 view .LVU447
 1422              	.LBE195:
 1423              	.LBE194:
 1424              		.loc 1 313 5 view .LVU448
 1425 000e 4DF6D823 		movw	r3, #56024
 1426 0012 9A42     		cmp	r2, r3
 1427 0014 05D0     		beq	.L88
 1428              		.loc 1 313 5 view .LVU449
 1429 0016 40F24D40 		movw	r0, #1101
 1430              	.L79:
 314:..//kernel/core/tos_task.c **** 
 315:..//kernel/core/tos_task.c ****     if (knl_is_self(task) && knl_is_sched_locked()) {
 316:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 317:..//kernel/core/tos_task.c ****     }
 318:..//kernel/core/tos_task.c **** 
 319:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_DYNAMIC_CREATE_EN > 0u
 320:..//kernel/core/tos_task.c ****     if (knl_object_alloc_is_dynamic(&task->knl_obj)) {
 321:..//kernel/core/tos_task.c ****         return task_destroy_dyn(task);
 322:..//kernel/core/tos_task.c ****     }
 323:..//kernel/core/tos_task.c **** #endif
 324:..//kernel/core/tos_task.c **** 
 325:..//kernel/core/tos_task.c ****     return task_destroy_static(task);
 326:..//kernel/core/tos_task.c **** }
 1431              		.loc 1 326 1 view .LVU450
 1432 001a 10BD     		pop	{r4, pc}
 1433              	.LVL148:
 1434              	.L87:
 310:..//kernel/core/tos_task.c ****     }
 1435              		.loc 1 310 9 is_stmt 1 view .LVU451
 310:..//kernel/core/tos_task.c ****     }
 1436              		.loc 1 310 14 is_stmt 0 view .LVU452
 1437 001c 0D4B     		ldr	r3, .L91
 1438 001e 1C68     		ldr	r4, [r3]
 1439              	.LVL149:
 310:..//kernel/core/tos_task.c ****     }
 1440              		.loc 1 310 14 view .LVU453
 1441 0020 F4E7     		b	.L80
 1442              	.L88:
 315:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1443              		.loc 1 315 5 is_stmt 1 view .LVU454
 315:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1444              		.loc 1 315 9 is_stmt 0 view .LVU455
 1445 0022 2046     		mov	r0, r4
 1446 0024 FFF7FEFF 		bl	knl_is_self
 1447              	.LVL150:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 52


 315:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1448              		.loc 1 315 8 view .LVU456
 1449 0028 30B9     		cbnz	r0, .L89
 1450              	.L81:
 320:..//kernel/core/tos_task.c ****         return task_destroy_dyn(task);
 1451              		.loc 1 320 5 is_stmt 1 view .LVU457
 1452              	.LVL151:
 1453              	.LBB196:
 1454              	.LBI196:
 214:..//kernel/core/include/tos_sys.h **** {
 1455              		.loc 4 214 31 view .LVU458
 1456              	.LBB197:
 216:..//kernel/core/include/tos_sys.h **** }
 1457              		.loc 4 216 5 view .LVU459
 216:..//kernel/core/include/tos_sys.h **** }
 1458              		.loc 4 216 19 is_stmt 0 view .LVU460
 1459 002a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1460              	.LVL152:
 216:..//kernel/core/include/tos_sys.h **** }
 1461              		.loc 4 216 19 view .LVU461
 1462              	.LBE197:
 1463              	.LBE196:
 320:..//kernel/core/tos_task.c ****         return task_destroy_dyn(task);
 1464              		.loc 1 320 8 view .LVU462
 1465 002c 022B     		cmp	r3, #2
 1466 002e 0AD0     		beq	.L90
 325:..//kernel/core/tos_task.c **** }
 1467              		.loc 1 325 5 is_stmt 1 view .LVU463
 325:..//kernel/core/tos_task.c **** }
 1468              		.loc 1 325 12 is_stmt 0 view .LVU464
 1469 0030 2046     		mov	r0, r4
 1470 0032 FFF7FEFF 		bl	task_destroy_static
 1471              	.LVL153:
 1472 0036 F0E7     		b	.L79
 1473              	.L89:
 315:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1474              		.loc 1 315 30 discriminator 1 view .LVU465
 1475 0038 FFF7FEFF 		bl	knl_is_sched_locked
 1476              	.LVL154:
 315:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1477              		.loc 1 315 27 discriminator 1 view .LVU466
 1478 003c 0028     		cmp	r0, #0
 1479 003e F4D0     		beq	.L81
 316:..//kernel/core/tos_task.c ****     }
 1480              		.loc 1 316 16 view .LVU467
 1481 0040 40F2A460 		movw	r0, #1700
 1482 0044 E9E7     		b	.L79
 1483              	.L90:
 321:..//kernel/core/tos_task.c ****     }
 1484              		.loc 1 321 9 is_stmt 1 view .LVU468
 321:..//kernel/core/tos_task.c ****     }
 1485              		.loc 1 321 16 is_stmt 0 view .LVU469
 1486 0046 2046     		mov	r0, r4
 1487 0048 FFF7FEFF 		bl	task_destroy_dyn
 1488              	.LVL155:
 1489 004c E5E7     		b	.L79
 1490              	.L83:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 53


 307:..//kernel/core/tos_task.c **** 
 1491              		.loc 1 307 5 view .LVU470
 1492 004e 4FF4C870 		mov	r0, #400
 1493 0052 E2E7     		b	.L79
 1494              	.L92:
 1495              		.align	2
 1496              	.L91:
 1497 0054 00000000 		.word	k_curr_task
 1498              		.cfi_endproc
 1499              	.LFE121:
 1501              		.section	.text.task_exit,"ax",%progbits
 1502              		.align	1
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1506              		.fpu softvfp
 1508              	task_exit:
 1509              	.LFB111:
  52:..//kernel/core/tos_task.c ****     tos_task_destroy(K_NULL);
 1510              		.loc 1 52 1 is_stmt 1 view -0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514 0000 08B5     		push	{r3, lr}
 1515              	.LCFI16:
 1516              		.cfi_def_cfa_offset 8
 1517              		.cfi_offset 3, -8
 1518              		.cfi_offset 14, -4
  53:..//kernel/core/tos_task.c **** }
 1519              		.loc 1 53 5 view .LVU472
 1520 0002 0020     		movs	r0, #0
 1521 0004 FFF7FEFF 		bl	tos_task_destroy
 1522              	.LVL156:
  54:..//kernel/core/tos_task.c **** 
 1523              		.loc 1 54 1 is_stmt 0 view .LVU473
 1524 0008 08BD     		pop	{r3, pc}
 1525              		.cfi_endproc
 1526              	.LFE111:
 1528              		.section	.text.tos_task_yield,"ax",%progbits
 1529              		.align	1
 1530              		.global	tos_task_yield
 1531              		.syntax unified
 1532              		.thumb
 1533              		.thumb_func
 1534              		.fpu softvfp
 1536              	tos_task_yield:
 1537              	.LFB122:
 327:..//kernel/core/tos_task.c **** 
 328:..//kernel/core/tos_task.c **** __API__ void tos_task_yield(void)
 329:..//kernel/core/tos_task.c **** {
 1538              		.loc 1 329 1 is_stmt 1 view -0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 0
 1541              		@ frame_needed = 0, uses_anonymous_args = 0
 1542 0000 38B5     		push	{r3, r4, r5, lr}
 1543              	.LCFI17:
 1544              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 54


 1545              		.cfi_offset 3, -16
 1546              		.cfi_offset 4, -12
 1547              		.cfi_offset 5, -8
 1548              		.cfi_offset 14, -4
 330:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1549              		.loc 1 330 5 view .LVU475
 1550              	.LVL157:
 331:..//kernel/core/tos_task.c **** 
 332:..//kernel/core/tos_task.c ****     if (knl_is_inirq()) {
 1551              		.loc 1 332 5 view .LVU476
 1552              		.loc 1 332 9 is_stmt 0 view .LVU477
 1553 0002 FFF7FEFF 		bl	knl_is_inirq
 1554              	.LVL158:
 1555              		.loc 1 332 8 view .LVU478
 1556 0006 00B1     		cbz	r0, .L98
 1557              	.LVL159:
 1558              	.L95:
 333:..//kernel/core/tos_task.c ****         return;
 334:..//kernel/core/tos_task.c ****     }
 335:..//kernel/core/tos_task.c **** 
 336:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 337:..//kernel/core/tos_task.c **** 
 338:..//kernel/core/tos_task.c ****     readyqueue_remove(k_curr_task);
 339:..//kernel/core/tos_task.c ****     readyqueue_add_tail(k_curr_task);
 340:..//kernel/core/tos_task.c **** 
 341:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 342:..//kernel/core/tos_task.c ****     knl_sched();
 343:..//kernel/core/tos_task.c **** }
 1559              		.loc 1 343 1 view .LVU479
 1560 0008 38BD     		pop	{r3, r4, r5, pc}
 1561              	.LVL160:
 1562              	.L98:
 336:..//kernel/core/tos_task.c **** 
 1563              		.loc 1 336 5 is_stmt 1 view .LVU480
 336:..//kernel/core/tos_task.c **** 
 1564              		.loc 1 336 5 view .LVU481
 1565 000a FFF7FEFF 		bl	tos_cpu_cpsr_save
 1566              	.LVL161:
 1567 000e 0546     		mov	r5, r0
 1568              	.LVL162:
 338:..//kernel/core/tos_task.c ****     readyqueue_add_tail(k_curr_task);
 1569              		.loc 1 338 5 view .LVU482
 1570 0010 064C     		ldr	r4, .L99
 1571 0012 2068     		ldr	r0, [r4]
 1572              	.LVL163:
 338:..//kernel/core/tos_task.c ****     readyqueue_add_tail(k_curr_task);
 1573              		.loc 1 338 5 is_stmt 0 view .LVU483
 1574 0014 FFF7FEFF 		bl	readyqueue_remove
 1575              	.LVL164:
 339:..//kernel/core/tos_task.c **** 
 1576              		.loc 1 339 5 is_stmt 1 view .LVU484
 1577 0018 2068     		ldr	r0, [r4]
 1578 001a FFF7FEFF 		bl	readyqueue_add_tail
 1579              	.LVL165:
 341:..//kernel/core/tos_task.c ****     knl_sched();
 1580              		.loc 1 341 5 view .LVU485
 341:..//kernel/core/tos_task.c ****     knl_sched();
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 55


 1581              		.loc 1 341 5 view .LVU486
 1582 001e 2846     		mov	r0, r5
 1583 0020 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1584              	.LVL166:
 342:..//kernel/core/tos_task.c **** }
 1585              		.loc 1 342 5 view .LVU487
 1586 0024 FFF7FEFF 		bl	knl_sched
 1587              	.LVL167:
 1588 0028 EEE7     		b	.L95
 1589              	.L100:
 1590 002a 00BF     		.align	2
 1591              	.L99:
 1592 002c 00000000 		.word	k_curr_task
 1593              		.cfi_endproc
 1594              	.LFE122:
 1596              		.section	.text.tos_task_prio_change,"ax",%progbits
 1597              		.align	1
 1598              		.global	tos_task_prio_change
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1602              		.fpu softvfp
 1604              	tos_task_prio_change:
 1605              	.LVL168:
 1606              	.LFB123:
 344:..//kernel/core/tos_task.c **** 
 345:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_prio_change(k_task_t *task, k_prio_t prio_new)
 346:..//kernel/core/tos_task.c **** {
 1607              		.loc 1 346 1 view -0
 1608              		.cfi_startproc
 1609              		@ args = 0, pretend = 0, frame = 0
 1610              		@ frame_needed = 0, uses_anonymous_args = 0
 1611              		.loc 1 346 1 is_stmt 0 view .LVU489
 1612 0000 70B5     		push	{r4, r5, r6, lr}
 1613              	.LCFI18:
 1614              		.cfi_def_cfa_offset 16
 1615              		.cfi_offset 4, -16
 1616              		.cfi_offset 5, -12
 1617              		.cfi_offset 6, -8
 1618              		.cfi_offset 14, -4
 1619 0002 0446     		mov	r4, r0
 1620 0004 0D46     		mov	r5, r1
 347:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1621              		.loc 1 347 5 is_stmt 1 view .LVU490
 1622              	.LVL169:
 348:..//kernel/core/tos_task.c **** #if TOS_CFG_MUTEX_EN > 0u
 349:..//kernel/core/tos_task.c ****     k_prio_t highest_pending_prio;
 1623              		.loc 1 349 5 view .LVU491
 350:..//kernel/core/tos_task.c **** #endif
 351:..//kernel/core/tos_task.c **** 
 352:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
 1624              		.loc 1 352 5 view .LVU492
 1625              		.loc 1 352 5 view .LVU493
 1626 0006 FFF7FEFF 		bl	knl_is_inirq
 1627              	.LVL170:
 1628              		.loc 1 352 5 is_stmt 0 view .LVU494
 1629 000a 0028     		cmp	r0, #0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 56


 1630 000c 4CD1     		bne	.L109
 353:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 1631              		.loc 1 353 5 is_stmt 1 view .LVU495
 1632              		.loc 1 353 5 view .LVU496
 1633 000e 002C     		cmp	r4, #0
 1634 0010 4DD0     		beq	.L110
 354:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 1635              		.loc 1 354 5 view .LVU497
 1636              		.loc 1 354 5 view .LVU498
 1637              	.LVL171:
 1638              	.LBB198:
 1639              	.LBI198:
 182:..//kernel/core/include/tos_sys.h **** {
 1640              		.loc 4 182 31 view .LVU499
 1641              	.LBB199:
 184:..//kernel/core/include/tos_sys.h **** }
 1642              		.loc 4 184 5 view .LVU500
 184:..//kernel/core/include/tos_sys.h **** }
 1643              		.loc 4 184 19 is_stmt 0 view .LVU501
 1644 0012 E288     		ldrh	r2, [r4, #6]
 1645              	.LVL172:
 184:..//kernel/core/include/tos_sys.h **** }
 1646              		.loc 4 184 19 view .LVU502
 1647              	.LBE199:
 1648              	.LBE198:
 1649              		.loc 1 354 5 view .LVU503
 1650 0014 4DF6D823 		movw	r3, #56024
 1651 0018 9A42     		cmp	r2, r3
 1652 001a 4BD1     		bne	.L111
 355:..//kernel/core/tos_task.c **** 
 356:..//kernel/core/tos_task.c ****     if (unlikely(prio_new >= K_TASK_PRIO_IDLE)) {
 1653              		.loc 1 356 5 is_stmt 1 view .LVU504
 1654              		.loc 1 356 8 is_stmt 0 view .LVU505
 1655 001c 062D     		cmp	r5, #6
 1656 001e 4CD8     		bhi	.L112
 357:..//kernel/core/tos_task.c ****         return K_ERR_TASK_PRIO_INVALID;
 358:..//kernel/core/tos_task.c ****     }
 359:..//kernel/core/tos_task.c **** 
 360:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 1657              		.loc 1 360 5 is_stmt 1 view .LVU506
 1658              		.loc 1 360 5 view .LVU507
 1659 0020 FFF7FEFF 		bl	tos_cpu_cpsr_save
 1660              	.LVL173:
 1661 0024 0646     		mov	r6, r0
 1662              	.LVL174:
 361:..//kernel/core/tos_task.c **** 
 362:..//kernel/core/tos_task.c ****     if (task->prio == prio_new) { // just kidding
 1663              		.loc 1 362 5 view .LVU508
 1664              		.loc 1 362 13 is_stmt 0 view .LVU509
 1665 0026 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 1666              		.loc 1 362 8 view .LVU510
 1667 002a AB42     		cmp	r3, r5
 1668 002c 1DD0     		beq	.L114
 363:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 364:..//kernel/core/tos_task.c ****         knl_sched();
 365:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 366:..//kernel/core/tos_task.c ****     }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 57


 367:..//kernel/core/tos_task.c **** 
 368:..//kernel/core/tos_task.c **** #if TOS_CFG_MUTEX_EN > 0u
 369:..//kernel/core/tos_task.c ****     if (!tos_list_empty(&task->mutex_own_list)) {
 1669              		.loc 1 369 5 is_stmt 1 view .LVU511
 1670              		.loc 1 369 25 is_stmt 0 view .LVU512
 1671 002e 04F15803 		add	r3, r4, #88
 1672              	.LBB200:
 1673              	.LBI200:
 138:..//kernel/core/include/tos_list.h **** {
 1674              		.loc 2 138 31 is_stmt 1 view .LVU513
 1675              	.LBB201:
 1676              		.loc 2 140 5 view .LVU514
 1677              		.loc 2 140 16 is_stmt 0 view .LVU515
 1678 0032 A26D     		ldr	r2, [r4, #88]
 1679              	.LBE201:
 1680              	.LBE200:
 1681              		.loc 1 369 8 view .LVU516
 1682 0034 9342     		cmp	r3, r2
 1683 0036 07D0     		beq	.L104
 370:..//kernel/core/tos_task.c ****         highest_pending_prio = task_highest_pending_prio_get(task);
 1684              		.loc 1 370 9 is_stmt 1 view .LVU517
 1685              		.loc 1 370 32 is_stmt 0 view .LVU518
 1686 0038 2046     		mov	r0, r4
 1687              	.LVL175:
 1688              		.loc 1 370 32 view .LVU519
 1689 003a FFF7FEFF 		bl	task_highest_pending_prio_get
 1690              	.LVL176:
 371:..//kernel/core/tos_task.c ****         if (prio_new > highest_pending_prio) {
 1691              		.loc 1 371 9 is_stmt 1 view .LVU520
 1692              		.loc 1 371 12 is_stmt 0 view .LVU521
 1693 003e 8542     		cmp	r5, r0
 1694 0040 02D9     		bls	.L104
 372:..//kernel/core/tos_task.c ****             task->prio_pending  = prio_new;
 1695              		.loc 1 372 13 is_stmt 1 view .LVU522
 1696              		.loc 1 372 33 is_stmt 0 view .LVU523
 1697 0042 84F86050 		strb	r5, [r4, #96]
 373:..//kernel/core/tos_task.c ****             prio_new            = highest_pending_prio;
 1698              		.loc 1 373 13 is_stmt 1 view .LVU524
 1699              	.LVL177:
 1700              		.loc 1 373 33 is_stmt 0 view .LVU525
 1701 0046 0546     		mov	r5, r0
 1702              	.LVL178:
 1703              	.L104:
 374:..//kernel/core/tos_task.c ****         }
 375:..//kernel/core/tos_task.c ****     }
 376:..//kernel/core/tos_task.c **** #endif
 377:..//kernel/core/tos_task.c **** 
 378:..//kernel/core/tos_task.c ****     if (task_state_is_pending(task)) {
 1704              		.loc 1 378 5 is_stmt 1 view .LVU526
 1705              	.LBB202:
 1706              	.LBI202:
 357:..//kernel/core/include/tos_task.h **** {
 1707              		.loc 3 357 31 view .LVU527
 1708              	.LBB203:
 359:..//kernel/core/include/tos_task.h **** }
 1709              		.loc 3 359 5 view .LVU528
 359:..//kernel/core/include/tos_task.h **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 58


 1710              		.loc 3 359 16 is_stmt 0 view .LVU529
 1711 0048 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 1712              	.LVL179:
 359:..//kernel/core/include/tos_task.h **** }
 1713              		.loc 3 359 16 view .LVU530
 1714              	.LBE203:
 1715              	.LBE202:
 1716              		.loc 1 378 8 view .LVU531
 1717 004c 13F0020F 		tst	r3, #2
 1718 0050 11D1     		bne	.L115
 379:..//kernel/core/tos_task.c ****         task->prio = prio_new;
 380:..//kernel/core/tos_task.c ****         pend_list_adjust(task);
 381:..//kernel/core/tos_task.c ****     } else if (task_state_is_sleeping(task)) {
 1719              		.loc 1 381 12 is_stmt 1 view .LVU532
 1720              	.LVL180:
 354:..//kernel/core/include/tos_task.h **** }
 1721              		.loc 3 354 5 view .LVU533
 1722              		.loc 1 381 15 is_stmt 0 view .LVU534
 1723 0052 13F0010F 		tst	r3, #1
 1724 0056 14D0     		beq	.L107
 382:..//kernel/core/tos_task.c ****         task->prio = prio_new;
 1725              		.loc 1 382 9 is_stmt 1 view .LVU535
 1726              		.loc 1 382 20 is_stmt 0 view .LVU536
 1727 0058 84F82150 		strb	r5, [r4, #33]
 1728              	.L106:
 383:..//kernel/core/tos_task.c ****     } else if (task_state_is_ready(task)) { // good kid
 384:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 385:..//kernel/core/tos_task.c **** 
 386:..//kernel/core/tos_task.c ****         /* ATTENTION:
 387:..//kernel/core/tos_task.c ****             must do the prio assignment after readyqueue_remove
 388:..//kernel/core/tos_task.c ****             otherwise the k_rdyq.highest_prio refresh in readyqueue_remove will be wrong.
 389:..//kernel/core/tos_task.c ****          */
 390:..//kernel/core/tos_task.c ****         task->prio = prio_new;
 391:..//kernel/core/tos_task.c ****         if (knl_is_self(task)) {
 392:..//kernel/core/tos_task.c ****             readyqueue_add_head(task);
 393:..//kernel/core/tos_task.c ****         } else {
 394:..//kernel/core/tos_task.c ****             readyqueue_add_tail(task);
 395:..//kernel/core/tos_task.c ****         }
 396:..//kernel/core/tos_task.c ****     }
 397:..//kernel/core/tos_task.c **** 
 398:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 1729              		.loc 1 398 5 is_stmt 1 view .LVU537
 1730              		.loc 1 398 5 view .LVU538
 1731 005c 3046     		mov	r0, r6
 1732 005e FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1733              	.LVL181:
 399:..//kernel/core/tos_task.c ****     knl_sched();
 1734              		.loc 1 399 5 view .LVU539
 1735 0062 FFF7FEFF 		bl	knl_sched
 1736              	.LVL182:
 400:..//kernel/core/tos_task.c **** 
 401:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 1737              		.loc 1 401 5 view .LVU540
 1738              		.loc 1 401 12 is_stmt 0 view .LVU541
 1739 0066 0020     		movs	r0, #0
 1740              	.LVL183:
 1741              	.L102:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 59


 402:..//kernel/core/tos_task.c **** }
 1742              		.loc 1 402 1 view .LVU542
 1743 0068 70BD     		pop	{r4, r5, r6, pc}
 1744              	.LVL184:
 1745              	.L114:
 363:..//kernel/core/tos_task.c ****         knl_sched();
 1746              		.loc 1 363 9 is_stmt 1 view .LVU543
 363:..//kernel/core/tos_task.c ****         knl_sched();
 1747              		.loc 1 363 9 view .LVU544
 1748 006a FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1749              	.LVL185:
 364:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 1750              		.loc 1 364 9 view .LVU545
 1751 006e FFF7FEFF 		bl	knl_sched
 1752              	.LVL186:
 365:..//kernel/core/tos_task.c ****     }
 1753              		.loc 1 365 9 view .LVU546
 365:..//kernel/core/tos_task.c ****     }
 1754              		.loc 1 365 16 is_stmt 0 view .LVU547
 1755 0072 0020     		movs	r0, #0
 1756 0074 F8E7     		b	.L102
 1757              	.LVL187:
 1758              	.L115:
 379:..//kernel/core/tos_task.c ****         pend_list_adjust(task);
 1759              		.loc 1 379 9 is_stmt 1 view .LVU548
 379:..//kernel/core/tos_task.c ****         pend_list_adjust(task);
 1760              		.loc 1 379 20 is_stmt 0 view .LVU549
 1761 0076 84F82150 		strb	r5, [r4, #33]
 380:..//kernel/core/tos_task.c ****     } else if (task_state_is_sleeping(task)) {
 1762              		.loc 1 380 9 is_stmt 1 view .LVU550
 1763 007a 2046     		mov	r0, r4
 1764 007c FFF7FEFF 		bl	pend_list_adjust
 1765              	.LVL188:
 1766 0080 ECE7     		b	.L106
 1767              	.L107:
 383:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 1768              		.loc 1 383 12 view .LVU551
 1769              	.LVL189:
 349:..//kernel/core/include/tos_task.h **** }
 1770              		.loc 3 349 5 view .LVU552
 383:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 1771              		.loc 1 383 15 is_stmt 0 view .LVU553
 1772 0082 002B     		cmp	r3, #0
 1773 0084 EAD1     		bne	.L106
 384:..//kernel/core/tos_task.c **** 
 1774              		.loc 1 384 9 is_stmt 1 view .LVU554
 1775 0086 2046     		mov	r0, r4
 1776 0088 FFF7FEFF 		bl	readyqueue_remove
 1777              	.LVL190:
 390:..//kernel/core/tos_task.c ****         if (knl_is_self(task)) {
 1778              		.loc 1 390 9 view .LVU555
 390:..//kernel/core/tos_task.c ****         if (knl_is_self(task)) {
 1779              		.loc 1 390 20 is_stmt 0 view .LVU556
 1780 008c 84F82150 		strb	r5, [r4, #33]
 391:..//kernel/core/tos_task.c ****             readyqueue_add_head(task);
 1781              		.loc 1 391 9 is_stmt 1 view .LVU557
 391:..//kernel/core/tos_task.c ****             readyqueue_add_head(task);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 60


 1782              		.loc 1 391 13 is_stmt 0 view .LVU558
 1783 0090 2046     		mov	r0, r4
 1784 0092 FFF7FEFF 		bl	knl_is_self
 1785              	.LVL191:
 391:..//kernel/core/tos_task.c ****             readyqueue_add_head(task);
 1786              		.loc 1 391 12 view .LVU559
 1787 0096 18B1     		cbz	r0, .L108
 392:..//kernel/core/tos_task.c ****         } else {
 1788              		.loc 1 392 13 is_stmt 1 view .LVU560
 1789 0098 2046     		mov	r0, r4
 1790 009a FFF7FEFF 		bl	readyqueue_add_head
 1791              	.LVL192:
 1792 009e DDE7     		b	.L106
 1793              	.L108:
 394:..//kernel/core/tos_task.c ****         }
 1794              		.loc 1 394 13 view .LVU561
 1795 00a0 2046     		mov	r0, r4
 1796 00a2 FFF7FEFF 		bl	readyqueue_add_tail
 1797              	.LVL193:
 1798 00a6 D9E7     		b	.L106
 1799              	.LVL194:
 1800              	.L109:
 352:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 1801              		.loc 1 352 5 is_stmt 0 view .LVU562
 1802 00a8 4FF4C870 		mov	r0, #400
 1803 00ac DCE7     		b	.L102
 1804              	.L110:
 353:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 1805              		.loc 1 353 5 view .LVU563
 1806 00ae 40F24C40 		movw	r0, #1100
 1807 00b2 D9E7     		b	.L102
 1808              	.L111:
 354:..//kernel/core/tos_task.c **** 
 1809              		.loc 1 354 5 view .LVU564
 1810 00b4 40F24D40 		movw	r0, #1101
 1811 00b8 D6E7     		b	.L102
 1812              	.L112:
 357:..//kernel/core/tos_task.c ****     }
 1813              		.loc 1 357 16 view .LVU565
 1814 00ba 40F26F70 		movw	r0, #1903
 1815 00be D3E7     		b	.L102
 1816              		.cfi_endproc
 1817              	.LFE123:
 1819              		.section	.text.tos_task_suspend,"ax",%progbits
 1820              		.align	1
 1821              		.global	tos_task_suspend
 1822              		.syntax unified
 1823              		.thumb
 1824              		.thumb_func
 1825              		.fpu softvfp
 1827              	tos_task_suspend:
 1828              	.LVL195:
 1829              	.LFB124:
 403:..//kernel/core/tos_task.c **** 
 404:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_suspend(k_task_t *task)
 405:..//kernel/core/tos_task.c **** {
 1830              		.loc 1 405 1 is_stmt 1 view -0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 61


 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 0
 1833              		@ frame_needed = 0, uses_anonymous_args = 0
 1834              		.loc 1 405 1 is_stmt 0 view .LVU567
 1835 0000 38B5     		push	{r3, r4, r5, lr}
 1836              	.LCFI19:
 1837              		.cfi_def_cfa_offset 16
 1838              		.cfi_offset 3, -16
 1839              		.cfi_offset 4, -12
 1840              		.cfi_offset 5, -8
 1841              		.cfi_offset 14, -4
 406:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1842              		.loc 1 406 5 is_stmt 1 view .LVU568
 1843              	.LVL196:
 407:..//kernel/core/tos_task.c **** 
 408:..//kernel/core/tos_task.c ****     if (unlikely(!task)) {
 1844              		.loc 1 408 5 view .LVU569
 1845              		.loc 1 408 9 is_stmt 0 view .LVU570
 1846 0002 0446     		mov	r4, r0
 1847              		.loc 1 408 8 view .LVU571
 1848 0004 38B1     		cbz	r0, .L125
 1849              	.LVL197:
 1850              	.L117:
 409:..//kernel/core/tos_task.c ****         task = k_curr_task;
 410:..//kernel/core/tos_task.c ****     }
 411:..//kernel/core/tos_task.c **** 
 412:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 1851              		.loc 1 412 5 is_stmt 1 view .LVU572
 1852              		.loc 1 412 5 view .LVU573
 1853              	.LBB204:
 1854              	.LBI204:
 182:..//kernel/core/include/tos_sys.h **** {
 1855              		.loc 4 182 31 view .LVU574
 1856              	.LBB205:
 184:..//kernel/core/include/tos_sys.h **** }
 1857              		.loc 4 184 5 view .LVU575
 184:..//kernel/core/include/tos_sys.h **** }
 1858              		.loc 4 184 19 is_stmt 0 view .LVU576
 1859 0006 E288     		ldrh	r2, [r4, #6]
 1860              	.LVL198:
 184:..//kernel/core/include/tos_sys.h **** }
 1861              		.loc 4 184 19 view .LVU577
 1862              	.LBE205:
 1863              	.LBE204:
 1864              		.loc 1 412 5 view .LVU578
 1865 0008 4DF6D823 		movw	r3, #56024
 1866 000c 9A42     		cmp	r2, r3
 1867 000e 05D0     		beq	.L126
 1868              		.loc 1 412 5 view .LVU579
 1869 0010 40F24D40 		movw	r0, #1101
 1870              	.LVL199:
 1871              	.L118:
 413:..//kernel/core/tos_task.c **** 
 414:..//kernel/core/tos_task.c ****     if (knl_is_idle(task)) {
 415:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPEND_IDLE;
 416:..//kernel/core/tos_task.c ****     }
 417:..//kernel/core/tos_task.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 62


 418:..//kernel/core/tos_task.c ****     if (unlikely(knl_is_self(task)) && knl_is_sched_locked()) { // if not you, who?
 419:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 420:..//kernel/core/tos_task.c ****     }
 421:..//kernel/core/tos_task.c **** 
 422:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 423:..//kernel/core/tos_task.c **** 
 424:..//kernel/core/tos_task.c ****     if (task_state_is_ready(task)) { // kill the good kid
 425:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 426:..//kernel/core/tos_task.c ****     }
 427:..//kernel/core/tos_task.c ****     task_state_set_suspended(task);
 428:..//kernel/core/tos_task.c **** 
 429:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 430:..//kernel/core/tos_task.c ****     knl_sched();
 431:..//kernel/core/tos_task.c **** 
 432:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 433:..//kernel/core/tos_task.c **** }
 1872              		.loc 1 433 1 view .LVU580
 1873 0014 38BD     		pop	{r3, r4, r5, pc}
 1874              	.LVL200:
 1875              	.L125:
 409:..//kernel/core/tos_task.c ****     }
 1876              		.loc 1 409 9 is_stmt 1 view .LVU581
 409:..//kernel/core/tos_task.c ****     }
 1877              		.loc 1 409 14 is_stmt 0 view .LVU582
 1878 0016 164B     		ldr	r3, .L129
 1879 0018 1C68     		ldr	r4, [r3]
 1880              	.LVL201:
 409:..//kernel/core/tos_task.c ****     }
 1881              		.loc 1 409 14 view .LVU583
 1882 001a F4E7     		b	.L117
 1883              	.L126:
 414:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPEND_IDLE;
 1884              		.loc 1 414 5 is_stmt 1 view .LVU584
 414:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPEND_IDLE;
 1885              		.loc 1 414 9 is_stmt 0 view .LVU585
 1886 001c 2046     		mov	r0, r4
 1887 001e FFF7FEFF 		bl	knl_is_idle
 1888              	.LVL202:
 414:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPEND_IDLE;
 1889              		.loc 1 414 8 view .LVU586
 1890 0022 08BB     		cbnz	r0, .L122
 418:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1891              		.loc 1 418 5 is_stmt 1 view .LVU587
 418:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1892              		.loc 1 418 9 is_stmt 0 view .LVU588
 1893 0024 2046     		mov	r0, r4
 1894 0026 FFF7FEFF 		bl	knl_is_self
 1895              	.LVL203:
 418:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1896              		.loc 1 418 8 view .LVU589
 1897 002a 90B9     		cbnz	r0, .L127
 1898              	.L119:
 422:..//kernel/core/tos_task.c **** 
 1899              		.loc 1 422 5 is_stmt 1 view .LVU590
 422:..//kernel/core/tos_task.c **** 
 1900              		.loc 1 422 5 view .LVU591
 1901 002c FFF7FEFF 		bl	tos_cpu_cpsr_save
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 63


 1902              	.LVL204:
 1903 0030 0546     		mov	r5, r0
 1904              	.LVL205:
 424:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 1905              		.loc 1 424 5 view .LVU592
 1906              	.LBB206:
 1907              	.LBI206:
 347:..//kernel/core/include/tos_task.h **** {
 1908              		.loc 3 347 31 view .LVU593
 1909              	.LBB207:
 349:..//kernel/core/include/tos_task.h **** }
 1910              		.loc 3 349 5 view .LVU594
 349:..//kernel/core/include/tos_task.h **** }
 1911              		.loc 3 349 16 is_stmt 0 view .LVU595
 1912 0032 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 1913              	.LVL206:
 349:..//kernel/core/include/tos_task.h **** }
 1914              		.loc 3 349 16 view .LVU596
 1915              	.LBE207:
 1916              	.LBE206:
 424:..//kernel/core/tos_task.c ****         readyqueue_remove(task);
 1917              		.loc 1 424 8 view .LVU597
 1918 0036 9BB1     		cbz	r3, .L128
 1919              	.LVL207:
 1920              	.L120:
 427:..//kernel/core/tos_task.c **** 
 1921              		.loc 1 427 5 is_stmt 1 view .LVU598
 1922              	.LBB208:
 1923              	.LBI208:
 382:..//kernel/core/include/tos_task.h **** {
 1924              		.loc 3 382 32 view .LVU599
 1925              	.LBB209:
 384:..//kernel/core/include/tos_task.h **** }
 1926              		.loc 3 384 5 view .LVU600
 384:..//kernel/core/include/tos_task.h **** }
 1927              		.loc 3 384 17 is_stmt 0 view .LVU601
 1928 0038 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 1929 003c 43F00403 		orr	r3, r3, #4
 1930 0040 84F82030 		strb	r3, [r4, #32]
 1931              	.LVL208:
 384:..//kernel/core/include/tos_task.h **** }
 1932              		.loc 3 384 17 view .LVU602
 1933              	.LBE209:
 1934              	.LBE208:
 429:..//kernel/core/tos_task.c ****     knl_sched();
 1935              		.loc 1 429 5 is_stmt 1 view .LVU603
 429:..//kernel/core/tos_task.c ****     knl_sched();
 1936              		.loc 1 429 5 view .LVU604
 1937 0044 2846     		mov	r0, r5
 1938 0046 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 1939              	.LVL209:
 430:..//kernel/core/tos_task.c **** 
 1940              		.loc 1 430 5 view .LVU605
 1941 004a FFF7FEFF 		bl	knl_sched
 1942              	.LVL210:
 432:..//kernel/core/tos_task.c **** }
 1943              		.loc 1 432 5 view .LVU606
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 64


 432:..//kernel/core/tos_task.c **** }
 1944              		.loc 1 432 12 is_stmt 0 view .LVU607
 1945 004e 0020     		movs	r0, #0
 1946 0050 E0E7     		b	.L118
 1947              	.LVL211:
 1948              	.L127:
 418:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1949              		.loc 1 418 40 discriminator 1 view .LVU608
 1950 0052 FFF7FEFF 		bl	knl_is_sched_locked
 1951              	.LVL212:
 418:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 1952              		.loc 1 418 37 discriminator 1 view .LVU609
 1953 0056 0028     		cmp	r0, #0
 1954 0058 E8D0     		beq	.L119
 419:..//kernel/core/tos_task.c ****     }
 1955              		.loc 1 419 16 view .LVU610
 1956 005a 40F2A460 		movw	r0, #1700
 1957 005e D9E7     		b	.L118
 1958              	.LVL213:
 1959              	.L128:
 425:..//kernel/core/tos_task.c ****     }
 1960              		.loc 1 425 9 is_stmt 1 view .LVU611
 1961 0060 2046     		mov	r0, r4
 1962              	.LVL214:
 425:..//kernel/core/tos_task.c ****     }
 1963              		.loc 1 425 9 is_stmt 0 view .LVU612
 1964 0062 FFF7FEFF 		bl	readyqueue_remove
 1965              	.LVL215:
 1966 0066 E7E7     		b	.L120
 1967              	.LVL216:
 1968              	.L122:
 415:..//kernel/core/tos_task.c ****     }
 1969              		.loc 1 415 16 view .LVU613
 1970 0068 40F27270 		movw	r0, #1906
 1971 006c D2E7     		b	.L118
 1972              	.L130:
 1973 006e 00BF     		.align	2
 1974              	.L129:
 1975 0070 00000000 		.word	k_curr_task
 1976              		.cfi_endproc
 1977              	.LFE124:
 1979              		.section	.text.tos_task_resume,"ax",%progbits
 1980              		.align	1
 1981              		.global	tos_task_resume
 1982              		.syntax unified
 1983              		.thumb
 1984              		.thumb_func
 1985              		.fpu softvfp
 1987              	tos_task_resume:
 1988              	.LVL217:
 1989              	.LFB125:
 434:..//kernel/core/tos_task.c **** 
 435:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_resume(k_task_t *task)
 436:..//kernel/core/tos_task.c **** {
 1990              		.loc 1 436 1 is_stmt 1 view -0
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 65


 1993              		@ frame_needed = 0, uses_anonymous_args = 0
 437:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1994              		.loc 1 437 5 view .LVU615
 438:..//kernel/core/tos_task.c **** 
 439:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 1995              		.loc 1 439 5 view .LVU616
 1996              		.loc 1 439 5 view .LVU617
 1997 0000 50B3     		cbz	r0, .L135
 436:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 1998              		.loc 1 436 1 is_stmt 0 view .LVU618
 1999 0002 38B5     		push	{r3, r4, r5, lr}
 2000              	.LCFI20:
 2001              		.cfi_def_cfa_offset 16
 2002              		.cfi_offset 3, -16
 2003              		.cfi_offset 4, -12
 2004              		.cfi_offset 5, -8
 2005              		.cfi_offset 14, -4
 2006 0004 0446     		mov	r4, r0
 440:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 2007              		.loc 1 440 5 is_stmt 1 view .LVU619
 2008              		.loc 1 440 5 view .LVU620
 2009              	.LVL218:
 2010              	.LBB210:
 2011              	.LBI210:
 182:..//kernel/core/include/tos_sys.h **** {
 2012              		.loc 4 182 31 view .LVU621
 2013              	.LBB211:
 184:..//kernel/core/include/tos_sys.h **** }
 2014              		.loc 4 184 5 view .LVU622
 184:..//kernel/core/include/tos_sys.h **** }
 2015              		.loc 4 184 19 is_stmt 0 view .LVU623
 2016 0006 C188     		ldrh	r1, [r0, #6]
 2017              	.LVL219:
 184:..//kernel/core/include/tos_sys.h **** }
 2018              		.loc 4 184 19 view .LVU624
 2019              	.LBE211:
 2020              	.LBE210:
 2021              		.loc 1 440 5 view .LVU625
 2022 0008 4DF6D822 		movw	r2, #56024
 2023 000c 9142     		cmp	r1, r2
 2024 000e 02D0     		beq	.L142
 2025 0010 40F24D40 		movw	r0, #1101
 2026              	.LVL220:
 2027              	.L132:
 441:..//kernel/core/tos_task.c **** 
 442:..//kernel/core/tos_task.c ****     if (unlikely(knl_is_self(task))) {
 443:..//kernel/core/tos_task.c ****         return K_ERR_TASK_RESUME_SELF;
 444:..//kernel/core/tos_task.c ****     }
 445:..//kernel/core/tos_task.c **** 
 446:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 447:..//kernel/core/tos_task.c **** 
 448:..//kernel/core/tos_task.c ****     if (!task_state_is_suspended(task)) {
 449:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 450:..//kernel/core/tos_task.c ****         knl_sched();
 451:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 452:..//kernel/core/tos_task.c ****     }
 453:..//kernel/core/tos_task.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 66


 454:..//kernel/core/tos_task.c ****     task_state_reset_suspended(task);
 455:..//kernel/core/tos_task.c ****     if (task_state_is_ready(task)) { // we are good kid now
 456:..//kernel/core/tos_task.c ****         readyqueue_add(task);
 457:..//kernel/core/tos_task.c ****     }
 458:..//kernel/core/tos_task.c **** 
 459:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 460:..//kernel/core/tos_task.c ****     knl_sched();
 461:..//kernel/core/tos_task.c **** 
 462:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 463:..//kernel/core/tos_task.c **** }
 2028              		.loc 1 463 1 view .LVU626
 2029 0014 38BD     		pop	{r3, r4, r5, pc}
 2030              	.LVL221:
 2031              	.L142:
 442:..//kernel/core/tos_task.c ****         return K_ERR_TASK_RESUME_SELF;
 2032              		.loc 1 442 5 is_stmt 1 view .LVU627
 442:..//kernel/core/tos_task.c ****         return K_ERR_TASK_RESUME_SELF;
 2033              		.loc 1 442 9 is_stmt 0 view .LVU628
 2034 0016 FFF7FEFF 		bl	knl_is_self
 2035              	.LVL222:
 442:..//kernel/core/tos_task.c ****         return K_ERR_TASK_RESUME_SELF;
 2036              		.loc 1 442 8 view .LVU629
 2037 001a 00BB     		cbnz	r0, .L137
 446:..//kernel/core/tos_task.c **** 
 2038              		.loc 1 446 5 is_stmt 1 view .LVU630
 446:..//kernel/core/tos_task.c **** 
 2039              		.loc 1 446 5 view .LVU631
 2040 001c FFF7FEFF 		bl	tos_cpu_cpsr_save
 2041              	.LVL223:
 2042 0020 0546     		mov	r5, r0
 2043              	.LVL224:
 448:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2044              		.loc 1 448 5 view .LVU632
 2045              	.LBB212:
 2046              	.LBI212:
 362:..//kernel/core/include/tos_task.h **** {
 2047              		.loc 3 362 31 view .LVU633
 2048              	.LBB213:
 364:..//kernel/core/include/tos_task.h **** }
 2049              		.loc 3 364 5 view .LVU634
 364:..//kernel/core/include/tos_task.h **** }
 2050              		.loc 3 364 16 is_stmt 0 view .LVU635
 2051 0022 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 2052              	.LVL225:
 364:..//kernel/core/include/tos_task.h **** }
 2053              		.loc 3 364 16 view .LVU636
 2054              	.LBE213:
 2055              	.LBE212:
 448:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2056              		.loc 1 448 8 view .LVU637
 2057 0026 13F0040F 		tst	r3, #4
 2058 002a 0BD0     		beq	.L143
 454:..//kernel/core/tos_task.c ****     if (task_state_is_ready(task)) { // we are good kid now
 2059              		.loc 1 454 5 is_stmt 1 view .LVU638
 2060              	.LVL226:
 2061              	.LBB214:
 2062              	.LBI214:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 67


 377:..//kernel/core/include/tos_task.h **** {
 2063              		.loc 3 377 32 view .LVU639
 2064              	.LBB215:
 379:..//kernel/core/include/tos_task.h **** }
 2065              		.loc 3 379 5 view .LVU640
 379:..//kernel/core/include/tos_task.h **** }
 2066              		.loc 3 379 17 is_stmt 0 view .LVU641
 2067 002c 03F0FB03 		and	r3, r3, #251
 2068 0030 84F82030 		strb	r3, [r4, #32]
 2069              	.LVL227:
 379:..//kernel/core/include/tos_task.h **** }
 2070              		.loc 3 379 17 view .LVU642
 2071              	.LBE215:
 2072              	.LBE214:
 455:..//kernel/core/tos_task.c ****         readyqueue_add(task);
 2073              		.loc 1 455 5 is_stmt 1 view .LVU643
 349:..//kernel/core/include/tos_task.h **** }
 2074              		.loc 3 349 5 view .LVU644
 455:..//kernel/core/tos_task.c ****         readyqueue_add(task);
 2075              		.loc 1 455 8 is_stmt 0 view .LVU645
 2076 0034 63B1     		cbz	r3, .L144
 2077              	.LVL228:
 2078              	.L134:
 459:..//kernel/core/tos_task.c ****     knl_sched();
 2079              		.loc 1 459 5 is_stmt 1 view .LVU646
 459:..//kernel/core/tos_task.c ****     knl_sched();
 2080              		.loc 1 459 5 view .LVU647
 2081 0036 2846     		mov	r0, r5
 2082 0038 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2083              	.LVL229:
 460:..//kernel/core/tos_task.c **** 
 2084              		.loc 1 460 5 view .LVU648
 2085 003c FFF7FEFF 		bl	knl_sched
 2086              	.LVL230:
 462:..//kernel/core/tos_task.c **** }
 2087              		.loc 1 462 5 view .LVU649
 462:..//kernel/core/tos_task.c **** }
 2088              		.loc 1 462 12 is_stmt 0 view .LVU650
 2089 0040 0020     		movs	r0, #0
 2090 0042 E7E7     		b	.L132
 2091              	.LVL231:
 2092              	.L143:
 449:..//kernel/core/tos_task.c ****         knl_sched();
 2093              		.loc 1 449 9 is_stmt 1 view .LVU651
 449:..//kernel/core/tos_task.c ****         knl_sched();
 2094              		.loc 1 449 9 view .LVU652
 2095 0044 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2096              	.LVL232:
 450:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 2097              		.loc 1 450 9 view .LVU653
 2098 0048 FFF7FEFF 		bl	knl_sched
 2099              	.LVL233:
 451:..//kernel/core/tos_task.c ****     }
 2100              		.loc 1 451 9 view .LVU654
 451:..//kernel/core/tos_task.c ****     }
 2101              		.loc 1 451 16 is_stmt 0 view .LVU655
 2102 004c 0020     		movs	r0, #0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 68


 2103 004e E1E7     		b	.L132
 2104              	.LVL234:
 2105              	.L144:
 456:..//kernel/core/tos_task.c ****     }
 2106              		.loc 1 456 9 is_stmt 1 view .LVU656
 2107 0050 2046     		mov	r0, r4
 2108              	.LVL235:
 456:..//kernel/core/tos_task.c ****     }
 2109              		.loc 1 456 9 is_stmt 0 view .LVU657
 2110 0052 FFF7FEFF 		bl	readyqueue_add
 2111              	.LVL236:
 2112 0056 EEE7     		b	.L134
 2113              	.LVL237:
 2114              	.L135:
 2115              	.LCFI21:
 2116              		.cfi_def_cfa_offset 0
 2117              		.cfi_restore 3
 2118              		.cfi_restore 4
 2119              		.cfi_restore 5
 2120              		.cfi_restore 14
 439:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 2121              		.loc 1 439 5 view .LVU658
 2122 0058 40F24C40 		movw	r0, #1100
 2123              	.LVL238:
 2124              		.loc 1 463 1 view .LVU659
 2125 005c 7047     		bx	lr
 2126              	.LVL239:
 2127              	.L137:
 2128              	.LCFI22:
 2129              		.cfi_def_cfa_offset 16
 2130              		.cfi_offset 3, -16
 2131              		.cfi_offset 4, -12
 2132              		.cfi_offset 5, -8
 2133              		.cfi_offset 14, -4
 443:..//kernel/core/tos_task.c ****     }
 2134              		.loc 1 443 16 view .LVU660
 2135 005e 4FF4EE60 		mov	r0, #1904
 2136 0062 D7E7     		b	.L132
 2137              		.cfi_endproc
 2138              	.LFE125:
 2140              		.section	.text.tos_task_delay,"ax",%progbits
 2141              		.align	1
 2142              		.global	tos_task_delay
 2143              		.syntax unified
 2144              		.thumb
 2145              		.thumb_func
 2146              		.fpu softvfp
 2148              	tos_task_delay:
 2149              	.LVL240:
 2150              	.LFB126:
 464:..//kernel/core/tos_task.c **** 
 465:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_delay(k_tick_t delay)
 466:..//kernel/core/tos_task.c **** {
 2151              		.loc 1 466 1 is_stmt 1 view -0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 0
 2154              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 69


 2155              		.loc 1 466 1 is_stmt 0 view .LVU662
 2156 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2157              	.LCFI23:
 2158              		.cfi_def_cfa_offset 24
 2159              		.cfi_offset 3, -24
 2160              		.cfi_offset 4, -20
 2161              		.cfi_offset 5, -16
 2162              		.cfi_offset 6, -12
 2163              		.cfi_offset 7, -8
 2164              		.cfi_offset 14, -4
 2165 0002 0546     		mov	r5, r0
 2166 0004 0C46     		mov	r4, r1
 467:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2167              		.loc 1 467 5 is_stmt 1 view .LVU663
 2168              	.LVL241:
 468:..//kernel/core/tos_task.c **** 
 469:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
 2169              		.loc 1 469 5 view .LVU664
 2170              		.loc 1 469 5 view .LVU665
 2171 0006 FFF7FEFF 		bl	knl_is_inirq
 2172              	.LVL242:
 2173              		.loc 1 469 5 is_stmt 0 view .LVU666
 2174 000a 08BB     		cbnz	r0, .L148
 470:..//kernel/core/tos_task.c **** 
 471:..//kernel/core/tos_task.c ****     if (knl_is_sched_locked()) {
 2175              		.loc 1 471 5 is_stmt 1 view .LVU667
 2176              		.loc 1 471 9 is_stmt 0 view .LVU668
 2177 000c FFF7FEFF 		bl	knl_is_sched_locked
 2178              	.LVL243:
 2179              		.loc 1 471 8 view .LVU669
 2180 0010 08BB     		cbnz	r0, .L149
 472:..//kernel/core/tos_task.c ****         return K_ERR_SCHED_LOCKED;
 473:..//kernel/core/tos_task.c ****     }
 474:..//kernel/core/tos_task.c **** 
 475:..//kernel/core/tos_task.c ****     if (unlikely(delay == (k_tick_t)0u)) {
 2181              		.loc 1 475 5 is_stmt 1 view .LVU670
 2182              		.loc 1 475 8 is_stmt 0 view .LVU671
 2183 0012 55EA0403 		orrs	r3, r5, r4
 2184 0016 17D0     		beq	.L152
 476:..//kernel/core/tos_task.c ****         tos_task_yield();
 477:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 478:..//kernel/core/tos_task.c ****     }
 479:..//kernel/core/tos_task.c **** 
 480:..//kernel/core/tos_task.c ****     if (unlikely(delay == TOS_TIME_FOREVER)) {
 2185              		.loc 1 480 5 is_stmt 1 view .LVU672
 2186              		.loc 1 480 9 is_stmt 0 view .LVU673
 2187 0018 05EA0403 		and	r3, r5, r4
 2188              		.loc 1 480 8 view .LVU674
 2189 001c B3F1FF3F 		cmp	r3, #-1
 2190 0020 1CD0     		beq	.L150
 481:..//kernel/core/tos_task.c ****         // if you wanna delay your task forever, why don't just suspend?
 482:..//kernel/core/tos_task.c ****         return K_ERR_DELAY_FOREVER;
 483:..//kernel/core/tos_task.c ****     }
 484:..//kernel/core/tos_task.c **** 
 485:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 2191              		.loc 1 485 5 is_stmt 1 view .LVU675
 2192              		.loc 1 485 5 view .LVU676
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 70


 2193 0022 FFF7FEFF 		bl	tos_cpu_cpsr_save
 2194              	.LVL244:
 2195 0026 0746     		mov	r7, r0
 2196              	.LVL245:
 486:..//kernel/core/tos_task.c **** 
 487:..//kernel/core/tos_task.c ****     tick_list_add(k_curr_task, delay);
 2197              		.loc 1 487 5 view .LVU677
 2198 0028 0D4E     		ldr	r6, .L153
 2199 002a 2A46     		mov	r2, r5
 2200 002c 2346     		mov	r3, r4
 2201 002e 3068     		ldr	r0, [r6]
 2202              	.LVL246:
 2203              		.loc 1 487 5 is_stmt 0 view .LVU678
 2204 0030 FFF7FEFF 		bl	tick_list_add
 2205              	.LVL247:
 488:..//kernel/core/tos_task.c ****     readyqueue_remove(k_curr_task);
 2206              		.loc 1 488 5 is_stmt 1 view .LVU679
 2207 0034 3068     		ldr	r0, [r6]
 2208 0036 FFF7FEFF 		bl	readyqueue_remove
 2209              	.LVL248:
 489:..//kernel/core/tos_task.c **** 
 490:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2210              		.loc 1 490 5 view .LVU680
 2211              		.loc 1 490 5 view .LVU681
 2212 003a 3846     		mov	r0, r7
 2213 003c FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2214              	.LVL249:
 491:..//kernel/core/tos_task.c ****     knl_sched();
 2215              		.loc 1 491 5 view .LVU682
 2216 0040 FFF7FEFF 		bl	knl_sched
 2217              	.LVL250:
 492:..//kernel/core/tos_task.c **** 
 493:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 2218              		.loc 1 493 5 view .LVU683
 2219              		.loc 1 493 12 is_stmt 0 view .LVU684
 2220 0044 0020     		movs	r0, #0
 2221              	.LVL251:
 2222              	.L146:
 494:..//kernel/core/tos_task.c **** }
 2223              		.loc 1 494 1 view .LVU685
 2224 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2225              	.LVL252:
 2226              	.L152:
 476:..//kernel/core/tos_task.c ****         return K_ERR_NONE;
 2227              		.loc 1 476 9 is_stmt 1 view .LVU686
 2228 0048 FFF7FEFF 		bl	tos_task_yield
 2229              	.LVL253:
 477:..//kernel/core/tos_task.c ****     }
 2230              		.loc 1 477 9 view .LVU687
 477:..//kernel/core/tos_task.c ****     }
 2231              		.loc 1 477 16 is_stmt 0 view .LVU688
 2232 004c 0020     		movs	r0, #0
 2233 004e FAE7     		b	.L146
 2234              	.L148:
 469:..//kernel/core/tos_task.c **** 
 2235              		.loc 1 469 5 view .LVU689
 2236 0050 4FF4C870 		mov	r0, #400
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 71


 2237 0054 F7E7     		b	.L146
 2238              	.L149:
 472:..//kernel/core/tos_task.c ****     }
 2239              		.loc 1 472 16 view .LVU690
 2240 0056 40F2A460 		movw	r0, #1700
 2241 005a F4E7     		b	.L146
 2242              	.L150:
 482:..//kernel/core/tos_task.c ****     }
 2243              		.loc 1 482 16 view .LVU691
 2244 005c 6520     		movs	r0, #101
 2245 005e F2E7     		b	.L146
 2246              	.L154:
 2247              		.align	2
 2248              	.L153:
 2249 0060 00000000 		.word	k_curr_task
 2250              		.cfi_endproc
 2251              	.LFE126:
 2253              		.section	.text.tos_task_delay_abort,"ax",%progbits
 2254              		.align	1
 2255              		.global	tos_task_delay_abort
 2256              		.syntax unified
 2257              		.thumb
 2258              		.thumb_func
 2259              		.fpu softvfp
 2261              	tos_task_delay_abort:
 2262              	.LVL254:
 2263              	.LFB127:
 495:..//kernel/core/tos_task.c **** 
 496:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_delay_abort(k_task_t *task)
 497:..//kernel/core/tos_task.c **** {
 2264              		.loc 1 497 1 is_stmt 1 view -0
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 0
 2267              		@ frame_needed = 0, uses_anonymous_args = 0
 2268              		.loc 1 497 1 is_stmt 0 view .LVU693
 2269 0000 38B5     		push	{r3, r4, r5, lr}
 2270              	.LCFI24:
 2271              		.cfi_def_cfa_offset 16
 2272              		.cfi_offset 3, -16
 2273              		.cfi_offset 4, -12
 2274              		.cfi_offset 5, -8
 2275              		.cfi_offset 14, -4
 2276 0002 0446     		mov	r4, r0
 498:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2277              		.loc 1 498 5 is_stmt 1 view .LVU694
 2278              	.LVL255:
 499:..//kernel/core/tos_task.c **** 
 500:..//kernel/core/tos_task.c ****     TOS_IN_IRQ_CHECK();
 2279              		.loc 1 500 5 view .LVU695
 2280              		.loc 1 500 5 view .LVU696
 2281 0004 FFF7FEFF 		bl	knl_is_inirq
 2282              	.LVL256:
 2283              		.loc 1 500 5 is_stmt 0 view .LVU697
 2284 0008 80BB     		cbnz	r0, .L160
 501:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 2285              		.loc 1 501 5 is_stmt 1 view .LVU698
 2286              		.loc 1 501 5 view .LVU699
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 72


 2287 000a 94B3     		cbz	r4, .L161
 502:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 2288              		.loc 1 502 5 view .LVU700
 2289              		.loc 1 502 5 view .LVU701
 2290              	.LVL257:
 2291              	.LBB216:
 2292              	.LBI216:
 182:..//kernel/core/include/tos_sys.h **** {
 2293              		.loc 4 182 31 view .LVU702
 2294              	.LBB217:
 184:..//kernel/core/include/tos_sys.h **** }
 2295              		.loc 4 184 5 view .LVU703
 184:..//kernel/core/include/tos_sys.h **** }
 2296              		.loc 4 184 19 is_stmt 0 view .LVU704
 2297 000c E288     		ldrh	r2, [r4, #6]
 2298              	.LVL258:
 184:..//kernel/core/include/tos_sys.h **** }
 2299              		.loc 4 184 19 view .LVU705
 2300              	.LBE217:
 2301              	.LBE216:
 2302              		.loc 1 502 5 view .LVU706
 2303 000e 4DF6D823 		movw	r3, #56024
 2304 0012 9A42     		cmp	r2, r3
 2305 0014 02D0     		beq	.L164
 2306 0016 40F24D40 		movw	r0, #1101
 2307              	.LVL259:
 2308              	.L156:
 503:..//kernel/core/tos_task.c **** 
 504:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 505:..//kernel/core/tos_task.c **** 
 506:..//kernel/core/tos_task.c ****     if (knl_is_self(task) || !task_state_is_sleeping(task)) {
 507:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 508:..//kernel/core/tos_task.c ****         return K_ERR_TASK_NOT_DELAY;
 509:..//kernel/core/tos_task.c ****     }
 510:..//kernel/core/tos_task.c **** 
 511:..//kernel/core/tos_task.c ****     if (task_state_is_suspended(task)) {
 512:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 513:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPENDED;
 514:..//kernel/core/tos_task.c ****     }
 515:..//kernel/core/tos_task.c **** 
 516:..//kernel/core/tos_task.c ****     tick_list_remove(task);
 517:..//kernel/core/tos_task.c ****     readyqueue_add(task);
 518:..//kernel/core/tos_task.c **** 
 519:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 520:..//kernel/core/tos_task.c ****     knl_sched();
 521:..//kernel/core/tos_task.c **** 
 522:..//kernel/core/tos_task.c ****     return K_ERR_NONE;
 523:..//kernel/core/tos_task.c **** }
 2309              		.loc 1 523 1 view .LVU707
 2310 001a 38BD     		pop	{r3, r4, r5, pc}
 2311              	.LVL260:
 2312              	.L164:
 504:..//kernel/core/tos_task.c **** 
 2313              		.loc 1 504 5 is_stmt 1 view .LVU708
 504:..//kernel/core/tos_task.c **** 
 2314              		.loc 1 504 5 view .LVU709
 2315 001c FFF7FEFF 		bl	tos_cpu_cpsr_save
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 73


 2316              	.LVL261:
 2317 0020 0546     		mov	r5, r0
 2318              	.LVL262:
 506:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2319              		.loc 1 506 5 view .LVU710
 506:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2320              		.loc 1 506 9 is_stmt 0 view .LVU711
 2321 0022 2046     		mov	r0, r4
 2322              	.LVL263:
 506:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2323              		.loc 1 506 9 view .LVU712
 2324 0024 FFF7FEFF 		bl	knl_is_self
 2325              	.LVL264:
 506:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2326              		.loc 1 506 8 view .LVU713
 2327 0028 A0B9     		cbnz	r0, .L157
 2328              	.LVL265:
 2329              	.LBB218:
 2330              	.LBI218:
 352:..//kernel/core/include/tos_task.h **** {
 2331              		.loc 3 352 31 is_stmt 1 view .LVU714
 2332              	.LBB219:
 354:..//kernel/core/include/tos_task.h **** }
 2333              		.loc 3 354 5 view .LVU715
 354:..//kernel/core/include/tos_task.h **** }
 2334              		.loc 3 354 16 is_stmt 0 view .LVU716
 2335 002a 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 2336              	.LVL266:
 354:..//kernel/core/include/tos_task.h **** }
 2337              		.loc 3 354 16 view .LVU717
 2338              	.LBE219:
 2339              	.LBE218:
 506:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2340              		.loc 1 506 27 view .LVU718
 2341 002e 13F0010F 		tst	r3, #1
 2342 0032 0FD0     		beq	.L157
 511:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2343              		.loc 1 511 5 is_stmt 1 view .LVU719
 2344              	.LVL267:
 364:..//kernel/core/include/tos_task.h **** }
 2345              		.loc 3 364 5 view .LVU720
 511:..//kernel/core/tos_task.c ****         TOS_CPU_INT_ENABLE();
 2346              		.loc 1 511 8 is_stmt 0 view .LVU721
 2347 0034 13F0040F 		tst	r3, #4
 2348 0038 12D1     		bne	.L165
 516:..//kernel/core/tos_task.c ****     readyqueue_add(task);
 2349              		.loc 1 516 5 is_stmt 1 view .LVU722
 2350 003a 2046     		mov	r0, r4
 2351 003c FFF7FEFF 		bl	tick_list_remove
 2352              	.LVL268:
 517:..//kernel/core/tos_task.c **** 
 2353              		.loc 1 517 5 view .LVU723
 2354 0040 2046     		mov	r0, r4
 2355 0042 FFF7FEFF 		bl	readyqueue_add
 2356              	.LVL269:
 519:..//kernel/core/tos_task.c ****     knl_sched();
 2357              		.loc 1 519 5 view .LVU724
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 74


 519:..//kernel/core/tos_task.c ****     knl_sched();
 2358              		.loc 1 519 5 view .LVU725
 2359 0046 2846     		mov	r0, r5
 2360 0048 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2361              	.LVL270:
 520:..//kernel/core/tos_task.c **** 
 2362              		.loc 1 520 5 view .LVU726
 2363 004c FFF7FEFF 		bl	knl_sched
 2364              	.LVL271:
 522:..//kernel/core/tos_task.c **** }
 2365              		.loc 1 522 5 view .LVU727
 522:..//kernel/core/tos_task.c **** }
 2366              		.loc 1 522 12 is_stmt 0 view .LVU728
 2367 0050 0020     		movs	r0, #0
 2368 0052 E2E7     		b	.L156
 2369              	.L157:
 507:..//kernel/core/tos_task.c ****         return K_ERR_TASK_NOT_DELAY;
 2370              		.loc 1 507 9 is_stmt 1 view .LVU729
 507:..//kernel/core/tos_task.c ****         return K_ERR_TASK_NOT_DELAY;
 2371              		.loc 1 507 9 view .LVU730
 2372 0054 2846     		mov	r0, r5
 2373 0056 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2374              	.LVL272:
 508:..//kernel/core/tos_task.c ****     }
 2375              		.loc 1 508 9 view .LVU731
 508:..//kernel/core/tos_task.c ****     }
 2376              		.loc 1 508 16 is_stmt 0 view .LVU732
 2377 005a 40F26E70 		movw	r0, #1902
 2378 005e DCE7     		b	.L156
 2379              	.L165:
 512:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPENDED;
 2380              		.loc 1 512 9 is_stmt 1 view .LVU733
 512:..//kernel/core/tos_task.c ****         return K_ERR_TASK_SUSPENDED;
 2381              		.loc 1 512 9 view .LVU734
 2382 0060 2846     		mov	r0, r5
 2383 0062 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2384              	.LVL273:
 513:..//kernel/core/tos_task.c ****     }
 2385              		.loc 1 513 9 view .LVU735
 513:..//kernel/core/tos_task.c ****     }
 2386              		.loc 1 513 16 is_stmt 0 view .LVU736
 2387 0066 40F27170 		movw	r0, #1905
 2388 006a D6E7     		b	.L156
 2389              	.LVL274:
 2390              	.L160:
 500:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(task);
 2391              		.loc 1 500 5 view .LVU737
 2392 006c 4FF4C870 		mov	r0, #400
 2393 0070 D3E7     		b	.L156
 2394              	.L161:
 501:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 2395              		.loc 1 501 5 view .LVU738
 2396 0072 40F24C40 		movw	r0, #1100
 2397 0076 D0E7     		b	.L156
 2398              		.cfi_endproc
 2399              	.LFE127:
 2401              		.section	.text.tos_task_curr_task_get,"ax",%progbits
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 75


 2402              		.align	1
 2403              		.global	tos_task_curr_task_get
 2404              		.syntax unified
 2405              		.thumb
 2406              		.thumb_func
 2407              		.fpu softvfp
 2409              	tos_task_curr_task_get:
 2410              	.LFB128:
 524:..//kernel/core/tos_task.c **** 
 525:..//kernel/core/tos_task.c **** __API__ k_task_t *tos_task_curr_task_get(void)
 526:..//kernel/core/tos_task.c **** {
 2411              		.loc 1 526 1 is_stmt 1 view -0
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 0
 2414              		@ frame_needed = 0, uses_anonymous_args = 0
 2415 0000 38B5     		push	{r3, r4, r5, lr}
 2416              	.LCFI25:
 2417              		.cfi_def_cfa_offset 16
 2418              		.cfi_offset 3, -16
 2419              		.cfi_offset 4, -12
 2420              		.cfi_offset 5, -8
 2421              		.cfi_offset 14, -4
 527:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2422              		.loc 1 527 5 view .LVU740
 2423              	.LVL275:
 528:..//kernel/core/tos_task.c ****     k_task_t *curr_task = K_NULL;
 2424              		.loc 1 528 5 view .LVU741
 529:..//kernel/core/tos_task.c **** 
 530:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 2425              		.loc 1 530 5 view .LVU742
 2426              		.loc 1 530 5 view .LVU743
 2427 0002 FFF7FEFF 		bl	tos_cpu_cpsr_save
 2428              	.LVL276:
 2429 0006 0546     		mov	r5, r0
 2430              	.LVL277:
 531:..//kernel/core/tos_task.c ****     if (likely(tos_knl_is_running())) {
 2431              		.loc 1 531 5 view .LVU744
 2432              		.loc 1 531 9 is_stmt 0 view .LVU745
 2433 0008 FFF7FEFF 		bl	tos_knl_is_running
 2434              	.LVL278:
 2435              		.loc 1 531 8 view .LVU746
 2436 000c 30B1     		cbz	r0, .L168
 532:..//kernel/core/tos_task.c ****         curr_task = k_curr_task;
 2437              		.loc 1 532 9 is_stmt 1 view .LVU747
 2438              		.loc 1 532 19 is_stmt 0 view .LVU748
 2439 000e 044B     		ldr	r3, .L170
 2440 0010 1C68     		ldr	r4, [r3]
 2441              	.LVL279:
 2442              	.L167:
 533:..//kernel/core/tos_task.c ****     }
 534:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2443              		.loc 1 534 5 is_stmt 1 view .LVU749
 2444              		.loc 1 534 5 view .LVU750
 2445 0012 2846     		mov	r0, r5
 2446 0014 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2447              	.LVL280:
 535:..//kernel/core/tos_task.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 76


 536:..//kernel/core/tos_task.c ****     return curr_task;
 2448              		.loc 1 536 5 view .LVU751
 537:..//kernel/core/tos_task.c **** }
 2449              		.loc 1 537 1 is_stmt 0 view .LVU752
 2450 0018 2046     		mov	r0, r4
 2451 001a 38BD     		pop	{r3, r4, r5, pc}
 2452              	.LVL281:
 2453              	.L168:
 528:..//kernel/core/tos_task.c **** 
 2454              		.loc 1 528 15 view .LVU753
 2455 001c 0024     		movs	r4, #0
 2456 001e F8E7     		b	.L167
 2457              	.L171:
 2458              		.align	2
 2459              	.L170:
 2460 0020 00000000 		.word	k_curr_task
 2461              		.cfi_endproc
 2462              	.LFE128:
 2464              		.section	.text.task_default_walker,"ax",%progbits
 2465              		.align	1
 2466              		.syntax unified
 2467              		.thumb
 2468              		.thumb_func
 2469              		.fpu softvfp
 2471              	task_default_walker:
 2472              	.LVL282:
 2473              	.LFB109:
 400:..//kernel/core/include/tos_task.h **** }
 401:..//kernel/core/include/tos_task.h **** 
 402:..//kernel/core/include/tos_task.h **** __KNL__ __STATIC_INLINE__ void task_state_set_sleeping(k_task_t *task)
 403:..//kernel/core/include/tos_task.h **** {
 404:..//kernel/core/include/tos_task.h ****     task->state |= K_TASK_STATE_SLEEP;
 405:..//kernel/core/include/tos_task.h **** }
 406:..//kernel/core/include/tos_task.h **** 
 407:..//kernel/core/include/tos_task.h **** __DEBUG__ __STATIC_INLINE__ void task_default_walker(k_task_t *task)
 408:..//kernel/core/include/tos_task.h **** {
 2474              		.loc 3 408 1 is_stmt 1 view -0
 2475              		.cfi_startproc
 2476              		@ args = 0, pretend = 0, frame = 0
 2477              		@ frame_needed = 0, uses_anonymous_args = 0
 2478              		.loc 3 408 1 is_stmt 0 view .LVU755
 2479 0000 10B5     		push	{r4, lr}
 2480              	.LCFI26:
 2481              		.cfi_def_cfa_offset 8
 2482              		.cfi_offset 4, -8
 2483              		.cfi_offset 14, -4
 2484 0002 0446     		mov	r4, r0
 409:..//kernel/core/include/tos_task.h ****     char *state_str = "ABNORMAL";
 2485              		.loc 3 409 5 is_stmt 1 view .LVU756
 2486              	.LVL283:
 410:..//kernel/core/include/tos_task.h **** 
 411:..//kernel/core/include/tos_task.h ****     state_str = state_str;
 2487              		.loc 3 411 5 view .LVU757
 412:..//kernel/core/include/tos_task.h ****     tos_kprintln("tsk name: %s", task->name);
 2488              		.loc 3 412 5 view .LVU758
 2489 0004 00F10801 		add	r1, r0, #8
 2490 0008 2748     		ldr	r0, .L184
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 77


 2491              	.LVL284:
 2492              		.loc 3 412 5 is_stmt 0 view .LVU759
 2493 000a FFF7FEFF 		bl	printf
 2494              	.LVL285:
 2495              		.loc 3 412 5 is_stmt 1 view .LVU760
 2496 000e 0A20     		movs	r0, #10
 2497 0010 FFF7FEFF 		bl	putchar
 2498              	.LVL286:
 2499              		.loc 3 412 45 view .LVU761
 413:..//kernel/core/include/tos_task.h **** 
 414:..//kernel/core/include/tos_task.h ****     if (tos_task_curr_task_get() == task) {
 2500              		.loc 3 414 5 view .LVU762
 2501              		.loc 3 414 9 is_stmt 0 view .LVU763
 2502 0014 FFF7FEFF 		bl	tos_task_curr_task_get
 2503              	.LVL287:
 2504              		.loc 3 414 8 view .LVU764
 2505 0018 8442     		cmp	r4, r0
 2506 001a 13D0     		beq	.L174
 415:..//kernel/core/include/tos_task.h ****         state_str = "RUNNING";
 416:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PENDTIMEOUT_SUSPENDED) {
 2507              		.loc 3 416 12 is_stmt 1 view .LVU765
 2508              		.loc 3 416 20 is_stmt 0 view .LVU766
 2509 001c 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 2510              		.loc 3 416 15 view .LVU767
 2511 0020 072B     		cmp	r3, #7
 2512 0022 31D0     		beq	.L175
 417:..//kernel/core/include/tos_task.h ****         state_str = "PENDTIMEOUT_SUSPENDED";
 418:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PEND_SUSPENDED) {
 2513              		.loc 3 418 12 is_stmt 1 view .LVU768
 2514              		.loc 3 418 15 is_stmt 0 view .LVU769
 2515 0024 062B     		cmp	r3, #6
 2516 0026 31D0     		beq	.L176
 419:..//kernel/core/include/tos_task.h ****         state_str = "PEND_SUSPENDED";
 420:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SLEEP_SUSPENDED) {
 2517              		.loc 3 420 12 is_stmt 1 view .LVU770
 2518              		.loc 3 420 15 is_stmt 0 view .LVU771
 2519 0028 052B     		cmp	r3, #5
 2520 002a 31D0     		beq	.L177
 421:..//kernel/core/include/tos_task.h ****         state_str = "SLEEP_SUSPENDED";
 422:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PENDTIMEOUT) {
 2521              		.loc 3 422 12 is_stmt 1 view .LVU772
 2522              		.loc 3 422 15 is_stmt 0 view .LVU773
 2523 002c 032B     		cmp	r3, #3
 2524 002e 31D0     		beq	.L178
 423:..//kernel/core/include/tos_task.h ****         state_str = "PENDTIMEOUT";
 424:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SUSPENDED) {
 2525              		.loc 3 424 12 is_stmt 1 view .LVU774
 2526              		.loc 3 424 15 is_stmt 0 view .LVU775
 2527 0030 042B     		cmp	r3, #4
 2528 0032 31D0     		beq	.L179
 425:..//kernel/core/include/tos_task.h ****         state_str = "SUSPENDED";
 426:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PEND) {
 2529              		.loc 3 426 12 is_stmt 1 view .LVU776
 2530              		.loc 3 426 15 is_stmt 0 view .LVU777
 2531 0034 022B     		cmp	r3, #2
 2532 0036 31D0     		beq	.L180
 427:..//kernel/core/include/tos_task.h ****         state_str = "PEND";
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 78


 428:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SLEEP) {
 2533              		.loc 3 428 12 is_stmt 1 view .LVU778
 2534              		.loc 3 428 15 is_stmt 0 view .LVU779
 2535 0038 012B     		cmp	r3, #1
 2536 003a 31D0     		beq	.L181
 429:..//kernel/core/include/tos_task.h ****         state_str = "SLEEP";
 430:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_READY) {
 2537              		.loc 3 430 12 is_stmt 1 view .LVU780
 2538              		.loc 3 430 15 is_stmt 0 view .LVU781
 2539 003c 002B     		cmp	r3, #0
 2540 003e 31D0     		beq	.L182
 411:..//kernel/core/include/tos_task.h ****     tos_kprintln("tsk name: %s", task->name);
 2541              		.loc 3 411 15 view .LVU782
 2542 0040 1A49     		ldr	r1, .L184+4
 2543 0042 00E0     		b	.L173
 2544              	.L174:
 415:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PENDTIMEOUT_SUSPENDED) {
 2545              		.loc 3 415 19 view .LVU783
 2546 0044 1A49     		ldr	r1, .L184+8
 2547              	.L173:
 2548              	.LVL288:
 431:..//kernel/core/include/tos_task.h ****         state_str = "READY";
 432:..//kernel/core/include/tos_task.h ****     }
 433:..//kernel/core/include/tos_task.h ****     tos_kprintln("tsk stat: %s", state_str);
 2549              		.loc 3 433 5 is_stmt 1 view .LVU784
 2550 0046 1B48     		ldr	r0, .L184+12
 2551 0048 FFF7FEFF 		bl	printf
 2552              	.LVL289:
 2553              		.loc 3 433 5 view .LVU785
 2554 004c 0A20     		movs	r0, #10
 2555 004e FFF7FEFF 		bl	putchar
 2556              	.LVL290:
 2557              		.loc 3 433 44 view .LVU786
 434:..//kernel/core/include/tos_task.h **** 
 435:..//kernel/core/include/tos_task.h ****     tos_kprintln("stk size: %d", task->stk_size);
 2558              		.loc 3 435 5 view .LVU787
 2559 0052 A16A     		ldr	r1, [r4, #40]
 2560 0054 1848     		ldr	r0, .L184+16
 2561 0056 FFF7FEFF 		bl	printf
 2562              	.LVL291:
 2563              		.loc 3 435 5 view .LVU788
 2564 005a 0A20     		movs	r0, #10
 2565 005c FFF7FEFF 		bl	putchar
 2566              	.LVL292:
 2567              		.loc 3 435 49 view .LVU789
 436:..//kernel/core/include/tos_task.h ****     tos_kprintln("stk base: 0x%p", task->stk_base);
 2568              		.loc 3 436 5 view .LVU790
 2569 0060 616A     		ldr	r1, [r4, #36]
 2570 0062 1648     		ldr	r0, .L184+20
 2571 0064 FFF7FEFF 		bl	printf
 2572              	.LVL293:
 2573              		.loc 3 436 5 view .LVU791
 2574 0068 0A20     		movs	r0, #10
 2575 006a FFF7FEFF 		bl	putchar
 2576              	.LVL294:
 2577              		.loc 3 436 51 view .LVU792
 437:..//kernel/core/include/tos_task.h ****     tos_kprintln("stk top : 0x%p", task->stk_base + task->stk_size);
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 79


 2578              		.loc 3 437 5 view .LVU793
 2579 006e 616A     		ldr	r1, [r4, #36]
 2580 0070 A36A     		ldr	r3, [r4, #40]
 2581 0072 1944     		add	r1, r1, r3
 2582 0074 1248     		ldr	r0, .L184+24
 2583 0076 FFF7FEFF 		bl	printf
 2584              	.LVL295:
 2585              		.loc 3 437 5 view .LVU794
 2586 007a 0A20     		movs	r0, #10
 2587 007c FFF7FEFF 		bl	putchar
 2588              	.LVL296:
 2589              		.loc 3 437 68 view .LVU795
 438:..//kernel/core/include/tos_task.h ****     tos_kprintf("\n");
 2590              		.loc 3 438 5 view .LVU796
 2591 0080 0A20     		movs	r0, #10
 2592 0082 FFF7FEFF 		bl	putchar
 2593              	.LVL297:
 2594              		.loc 3 438 22 view .LVU797
 439:..//kernel/core/include/tos_task.h **** }
 2595              		.loc 3 439 1 is_stmt 0 view .LVU798
 2596 0086 10BD     		pop	{r4, pc}
 2597              	.LVL298:
 2598              	.L175:
 417:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PEND_SUSPENDED) {
 2599              		.loc 3 417 19 view .LVU799
 2600 0088 0E49     		ldr	r1, .L184+28
 2601 008a DCE7     		b	.L173
 2602              	.L176:
 419:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SLEEP_SUSPENDED) {
 2603              		.loc 3 419 19 view .LVU800
 2604 008c 0E49     		ldr	r1, .L184+32
 2605 008e DAE7     		b	.L173
 2606              	.L177:
 421:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PENDTIMEOUT) {
 2607              		.loc 3 421 19 view .LVU801
 2608 0090 0E49     		ldr	r1, .L184+36
 2609 0092 D8E7     		b	.L173
 2610              	.L178:
 423:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SUSPENDED) {
 2611              		.loc 3 423 19 view .LVU802
 2612 0094 0E49     		ldr	r1, .L184+40
 2613 0096 D6E7     		b	.L173
 2614              	.L179:
 425:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_PEND) {
 2615              		.loc 3 425 19 view .LVU803
 2616 0098 0E49     		ldr	r1, .L184+44
 2617 009a D4E7     		b	.L173
 2618              	.L180:
 427:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_SLEEP) {
 2619              		.loc 3 427 19 view .LVU804
 2620 009c 0E49     		ldr	r1, .L184+48
 2621 009e D2E7     		b	.L173
 2622              	.L181:
 429:..//kernel/core/include/tos_task.h ****     } else if (task->state == K_TASK_STATE_READY) {
 2623              		.loc 3 429 19 view .LVU805
 2624 00a0 0E49     		ldr	r1, .L184+52
 2625 00a2 D0E7     		b	.L173
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 80


 2626              	.L182:
 431:..//kernel/core/include/tos_task.h ****     }
 2627              		.loc 3 431 19 view .LVU806
 2628 00a4 0E49     		ldr	r1, .L184+56
 2629 00a6 CEE7     		b	.L173
 2630              	.L185:
 2631              		.align	2
 2632              	.L184:
 2633 00a8 7C000000 		.word	.LC10
 2634 00ac 70000000 		.word	.LC9
 2635 00b0 08000000 		.word	.LC1
 2636 00b4 8C000000 		.word	.LC11
 2637 00b8 9C000000 		.word	.LC12
 2638 00bc AC000000 		.word	.LC13
 2639 00c0 BC000000 		.word	.LC14
 2640 00c4 10000000 		.word	.LC2
 2641 00c8 28000000 		.word	.LC3
 2642 00cc 38000000 		.word	.LC4
 2643 00d0 48000000 		.word	.LC5
 2644 00d4 54000000 		.word	.LC6
 2645 00d8 60000000 		.word	.LC7
 2646 00dc 68000000 		.word	.LC8
 2647 00e0 00000000 		.word	.LC0
 2648              		.cfi_endproc
 2649              	.LFE109:
 2651              		.section	.text.tos_task_walkthru,"ax",%progbits
 2652              		.align	1
 2653              		.global	tos_task_walkthru
 2654              		.syntax unified
 2655              		.thumb
 2656              		.thumb_func
 2657              		.fpu softvfp
 2659              	tos_task_walkthru:
 2660              	.LVL299:
 2661              	.LFB129:
 538:..//kernel/core/tos_task.c **** 
 539:..//kernel/core/tos_task.c **** __API__ void tos_task_walkthru(k_task_walker_t walker)
 540:..//kernel/core/tos_task.c **** {
 2662              		.loc 1 540 1 is_stmt 1 view -0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 0, uses_anonymous_args = 0
 541:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2666              		.loc 1 541 5 view .LVU808
 542:..//kernel/core/tos_task.c ****     k_task_t *task;
 2667              		.loc 1 542 5 view .LVU809
 543:..//kernel/core/tos_task.c **** 
 544:..//kernel/core/tos_task.c ****     if (!walker) {
 2668              		.loc 1 544 5 view .LVU810
 2669              		.loc 1 544 8 is_stmt 0 view .LVU811
 2670 0000 A8B1     		cbz	r0, .L191
 540:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2671              		.loc 1 540 1 view .LVU812
 2672 0002 70B5     		push	{r4, r5, r6, lr}
 2673              	.LCFI27:
 2674              		.cfi_def_cfa_offset 16
 2675              		.cfi_offset 4, -16
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 81


 2676              		.cfi_offset 5, -12
 2677              		.cfi_offset 6, -8
 2678              		.cfi_offset 14, -4
 2679 0004 0546     		mov	r5, r0
 545:..//kernel/core/tos_task.c ****         return;
 546:..//kernel/core/tos_task.c ****     }
 547:..//kernel/core/tos_task.c **** 
 548:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 2680              		.loc 1 548 5 is_stmt 1 view .LVU813
 2681              		.loc 1 548 5 view .LVU814
 2682 0006 FFF7FEFF 		bl	tos_cpu_cpsr_save
 2683              	.LVL300:
 2684              		.loc 1 548 5 is_stmt 0 view .LVU815
 2685 000a 0646     		mov	r6, r0
 2686              	.LVL301:
 549:..//kernel/core/tos_task.c **** 
 550:..//kernel/core/tos_task.c ****     TOS_LIST_FOR_EACH_ENTRY(task, k_task_t, stat_list, &k_stat_list) {
 2687              		.loc 1 550 5 is_stmt 1 view .LVU816
 2688 000c 084B     		ldr	r3, .L195
 2689 000e 1C68     		ldr	r4, [r3]
 2690 0010 343C     		subs	r4, r4, #52
 2691              	.LVL302:
 2692              	.L188:
 2693              		.loc 1 550 5 is_stmt 0 discriminator 1 view .LVU817
 2694 0012 04F13402 		add	r2, r4, #52
 2695 0016 064B     		ldr	r3, .L195
 2696 0018 9A42     		cmp	r2, r3
 2697 001a 04D0     		beq	.L194
 551:..//kernel/core/tos_task.c ****         walker(task);
 2698              		.loc 1 551 9 is_stmt 1 discriminator 3 view .LVU818
 2699 001c 2046     		mov	r0, r4
 2700 001e A847     		blx	r5
 2701              	.LVL303:
 550:..//kernel/core/tos_task.c ****         walker(task);
 2702              		.loc 1 550 5 is_stmt 0 discriminator 3 view .LVU819
 2703 0020 646B     		ldr	r4, [r4, #52]
 2704              	.LVL304:
 550:..//kernel/core/tos_task.c ****         walker(task);
 2705              		.loc 1 550 5 discriminator 3 view .LVU820
 2706 0022 343C     		subs	r4, r4, #52
 2707              	.LVL305:
 550:..//kernel/core/tos_task.c ****         walker(task);
 2708              		.loc 1 550 5 discriminator 3 view .LVU821
 2709 0024 F5E7     		b	.L188
 2710              	.L194:
 552:..//kernel/core/tos_task.c ****     }
 553:..//kernel/core/tos_task.c **** 
 554:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2711              		.loc 1 554 5 is_stmt 1 view .LVU822
 2712              		.loc 1 554 5 view .LVU823
 2713 0026 3046     		mov	r0, r6
 2714 0028 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2715              	.LVL306:
 555:..//kernel/core/tos_task.c **** }
 2716              		.loc 1 555 1 is_stmt 0 view .LVU824
 2717 002c 70BD     		pop	{r4, r5, r6, pc}
 2718              	.LVL307:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 82


 2719              	.L191:
 2720              	.LCFI28:
 2721              		.cfi_def_cfa_offset 0
 2722              		.cfi_restore 4
 2723              		.cfi_restore 5
 2724              		.cfi_restore 6
 2725              		.cfi_restore 14
 2726              		.loc 1 555 1 view .LVU825
 2727 002e 7047     		bx	lr
 2728              	.L196:
 2729              		.align	2
 2730              	.L195:
 2731 0030 00000000 		.word	k_stat_list
 2732              		.cfi_endproc
 2733              	.LFE129:
 2735              		.section	.text.tos_task_info_display,"ax",%progbits
 2736              		.align	1
 2737              		.global	tos_task_info_display
 2738              		.syntax unified
 2739              		.thumb
 2740              		.thumb_func
 2741              		.fpu softvfp
 2743              	tos_task_info_display:
 2744              	.LFB130:
 556:..//kernel/core/tos_task.c **** 
 557:..//kernel/core/tos_task.c **** __DEBUG__ void tos_task_info_display(void)
 558:..//kernel/core/tos_task.c **** {
 2745              		.loc 1 558 1 is_stmt 1 view -0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 0
 2748              		@ frame_needed = 0, uses_anonymous_args = 0
 2749 0000 08B5     		push	{r3, lr}
 2750              	.LCFI29:
 2751              		.cfi_def_cfa_offset 8
 2752              		.cfi_offset 3, -8
 2753              		.cfi_offset 14, -4
 559:..//kernel/core/tos_task.c ****     tos_task_walkthru(task_default_walker);
 2754              		.loc 1 559 5 view .LVU827
 2755 0002 0248     		ldr	r0, .L199
 2756 0004 FFF7FEFF 		bl	tos_task_walkthru
 2757              	.LVL308:
 560:..//kernel/core/tos_task.c **** }
 2758              		.loc 1 560 1 is_stmt 0 view .LVU828
 2759 0008 08BD     		pop	{r3, pc}
 2760              	.L200:
 2761 000a 00BF     		.align	2
 2762              	.L199:
 2763 000c 00000000 		.word	task_default_walker
 2764              		.cfi_endproc
 2765              	.LFE130:
 2767              		.section	.text.tos_task_stack_draught_depth,"ax",%progbits
 2768              		.align	1
 2769              		.global	tos_task_stack_draught_depth
 2770              		.syntax unified
 2771              		.thumb
 2772              		.thumb_func
 2773              		.fpu softvfp
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 83


 2775              	tos_task_stack_draught_depth:
 2776              	.LVL309:
 2777              	.LFB131:
 561:..//kernel/core/tos_task.c **** 
 562:..//kernel/core/tos_task.c **** #if TOS_CFG_TASK_STACK_DRAUGHT_DEPTH_DETACT_EN > 0u
 563:..//kernel/core/tos_task.c **** 
 564:..//kernel/core/tos_task.c **** __API__ k_err_t tos_task_stack_draught_depth(k_task_t *task, int *depth)
 565:..//kernel/core/tos_task.c **** {
 2778              		.loc 1 565 1 is_stmt 1 view -0
 2779              		.cfi_startproc
 2780              		@ args = 0, pretend = 0, frame = 0
 2781              		@ frame_needed = 0, uses_anonymous_args = 0
 2782              		.loc 1 565 1 is_stmt 0 view .LVU830
 2783 0000 70B5     		push	{r4, r5, r6, lr}
 2784              	.LCFI30:
 2785              		.cfi_def_cfa_offset 16
 2786              		.cfi_offset 4, -16
 2787              		.cfi_offset 5, -12
 2788              		.cfi_offset 6, -8
 2789              		.cfi_offset 14, -4
 566:..//kernel/core/tos_task.c ****     TOS_CPU_CPSR_ALLOC();
 2790              		.loc 1 566 5 is_stmt 1 view .LVU831
 2791              	.LVL310:
 567:..//kernel/core/tos_task.c ****     k_err_t rc;
 2792              		.loc 1 567 5 view .LVU832
 568:..//kernel/core/tos_task.c **** 
 569:..//kernel/core/tos_task.c ****     TOS_PTR_SANITY_CHECK(depth);
 2793              		.loc 1 569 5 view .LVU833
 2794              		.loc 1 569 5 view .LVU834
 2795 0002 D9B1     		cbz	r1, .L204
 2796 0004 0446     		mov	r4, r0
 2797 0006 0D46     		mov	r5, r1
 570:..//kernel/core/tos_task.c **** 
 571:..//kernel/core/tos_task.c ****     if (unlikely(!task)) {
 2798              		.loc 1 571 5 view .LVU835
 2799              		.loc 1 571 8 is_stmt 0 view .LVU836
 2800 0008 40B1     		cbz	r0, .L207
 2801              	.LVL311:
 2802              	.L203:
 572:..//kernel/core/tos_task.c ****         task = k_curr_task;
 573:..//kernel/core/tos_task.c ****     }
 574:..//kernel/core/tos_task.c **** 
 575:..//kernel/core/tos_task.c ****     TOS_OBJ_VERIFY(task, KNL_OBJ_TYPE_TASK);
 2803              		.loc 1 575 5 is_stmt 1 view .LVU837
 2804              		.loc 1 575 5 view .LVU838
 2805              	.LBB220:
 2806              	.LBI220:
 182:..//kernel/core/include/tos_sys.h **** {
 2807              		.loc 4 182 31 view .LVU839
 2808              	.LBB221:
 184:..//kernel/core/include/tos_sys.h **** }
 2809              		.loc 4 184 5 view .LVU840
 184:..//kernel/core/include/tos_sys.h **** }
 2810              		.loc 4 184 19 is_stmt 0 view .LVU841
 2811 000a E288     		ldrh	r2, [r4, #6]
 2812              	.LVL312:
 184:..//kernel/core/include/tos_sys.h **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 84


 2813              		.loc 4 184 19 view .LVU842
 2814              	.LBE221:
 2815              	.LBE220:
 2816              		.loc 1 575 5 view .LVU843
 2817 000c 4DF6D823 		movw	r3, #56024
 2818 0010 9A42     		cmp	r2, r3
 2819 0012 06D0     		beq	.L208
 2820              		.loc 1 575 5 view .LVU844
 2821 0014 40F24D44 		movw	r4, #1101
 2822              	.LVL313:
 2823              	.L202:
 576:..//kernel/core/tos_task.c **** 
 577:..//kernel/core/tos_task.c ****     TOS_CPU_INT_DISABLE();
 578:..//kernel/core/tos_task.c ****     rc = cpu_task_stack_draught_depth(task->stk_base, task->stk_size, depth);
 579:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 580:..//kernel/core/tos_task.c **** 
 581:..//kernel/core/tos_task.c ****     return rc;
 582:..//kernel/core/tos_task.c **** }
 2824              		.loc 1 582 1 view .LVU845
 2825 0018 2046     		mov	r0, r4
 2826 001a 70BD     		pop	{r4, r5, r6, pc}
 2827              	.LVL314:
 2828              	.L207:
 572:..//kernel/core/tos_task.c ****     }
 2829              		.loc 1 572 9 is_stmt 1 view .LVU846
 572:..//kernel/core/tos_task.c ****     }
 2830              		.loc 1 572 14 is_stmt 0 view .LVU847
 2831 001c 094B     		ldr	r3, .L209
 2832 001e 1C68     		ldr	r4, [r3]
 2833              	.LVL315:
 572:..//kernel/core/tos_task.c ****     }
 2834              		.loc 1 572 14 view .LVU848
 2835 0020 F3E7     		b	.L203
 2836              	.L208:
 577:..//kernel/core/tos_task.c ****     rc = cpu_task_stack_draught_depth(task->stk_base, task->stk_size, depth);
 2837              		.loc 1 577 5 is_stmt 1 view .LVU849
 577:..//kernel/core/tos_task.c ****     rc = cpu_task_stack_draught_depth(task->stk_base, task->stk_size, depth);
 2838              		.loc 1 577 5 view .LVU850
 2839 0022 FFF7FEFF 		bl	tos_cpu_cpsr_save
 2840              	.LVL316:
 577:..//kernel/core/tos_task.c ****     rc = cpu_task_stack_draught_depth(task->stk_base, task->stk_size, depth);
 2841              		.loc 1 577 5 is_stmt 0 view .LVU851
 2842 0026 0646     		mov	r6, r0
 2843              	.LVL317:
 578:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2844              		.loc 1 578 5 is_stmt 1 view .LVU852
 578:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2845              		.loc 1 578 10 is_stmt 0 view .LVU853
 2846 0028 2A46     		mov	r2, r5
 2847 002a A16A     		ldr	r1, [r4, #40]
 2848 002c 606A     		ldr	r0, [r4, #36]
 2849              	.LVL318:
 578:..//kernel/core/tos_task.c ****     TOS_CPU_INT_ENABLE();
 2850              		.loc 1 578 10 view .LVU854
 2851 002e FFF7FEFF 		bl	cpu_task_stack_draught_depth
 2852              	.LVL319:
 2853 0032 0446     		mov	r4, r0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 85


 2854              	.LVL320:
 579:..//kernel/core/tos_task.c **** 
 2855              		.loc 1 579 5 is_stmt 1 view .LVU855
 579:..//kernel/core/tos_task.c **** 
 2856              		.loc 1 579 5 view .LVU856
 2857 0034 3046     		mov	r0, r6
 2858 0036 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 2859              	.LVL321:
 581:..//kernel/core/tos_task.c **** }
 2860              		.loc 1 581 5 view .LVU857
 581:..//kernel/core/tos_task.c **** }
 2861              		.loc 1 581 12 is_stmt 0 view .LVU858
 2862 003a EDE7     		b	.L202
 2863              	.LVL322:
 2864              	.L204:
 569:..//kernel/core/tos_task.c **** 
 2865              		.loc 1 569 5 view .LVU859
 2866 003c 40F24C44 		movw	r4, #1100
 2867 0040 EAE7     		b	.L202
 2868              	.L210:
 2869 0042 00BF     		.align	2
 2870              	.L209:
 2871 0044 00000000 		.word	k_curr_task
 2872              		.cfi_endproc
 2873              	.LFE131:
 2875              		.section	.rodata.task_default_walker.str1.4,"aMS",%progbits,1
 2876              		.align	2
 2877              	.LC0:
 2878 0000 52454144 		.ascii	"READY\000"
 2878      5900
 2879 0006 0000     		.space	2
 2880              	.LC1:
 2881 0008 52554E4E 		.ascii	"RUNNING\000"
 2881      494E4700 
 2882              	.LC2:
 2883 0010 50454E44 		.ascii	"PENDTIMEOUT_SUSPENDED\000"
 2883      54494D45 
 2883      4F55545F 
 2883      53555350 
 2883      454E4445 
 2884 0026 0000     		.space	2
 2885              	.LC3:
 2886 0028 50454E44 		.ascii	"PEND_SUSPENDED\000"
 2886      5F535553 
 2886      50454E44 
 2886      454400
 2887 0037 00       		.space	1
 2888              	.LC4:
 2889 0038 534C4545 		.ascii	"SLEEP_SUSPENDED\000"
 2889      505F5355 
 2889      5350454E 
 2889      44454400 
 2890              	.LC5:
 2891 0048 50454E44 		.ascii	"PENDTIMEOUT\000"
 2891      54494D45 
 2891      4F555400 
 2892              	.LC6:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 86


 2893 0054 53555350 		.ascii	"SUSPENDED\000"
 2893      454E4445 
 2893      4400
 2894 005e 0000     		.space	2
 2895              	.LC7:
 2896 0060 50454E44 		.ascii	"PEND\000"
 2896      00
 2897 0065 000000   		.space	3
 2898              	.LC8:
 2899 0068 534C4545 		.ascii	"SLEEP\000"
 2899      5000
 2900 006e 0000     		.space	2
 2901              	.LC9:
 2902 0070 41424E4F 		.ascii	"ABNORMAL\000"
 2902      524D414C 
 2902      00
 2903 0079 000000   		.space	3
 2904              	.LC10:
 2905 007c 74736B20 		.ascii	"tsk name: %s\000"
 2905      6E616D65 
 2905      3A202573 
 2905      00
 2906 0089 000000   		.space	3
 2907              	.LC11:
 2908 008c 74736B20 		.ascii	"tsk stat: %s\000"
 2908      73746174 
 2908      3A202573 
 2908      00
 2909 0099 000000   		.space	3
 2910              	.LC12:
 2911 009c 73746B20 		.ascii	"stk size: %d\000"
 2911      73697A65 
 2911      3A202564 
 2911      00
 2912 00a9 000000   		.space	3
 2913              	.LC13:
 2914 00ac 73746B20 		.ascii	"stk base: 0x%p\000"
 2914      62617365 
 2914      3A203078 
 2914      257000
 2915 00bb 00       		.space	1
 2916              	.LC14:
 2917 00bc 73746B20 		.ascii	"stk top : 0x%p\000"
 2917      746F7020 
 2917      3A203078 
 2917      257000
 2918              		.text
 2919              	.Letext0:
 2920              		.file 5 "..//kernel/core/include/tos_kerr.h"
 2921              		.file 6 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 2922              		.file 7 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 2923              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 2924              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2925              		.file 10 "d:\\arm_gcc\\8 2019-q3-update\\lib\\gcc\\arm-none-eabi\\8.3.1\\include\\stddef.h"
 2926              		.file 11 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_types.h"
 2927              		.file 12 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\reent.h"
 2928              		.file 13 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\lock.h"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 87


 2929              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2930              		.file 15 "..//arch/arm/arm-v7m/common/include/tos_cpu_types.h"
 2931              		.file 16 "..//kernel/core/include/tos_ktypes.h"
 2932              		.file 17 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\stdlib.h"
 2933              		.file 18 "..//kernel/core/include/tos_pend.h"
 2934              		.file 19 "..//kernel/core/include/tos_mutex.h"
 2935              		.file 20 "..//kernel/core/include/tos_timer.h"
 2936              		.file 21 "..//kernel/core/include/tos_mmheap.h"
 2937              		.file 22 "..//kernel/core/include/tos_sched.h"
 2938              		.file 23 "..//kernel/core/include/tos_global.h"
 2939              		.file 24 "..//arch/arm/arm-v7m/common/include/tos_cpu.h"
 2940              		.file 25 "..//kernel/core/include/tos_tick.h"
 2941              		.file 26 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\string.h"
 2942              		.file 27 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\stdio.h"
 2943              		.file 28 "<built-in>"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 88


DEFINED SYMBOLS
                            *ABS*:00000000 tos_task.c
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:16     .text.task_free:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:23     .text.task_free:00000000 task_free
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:55     .text.task_mutex_release:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:61     .text.task_mutex_release:00000000 task_mutex_release
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:113    .text.task_do_destroy:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:119    .text.task_do_destroy:00000000 task_do_destroy
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:448    .text.task_destroy_dyn:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:454    .text.task_destroy_dyn:00000000 task_destroy_dyn
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:552    .text.task_destroy_dyn:00000040 $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:557    .text.task_destroy_static:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:563    .text.task_destroy_static:00000000 task_destroy_static
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:610    .text.task_highest_pending_prio_get:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:616    .text.task_highest_pending_prio_get:00000000 task_highest_pending_prio_get
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:682    .text.tos_task_create:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:689    .text.tos_task_create:00000000 tos_task_create
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1078   .text.tos_task_create:00000124 $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1508   .text.task_exit:00000000 task_exit
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1084   .text.task_free_all:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1091   .text.task_free_all:00000000 task_free_all
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1184   .text.task_free_all:0000003c $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1189   .text.tos_task_create_dyn:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1196   .text.tos_task_create_dyn:00000000 tos_task_create_dyn
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1379   .text.tos_task_destroy:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1386   .text.tos_task_destroy:00000000 tos_task_destroy
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1497   .text.tos_task_destroy:00000054 $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1502   .text.task_exit:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1529   .text.tos_task_yield:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1536   .text.tos_task_yield:00000000 tos_task_yield
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1592   .text.tos_task_yield:0000002c $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1597   .text.tos_task_prio_change:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1604   .text.tos_task_prio_change:00000000 tos_task_prio_change
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1820   .text.tos_task_suspend:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1827   .text.tos_task_suspend:00000000 tos_task_suspend
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1975   .text.tos_task_suspend:00000070 $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1980   .text.tos_task_resume:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:1987   .text.tos_task_resume:00000000 tos_task_resume
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2141   .text.tos_task_delay:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2148   .text.tos_task_delay:00000000 tos_task_delay
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2249   .text.tos_task_delay:00000060 $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2254   .text.tos_task_delay_abort:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2261   .text.tos_task_delay_abort:00000000 tos_task_delay_abort
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2402   .text.tos_task_curr_task_get:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2409   .text.tos_task_curr_task_get:00000000 tos_task_curr_task_get
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2460   .text.tos_task_curr_task_get:00000020 $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2465   .text.task_default_walker:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2471   .text.task_default_walker:00000000 task_default_walker
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2633   .text.task_default_walker:000000a8 $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2652   .text.tos_task_walkthru:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2659   .text.tos_task_walkthru:00000000 tos_task_walkthru
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2731   .text.tos_task_walkthru:00000030 $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2736   .text.tos_task_info_display:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2743   .text.tos_task_info_display:00000000 tos_task_info_display
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2763   .text.tos_task_info_display:0000000c $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2768   .text.tos_task_stack_draught_depth:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2775   .text.tos_task_stack_draught_depth:00000000 tos_task_stack_draught_depth
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s 			page 89


C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2871   .text.tos_task_stack_draught_depth:00000044 $d
C:\Users\tianx\AppData\Local\Temp\ccSK8Nu4.s:2876   .rodata.task_default_walker.str1.4:00000000 $d

UNDEFINED SYMBOLS
tos_mmheap_free
mutex_release
knl_is_idle
tos_cpu_cpsr_save
tos_cpu_cpsr_restore
knl_sched
readyqueue_remove
tick_list_remove
pend_list_remove
tos_knl_sched_lock
knl_is_self
tos_knl_sched_unlock
k_dead_task_list
pend_highest_pending_prio_get
knl_is_inirq
cpu_task_stk_init
strncpy
readyqueue_add_tail
tos_knl_is_running
k_stat_list
tos_mmheap_calloc
tos_mmheap_alloc
knl_is_sched_locked
k_curr_task
pend_list_adjust
readyqueue_add_head
readyqueue_add
tick_list_add
printf
putchar
cpu_task_stack_draught_depth
