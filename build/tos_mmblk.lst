ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tos_mmblk.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.tos_mmblk_pool_create,"ax",%progbits
  16              		.align	1
  17              		.global	tos_mmblk_pool_create
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	tos_mmblk_pool_create:
  25              	.LVL0:
  26              	.LFB110:
  27              		.file 1 "..//kernel/core/tos_mmblk.c"
   1:..//kernel/core/tos_mmblk.c **** /*----------------------------------------------------------------------------
   2:..//kernel/core/tos_mmblk.c ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/tos_mmblk.c ****  * available.
   4:..//kernel/core/tos_mmblk.c ****  *
   5:..//kernel/core/tos_mmblk.c ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/tos_mmblk.c ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/tos_mmblk.c ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/tos_mmblk.c ****  *
   9:..//kernel/core/tos_mmblk.c ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/tos_mmblk.c ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/tos_mmblk.c ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/tos_mmblk.c ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/tos_mmblk.c ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/tos_mmblk.c ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/tos_mmblk.c ****  * within TencentOS.
  16:..//kernel/core/tos_mmblk.c ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/tos_mmblk.c **** 
  18:..//kernel/core/tos_mmblk.c **** #include "tos_k.h"
  19:..//kernel/core/tos_mmblk.c **** 
  20:..//kernel/core/tos_mmblk.c **** __API__ k_err_t tos_mmblk_pool_create(k_mmblk_pool_t *mbp, void *pool_start, size_t blk_num, size_t
  21:..//kernel/core/tos_mmblk.c **** {
  28              		.loc 1 21 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 21 1 is_stmt 0 view .LVU1
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 3, -24
  37              		.cfi_offset 4, -20
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 2


  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 0746     		mov	r7, r0
  43 0004 0E46     		mov	r6, r1
  44 0006 1546     		mov	r5, r2
  45 0008 1C46     		mov	r4, r3
  22:..//kernel/core/tos_mmblk.c ****     uint32_t    i;
  46              		.loc 1 22 5 is_stmt 1 view .LVU2
  23:..//kernel/core/tos_mmblk.c ****     void       *blk_curr, *blk_next;
  47              		.loc 1 23 5 view .LVU3
  24:..//kernel/core/tos_mmblk.c **** 
  25:..//kernel/core/tos_mmblk.c ****     TOS_IN_IRQ_CHECK();
  48              		.loc 1 25 5 view .LVU4
  49              		.loc 1 25 5 view .LVU5
  50 000a FFF7FEFF 		bl	knl_is_inirq
  51              	.LVL1:
  52              		.loc 1 25 5 is_stmt 0 view .LVU6
  53 000e D8B9     		cbnz	r0, .L5
  26:..//kernel/core/tos_mmblk.c ****     TOS_PTR_SANITY_CHECK(pool_start);
  54              		.loc 1 26 5 is_stmt 1 view .LVU7
  55              		.loc 1 26 5 view .LVU8
  56 0010 EEB1     		cbz	r6, .L6
  27:..//kernel/core/tos_mmblk.c **** 
  28:..//kernel/core/tos_mmblk.c ****     if (((cpu_addr_t)pool_start & K_MMBLK_ALIGN_MASK) != 0u) {
  57              		.loc 1 28 5 view .LVU9
  58              		.loc 1 28 8 is_stmt 0 view .LVU10
  59 0012 16F0030F 		tst	r6, #3
  60 0016 1DD1     		bne	.L7
  29:..//kernel/core/tos_mmblk.c ****         return K_ERR_MMBLK_INVALID_POOL_ADDR;
  30:..//kernel/core/tos_mmblk.c ****     }
  31:..//kernel/core/tos_mmblk.c **** 
  32:..//kernel/core/tos_mmblk.c ****     if ((blk_size & K_MMBLK_ALIGN_MASK) != 0u) {
  61              		.loc 1 32 5 is_stmt 1 view .LVU11
  62              		.loc 1 32 8 is_stmt 0 view .LVU12
  63 0018 14F00302 		ands	r2, r4, #3
  64 001c 1DD1     		bne	.L8
  33:..//kernel/core/tos_mmblk.c ****         return K_ERR_MMBLK_INVALID_BLK_SIZE;
  34:..//kernel/core/tos_mmblk.c ****     }
  35:..//kernel/core/tos_mmblk.c **** 
  36:..//kernel/core/tos_mmblk.c ****     blk_curr = pool_start;
  65              		.loc 1 36 5 is_stmt 1 view .LVU13
  66              	.LVL2:
  37:..//kernel/core/tos_mmblk.c ****     blk_next = K_MMBLK_NEXT_BLK(blk_curr, blk_size);
  67              		.loc 1 37 5 view .LVU14
  68              		.loc 1 37 16 is_stmt 0 view .LVU15
  69 001e 3319     		adds	r3, r6, r4
  70              	.LVL3:
  38:..//kernel/core/tos_mmblk.c **** 
  39:..//kernel/core/tos_mmblk.c ****     for (i = 0; i < blk_num - 1u; ++i) {
  71              		.loc 1 39 5 is_stmt 1 view .LVU16
  36:..//kernel/core/tos_mmblk.c ****     blk_next = K_MMBLK_NEXT_BLK(blk_curr, blk_size);
  72              		.loc 1 36 14 is_stmt 0 view .LVU17
  73 0020 3046     		mov	r0, r6
  74              	.LVL4:
  75              	.L3:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 3


  76              		.loc 1 39 29 discriminator 1 view .LVU18
  77 0022 691E     		subs	r1, r5, #1
  78              		.loc 1 39 5 discriminator 1 view .LVU19
  79 0024 9142     		cmp	r1, r2
  80 0026 04D9     		bls	.L10
  40:..//kernel/core/tos_mmblk.c ****         *(void **)blk_curr  = blk_next;
  81              		.loc 1 40 9 is_stmt 1 discriminator 3 view .LVU20
  82              		.loc 1 40 29 is_stmt 0 discriminator 3 view .LVU21
  83 0028 0360     		str	r3, [r0]
  41:..//kernel/core/tos_mmblk.c ****         blk_curr            = blk_next;
  84              		.loc 1 41 9 is_stmt 1 discriminator 3 view .LVU22
  85              	.LVL5:
  42:..//kernel/core/tos_mmblk.c ****         blk_next            = K_MMBLK_NEXT_BLK(blk_next, blk_size);
  86              		.loc 1 42 9 discriminator 3 view .LVU23
  39:..//kernel/core/tos_mmblk.c ****         *(void **)blk_curr  = blk_next;
  87              		.loc 1 39 35 is_stmt 0 discriminator 3 view .LVU24
  88 002a 0132     		adds	r2, r2, #1
  89              	.LVL6:
  41:..//kernel/core/tos_mmblk.c ****         blk_curr            = blk_next;
  90              		.loc 1 41 29 discriminator 3 view .LVU25
  91 002c 1846     		mov	r0, r3
  92              		.loc 1 42 29 discriminator 3 view .LVU26
  93 002e 2344     		add	r3, r3, r4
  94              	.LVL7:
  95              		.loc 1 42 29 discriminator 3 view .LVU27
  96 0030 F7E7     		b	.L3
  97              	.L10:
  43:..//kernel/core/tos_mmblk.c ****     }
  44:..//kernel/core/tos_mmblk.c ****     *(void **)blk_next = K_NULL;
  98              		.loc 1 44 5 is_stmt 1 view .LVU28
  99              		.loc 1 44 24 is_stmt 0 view .LVU29
 100 0032 0020     		movs	r0, #0
 101              	.LVL8:
 102              		.loc 1 44 24 view .LVU30
 103 0034 1860     		str	r0, [r3]
  45:..//kernel/core/tos_mmblk.c **** 
  46:..//kernel/core/tos_mmblk.c ****     mbp->pool_start = pool_start;
 104              		.loc 1 46 5 is_stmt 1 view .LVU31
 105              		.loc 1 46 21 is_stmt 0 view .LVU32
 106 0036 7E60     		str	r6, [r7, #4]
  47:..//kernel/core/tos_mmblk.c ****     mbp->free_list  = pool_start;
 107              		.loc 1 47 5 is_stmt 1 view .LVU33
 108              		.loc 1 47 21 is_stmt 0 view .LVU34
 109 0038 BE60     		str	r6, [r7, #8]
  48:..//kernel/core/tos_mmblk.c ****     mbp->blk_free   = blk_num;
 110              		.loc 1 48 5 is_stmt 1 view .LVU35
 111              		.loc 1 48 21 is_stmt 0 view .LVU36
 112 003a 7D61     		str	r5, [r7, #20]
  49:..//kernel/core/tos_mmblk.c ****     mbp->blk_max    = blk_num;
 113              		.loc 1 49 5 is_stmt 1 view .LVU37
 114              		.loc 1 49 21 is_stmt 0 view .LVU38
 115 003c 3D61     		str	r5, [r7, #16]
  50:..//kernel/core/tos_mmblk.c ****     mbp->blk_size   = blk_size;
 116              		.loc 1 50 5 is_stmt 1 view .LVU39
 117              		.loc 1 50 21 is_stmt 0 view .LVU40
 118 003e FC60     		str	r4, [r7, #12]
  51:..//kernel/core/tos_mmblk.c **** 
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 4


  52:..//kernel/core/tos_mmblk.c ****     TOS_OBJ_INIT(mbp, KNL_OBJ_TYPE_MMBLK_POOL);
 119              		.loc 1 52 5 is_stmt 1 view .LVU41
 120              	.LVL9:
 121              	.LBB12:
 122              	.LBI12:
 123              		.file 2 "..//kernel/core/include/tos_sys.h"
   1:..//kernel/core/include/tos_sys.h **** /*----------------------------------------------------------------------------
   2:..//kernel/core/include/tos_sys.h ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/include/tos_sys.h ****  * available.
   4:..//kernel/core/include/tos_sys.h ****  *
   5:..//kernel/core/include/tos_sys.h ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/include/tos_sys.h ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/include/tos_sys.h ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/include/tos_sys.h ****  *
   9:..//kernel/core/include/tos_sys.h ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/include/tos_sys.h ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/include/tos_sys.h ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/include/tos_sys.h ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/include/tos_sys.h ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/include/tos_sys.h ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/include/tos_sys.h ****  * within TencentOS.
  16:..//kernel/core/include/tos_sys.h ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/include/tos_sys.h **** 
  18:..//kernel/core/include/tos_sys.h **** #ifndef _TOS_SYS_H_
  19:..//kernel/core/include/tos_sys.h **** #define  _TOS_SYS_H_
  20:..//kernel/core/include/tos_sys.h **** 
  21:..//kernel/core/include/tos_sys.h **** __CDECLS_BEGIN
  22:..//kernel/core/include/tos_sys.h **** 
  23:..//kernel/core/include/tos_sys.h **** #define K_NESTING_LIMIT_IRQ             (k_nesting_t)250u
  24:..//kernel/core/include/tos_sys.h **** #define K_NESTING_LIMIT_SCHED_LOCK      (k_nesting_t)250u
  25:..//kernel/core/include/tos_sys.h **** 
  26:..//kernel/core/include/tos_sys.h **** typedef enum knl_state_en {
  27:..//kernel/core/include/tos_sys.h ****     KNL_STATE_STOPPED,
  28:..//kernel/core/include/tos_sys.h ****     KNL_STATE_RUNNING,
  29:..//kernel/core/include/tos_sys.h **** } knl_state_t;
  30:..//kernel/core/include/tos_sys.h **** 
  31:..//kernel/core/include/tos_sys.h **** // some kind of magic number, mainly for identifing whether the object is initialized, or whether u
  32:..//kernel/core/include/tos_sys.h **** typedef enum knl_obj_type_en {
  33:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_NONE                           = 0x0000,
  34:..//kernel/core/include/tos_sys.h **** 
  35:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BINARY_HEAP                    = 0xDAD0,
  36:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BITMAP                         = 0xDAD1,
  37:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_CHAR_FIFO                      = 0xDAD2,
  38:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MMBLK_POOL                     = 0xDAD3,
  39:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MSG_QUEUE                      = 0xDAD4,
  40:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_QUEUE                 = 0xDAD5,
  41:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_RING_QUEUE                     = 0xDAD6,
  42:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_STOPWATCH                      = 0xDAD7,
  43:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_TASK                           = 0xDAD8,
  44:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_TIMER                          = 0xDAD9,
  45:..//kernel/core/include/tos_sys.h **** 
  46:..//kernel/core/include/tos_sys.h ****     // ipc object
  47:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BARRIER                        = 0x0BEE,
  48:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_COMPLETION                     = 0x1BEE,
  49:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_COUNTDOWNLATCH                 = 0x2BEE,
  50:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_EVENT                          = 0x3BEE,
  51:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MAIL_QUEUE                     = 0x4BEE,
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 5


  52:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MESSAGE_QUEUE                  = 0x5BEE,
  53:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MUTEX                          = 0x6BEE,
  54:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_MAIL_QUEUE            = 0x7BEE,
  55:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_MESSAGE_QUEUE         = 0x8BEE,
  56:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_RWLOCK                         = 0x9BEE,
  57:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_SEMAPHORE                      = 0xABEE,
  58:..//kernel/core/include/tos_sys.h **** } knl_obj_type_t;
  59:..//kernel/core/include/tos_sys.h **** 
  60:..//kernel/core/include/tos_sys.h **** typedef enum knl_obj_alloc_type_en {
  61:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_NONE,
  62:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_STATIC,
  63:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_DYNAMIC,
  64:..//kernel/core/include/tos_sys.h **** } knl_obj_alloc_type_t;
  65:..//kernel/core/include/tos_sys.h **** 
  66:..//kernel/core/include/tos_sys.h **** typedef struct knl_object_st {
  67:..//kernel/core/include/tos_sys.h ****     knl_obj_alloc_type_t    alloc_type; /* is dynamic allocated(using tos_mmheap) or static memory?
  68:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_OBJECT_VERIFY_EN > 0u
  69:..//kernel/core/include/tos_sys.h ****     knl_obj_type_t          type;
  70:..//kernel/core/include/tos_sys.h **** #endif
  71:..//kernel/core/include/tos_sys.h **** } knl_obj_t;
  72:..//kernel/core/include/tos_sys.h **** 
  73:..//kernel/core/include/tos_sys.h **** /**
  74:..//kernel/core/include/tos_sys.h ****  * @brief Initialize the kernel.
  75:..//kernel/core/include/tos_sys.h ****  * initialize the tos tiny kernel.
  76:..//kernel/core/include/tos_sys.h ****  *
  77:..//kernel/core/include/tos_sys.h ****  * @attention None
  78:..//kernel/core/include/tos_sys.h ****  *
  79:..//kernel/core/include/tos_sys.h ****  * @param   None
  80:..//kernel/core/include/tos_sys.h ****  *
  81:..//kernel/core/include/tos_sys.h ****  * @return  errcode
  82:..//kernel/core/include/tos_sys.h ****  * @retval  Non-#K_ERR_NONE               return failed.
  83:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_NONE                   return successfully.
  84:..//kernel/core/include/tos_sys.h ****  */
  85:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_init(void);
  86:..//kernel/core/include/tos_sys.h **** 
  87:..//kernel/core/include/tos_sys.h **** /**
  88:..//kernel/core/include/tos_sys.h ****  * @brief Start the kernel.
  89:..//kernel/core/include/tos_sys.h ****  * get the kernel start to run, which means start the multitask scheduling.
  90:..//kernel/core/include/tos_sys.h ****  *
  91:..//kernel/core/include/tos_sys.h ****  * @attention None
  92:..//kernel/core/include/tos_sys.h ****  *
  93:..//kernel/core/include/tos_sys.h ****  * @param   None
  94:..//kernel/core/include/tos_sys.h ****  *
  95:..//kernel/core/include/tos_sys.h ****  * @return  errcode
  96:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_KNL_RUNNING            the kernel is already running.
  97:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_NONE                   return successfully.
  98:..//kernel/core/include/tos_sys.h ****  */
  99:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_start(void);
 100:..//kernel/core/include/tos_sys.h **** 
 101:..//kernel/core/include/tos_sys.h **** /**
 102:..//kernel/core/include/tos_sys.h ****  * @brief Get the kernel state.
 103:..//kernel/core/include/tos_sys.h ****  * whether the kernel is running.
 104:..//kernel/core/include/tos_sys.h ****  *
 105:..//kernel/core/include/tos_sys.h ****  * @attention None
 106:..//kernel/core/include/tos_sys.h ****  *
 107:..//kernel/core/include/tos_sys.h ****  * @param   None
 108:..//kernel/core/include/tos_sys.h ****  *
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 6


 109:..//kernel/core/include/tos_sys.h ****  * @return  whether the kernel is running.
 110:..//kernel/core/include/tos_sys.h ****  * @retval  Non-0                           the kernel is running.
 111:..//kernel/core/include/tos_sys.h ****  * @retval  0                               the kernel is not running.
 112:..//kernel/core/include/tos_sys.h ****  */
 113:..//kernel/core/include/tos_sys.h **** __API__ int     tos_knl_is_running(void);
 114:..//kernel/core/include/tos_sys.h **** 
 115:..//kernel/core/include/tos_sys.h **** /**
 116:..//kernel/core/include/tos_sys.h ****  * @brief Kernel enter the interrupt.
 117:..//kernel/core/include/tos_sys.h ****  * this function should be called in the entrance of a interrupt handler.
 118:..//kernel/core/include/tos_sys.h ****  *
 119:..//kernel/core/include/tos_sys.h ****  * @attention None
 120:..//kernel/core/include/tos_sys.h ****  *
 121:..//kernel/core/include/tos_sys.h ****  * @param   None
 122:..//kernel/core/include/tos_sys.h ****  *
 123:..//kernel/core/include/tos_sys.h ****  * @return  None
 124:..//kernel/core/include/tos_sys.h ****  */
 125:..//kernel/core/include/tos_sys.h **** __API__ void    tos_knl_irq_enter(void);
 126:..//kernel/core/include/tos_sys.h **** 
 127:..//kernel/core/include/tos_sys.h **** /**
 128:..//kernel/core/include/tos_sys.h ****  * @brief Kernel exit the interrupt.
 129:..//kernel/core/include/tos_sys.h ****  * this function should be called in the exit of a interrupt handler.
 130:..//kernel/core/include/tos_sys.h ****  *
 131:..//kernel/core/include/tos_sys.h ****  * @attention None
 132:..//kernel/core/include/tos_sys.h ****  *
 133:..//kernel/core/include/tos_sys.h ****  * @param   None
 134:..//kernel/core/include/tos_sys.h ****  *
 135:..//kernel/core/include/tos_sys.h ****  * @return  None
 136:..//kernel/core/include/tos_sys.h ****  */
 137:..//kernel/core/include/tos_sys.h **** __API__ void    tos_knl_irq_leave(void);
 138:..//kernel/core/include/tos_sys.h **** 
 139:..//kernel/core/include/tos_sys.h **** /**
 140:..//kernel/core/include/tos_sys.h ****  * @brief Lock the scheduler.
 141:..//kernel/core/include/tos_sys.h ****  * prevent the kernel from performing task schedule.
 142:..//kernel/core/include/tos_sys.h ****  *
 143:..//kernel/core/include/tos_sys.h ****  * @attention None
 144:..//kernel/core/include/tos_sys.h ****  *
 145:..//kernel/core/include/tos_sys.h ****  * @param   None
 146:..//kernel/core/include/tos_sys.h ****  *
 147:..//kernel/core/include/tos_sys.h ****  * @return  errcode
 148:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_KNL_NOT_RUNNING         the kernel is not running.
 149:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_LOCK_NESTING_OVERFLOW   the schedule lock nesting is overflow.
 150:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_NONE                    return successfully.
 151:..//kernel/core/include/tos_sys.h ****  */
 152:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_sched_lock(void);
 153:..//kernel/core/include/tos_sys.h **** 
 154:..//kernel/core/include/tos_sys.h **** /**
 155:..//kernel/core/include/tos_sys.h ****  * @brief Unlock the scheduler.
 156:..//kernel/core/include/tos_sys.h ****  * re-enable the task schedule.
 157:..//kernel/core/include/tos_sys.h ****  *
 158:..//kernel/core/include/tos_sys.h ****  * @attention None
 159:..//kernel/core/include/tos_sys.h ****  *
 160:..//kernel/core/include/tos_sys.h ****  * @param   None
 161:..//kernel/core/include/tos_sys.h ****  *
 162:..//kernel/core/include/tos_sys.h ****  * @return  errcode
 163:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_KNL_NOT_RUNNING         the kernel is not running.
 164:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_SCHED_NOT_LOCKED        the scheduler is not locked.
 165:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_NONE                    return successfully.
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 7


 166:..//kernel/core/include/tos_sys.h ****  */
 167:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_sched_unlock(void);
 168:..//kernel/core/include/tos_sys.h **** 
 169:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_TICKLESS_EN > 0u
 170:..//kernel/core/include/tos_sys.h **** __KNL__ k_tick_t knl_next_expires_get(void);
 171:..//kernel/core/include/tos_sys.h **** #endif
 172:..//kernel/core/include/tos_sys.h **** 
 173:..//kernel/core/include/tos_sys.h **** __KNL__ void    knl_sched(void);
 174:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_sched_locked(void);
 175:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_inirq(void);
 176:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_idle(k_task_t *task);
 177:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_self(k_task_t *task);
 178:..//kernel/core/include/tos_sys.h **** __KNL__ k_err_t knl_idle_init(void);
 179:..//kernel/core/include/tos_sys.h **** 
 180:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_OBJECT_VERIFY_EN > 0u
 181:..//kernel/core/include/tos_sys.h **** 
 182:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ int knl_object_verify(knl_obj_t *knl_obj, knl_obj_type_t type)
 183:..//kernel/core/include/tos_sys.h **** {
 184:..//kernel/core/include/tos_sys.h ****     return knl_obj->type == type;
 185:..//kernel/core/include/tos_sys.h **** }
 186:..//kernel/core/include/tos_sys.h **** 
 187:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_init(knl_obj_t *knl_obj, knl_obj_type_t type)
 124              		.loc 2 187 32 view .LVU42
 125              	.LBB13:
 188:..//kernel/core/include/tos_sys.h **** {
 189:..//kernel/core/include/tos_sys.h ****     knl_obj->type = type;
 126              		.loc 2 189 5 view .LVU43
 127              		.loc 2 189 19 is_stmt 0 view .LVU44
 128 0040 4DF6D323 		movw	r3, #56019
 129              	.LVL10:
 130              		.loc 2 189 19 view .LVU45
 131 0044 7B80     		strh	r3, [r7, #2]	@ movhi
 132              	.LVL11:
 133              		.loc 2 189 19 view .LVU46
 134              	.LBE13:
 135              	.LBE12:
  53:..//kernel/core/tos_mmblk.c **** 
  54:..//kernel/core/tos_mmblk.c ****     return K_ERR_NONE;
 136              		.loc 1 54 5 is_stmt 1 view .LVU47
 137              	.L2:
  55:..//kernel/core/tos_mmblk.c **** }
 138              		.loc 1 55 1 is_stmt 0 view .LVU48
 139 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 140              	.LVL12:
 141              	.L5:
  25:..//kernel/core/tos_mmblk.c ****     TOS_PTR_SANITY_CHECK(pool_start);
 142              		.loc 1 25 5 view .LVU49
 143 0048 4FF4C870 		mov	r0, #400
 144 004c FBE7     		b	.L2
 145              	.L6:
  26:..//kernel/core/tos_mmblk.c **** 
 146              		.loc 1 26 5 view .LVU50
 147 004e 40F24C40 		movw	r0, #1100
 148 0052 F8E7     		b	.L2
 149              	.L7:
  29:..//kernel/core/tos_mmblk.c ****     }
 150              		.loc 1 29 16 view .LVU51
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 8


 151 0054 40F2BF20 		movw	r0, #703
 152 0058 F5E7     		b	.L2
 153              	.L8:
  33:..//kernel/core/tos_mmblk.c ****     }
 154              		.loc 1 33 16 view .LVU52
 155 005a 40F2BE20 		movw	r0, #702
 156 005e F2E7     		b	.L2
 157              		.cfi_endproc
 158              	.LFE110:
 160              		.section	.text.tos_mmblk_pool_destroy,"ax",%progbits
 161              		.align	1
 162              		.global	tos_mmblk_pool_destroy
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu softvfp
 168              	tos_mmblk_pool_destroy:
 169              	.LVL13:
 170              	.LFB111:
  56:..//kernel/core/tos_mmblk.c **** 
  57:..//kernel/core/tos_mmblk.c **** __API__ k_err_t tos_mmblk_pool_destroy(k_mmblk_pool_t *mbp)
  58:..//kernel/core/tos_mmblk.c **** {
 171              		.loc 1 58 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
  59:..//kernel/core/tos_mmblk.c ****     TOS_PTR_SANITY_CHECK(mbp);
 176              		.loc 1 59 5 view .LVU54
 177              		.loc 1 59 5 view .LVU55
 178 0000 0346     		mov	r3, r0
 179 0002 60B1     		cbz	r0, .L13
  60:..//kernel/core/tos_mmblk.c ****     TOS_OBJ_VERIFY(mbp, KNL_OBJ_TYPE_MMBLK_POOL);
 180              		.loc 1 60 5 view .LVU56
 181              		.loc 1 60 5 view .LVU57
 182              	.LVL14:
 183              	.LBB14:
 184              	.LBI14:
 182:..//kernel/core/include/tos_sys.h **** {
 185              		.loc 2 182 31 view .LVU58
 186              	.LBB15:
 184:..//kernel/core/include/tos_sys.h **** }
 187              		.loc 2 184 5 view .LVU59
 184:..//kernel/core/include/tos_sys.h **** }
 188              		.loc 2 184 19 is_stmt 0 view .LVU60
 189 0004 4188     		ldrh	r1, [r0, #2]
 190              	.LVL15:
 184:..//kernel/core/include/tos_sys.h **** }
 191              		.loc 2 184 19 view .LVU61
 192              	.LBE15:
 193              	.LBE14:
 194              		.loc 1 60 5 view .LVU62
 195 0006 4DF6D322 		movw	r2, #56019
 196 000a 9142     		cmp	r1, r2
 197 000c 0AD1     		bne	.L14
  61:..//kernel/core/tos_mmblk.c **** 
  62:..//kernel/core/tos_mmblk.c ****     mbp->pool_start = K_NULL;
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 9


 198              		.loc 1 62 5 is_stmt 1 view .LVU63
 199              		.loc 1 62 21 is_stmt 0 view .LVU64
 200 000e 0020     		movs	r0, #0
 201              	.LVL16:
 202              		.loc 1 62 21 view .LVU65
 203 0010 5860     		str	r0, [r3, #4]
  63:..//kernel/core/tos_mmblk.c ****     mbp->free_list  = K_NULL;
 204              		.loc 1 63 5 is_stmt 1 view .LVU66
 205              		.loc 1 63 21 is_stmt 0 view .LVU67
 206 0012 9860     		str	r0, [r3, #8]
  64:..//kernel/core/tos_mmblk.c ****     mbp->blk_free   = 0;
 207              		.loc 1 64 5 is_stmt 1 view .LVU68
 208              		.loc 1 64 21 is_stmt 0 view .LVU69
 209 0014 5861     		str	r0, [r3, #20]
  65:..//kernel/core/tos_mmblk.c ****     mbp->blk_max    = 0;
 210              		.loc 1 65 5 is_stmt 1 view .LVU70
 211              		.loc 1 65 21 is_stmt 0 view .LVU71
 212 0016 1861     		str	r0, [r3, #16]
  66:..//kernel/core/tos_mmblk.c ****     mbp->blk_size   = 0;
 213              		.loc 1 66 5 is_stmt 1 view .LVU72
 214              		.loc 1 66 21 is_stmt 0 view .LVU73
 215 0018 D860     		str	r0, [r3, #12]
  67:..//kernel/core/tos_mmblk.c **** 
  68:..//kernel/core/tos_mmblk.c ****     TOS_OBJ_DEINIT(mbp);
 216              		.loc 1 68 5 is_stmt 1 view .LVU74
 217              	.LVL17:
 218              	.LBB16:
 219              	.LBI16:
 190:..//kernel/core/include/tos_sys.h **** }
 191:..//kernel/core/include/tos_sys.h **** 
 192:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_deinit(knl_obj_t *knl_obj)
 220              		.loc 2 192 32 view .LVU75
 221              	.LBB17:
 193:..//kernel/core/include/tos_sys.h **** {
 194:..//kernel/core/include/tos_sys.h ****     knl_obj->type = KNL_OBJ_TYPE_NONE;
 222              		.loc 2 194 5 view .LVU76
 223              		.loc 2 194 19 is_stmt 0 view .LVU77
 224 001a 5880     		strh	r0, [r3, #2]	@ movhi
 225              	.LVL18:
 226              		.loc 2 194 19 view .LVU78
 227              	.LBE17:
 228              	.LBE16:
  69:..//kernel/core/tos_mmblk.c **** 
  70:..//kernel/core/tos_mmblk.c ****     return K_ERR_NONE;
 229              		.loc 1 70 5 is_stmt 1 view .LVU79
 230              		.loc 1 70 12 is_stmt 0 view .LVU80
 231 001c 7047     		bx	lr
 232              	.LVL19:
 233              	.L13:
  59:..//kernel/core/tos_mmblk.c ****     TOS_OBJ_VERIFY(mbp, KNL_OBJ_TYPE_MMBLK_POOL);
 234              		.loc 1 59 5 view .LVU81
 235 001e 40F24C40 		movw	r0, #1100
 236              	.LVL20:
  59:..//kernel/core/tos_mmblk.c ****     TOS_OBJ_VERIFY(mbp, KNL_OBJ_TYPE_MMBLK_POOL);
 237              		.loc 1 59 5 view .LVU82
 238 0022 7047     		bx	lr
 239              	.LVL21:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 10


 240              	.L14:
  60:..//kernel/core/tos_mmblk.c **** 
 241              		.loc 1 60 5 view .LVU83
 242 0024 40F24D40 		movw	r0, #1101
 243              	.LVL22:
  71:..//kernel/core/tos_mmblk.c **** }
 244              		.loc 1 71 1 view .LVU84
 245 0028 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE111:
 249              		.section	.text.tos_mmblk_alloc,"ax",%progbits
 250              		.align	1
 251              		.global	tos_mmblk_alloc
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu softvfp
 257              	tos_mmblk_alloc:
 258              	.LVL23:
 259              	.LFB112:
  72:..//kernel/core/tos_mmblk.c **** 
  73:..//kernel/core/tos_mmblk.c **** __API__ k_err_t tos_mmblk_alloc(k_mmblk_pool_t *mbp, void **blk)
  74:..//kernel/core/tos_mmblk.c **** {
 260              		.loc 1 74 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
  75:..//kernel/core/tos_mmblk.c ****     TOS_CPU_CPSR_ALLOC();
 264              		.loc 1 75 5 view .LVU86
  76:..//kernel/core/tos_mmblk.c **** 
  77:..//kernel/core/tos_mmblk.c ****     TOS_PTR_SANITY_CHECK(mbp);
 265              		.loc 1 77 5 view .LVU87
 266              		.loc 1 77 5 view .LVU88
 267 0000 00B3     		cbz	r0, .L18
  74:..//kernel/core/tos_mmblk.c ****     TOS_CPU_CPSR_ALLOC();
 268              		.loc 1 74 1 is_stmt 0 view .LVU89
 269 0002 38B5     		push	{r3, r4, r5, lr}
 270              	.LCFI1:
 271              		.cfi_def_cfa_offset 16
 272              		.cfi_offset 3, -16
 273              		.cfi_offset 4, -12
 274              		.cfi_offset 5, -8
 275              		.cfi_offset 14, -4
 276 0004 0446     		mov	r4, r0
  78:..//kernel/core/tos_mmblk.c ****     TOS_OBJ_VERIFY(mbp, KNL_OBJ_TYPE_MMBLK_POOL);
 277              		.loc 1 78 5 is_stmt 1 view .LVU90
 278              		.loc 1 78 5 view .LVU91
 279              	.LVL24:
 280              	.LBB18:
 281              	.LBI18:
 182:..//kernel/core/include/tos_sys.h **** {
 282              		.loc 2 182 31 view .LVU92
 283              	.LBB19:
 184:..//kernel/core/include/tos_sys.h **** }
 284              		.loc 2 184 5 view .LVU93
 184:..//kernel/core/include/tos_sys.h **** }
 285              		.loc 2 184 19 is_stmt 0 view .LVU94
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 11


 286 0006 4088     		ldrh	r0, [r0, #2]
 287              	.LVL25:
 184:..//kernel/core/include/tos_sys.h **** }
 288              		.loc 2 184 19 view .LVU95
 289              	.LBE19:
 290              	.LBE18:
 291              		.loc 1 78 5 view .LVU96
 292 0008 4DF6D322 		movw	r2, #56019
 293 000c 9042     		cmp	r0, r2
 294 000e 02D0     		beq	.L24
 295 0010 40F24D40 		movw	r0, #1101
 296              	.LVL26:
 297              	.L16:
  79:..//kernel/core/tos_mmblk.c **** 
  80:..//kernel/core/tos_mmblk.c ****     TOS_CPU_INT_DISABLE();
  81:..//kernel/core/tos_mmblk.c ****     if (mbp->blk_free == 0) {
  82:..//kernel/core/tos_mmblk.c ****         TOS_CPU_INT_ENABLE();
  83:..//kernel/core/tos_mmblk.c ****         *blk = K_NULL;
  84:..//kernel/core/tos_mmblk.c ****         return K_ERR_MMBLK_POOL_EMPTY;
  85:..//kernel/core/tos_mmblk.c ****     }
  86:..//kernel/core/tos_mmblk.c ****     *blk            = mbp->free_list;
  87:..//kernel/core/tos_mmblk.c ****     mbp->free_list  = *(void **)mbp->free_list;
  88:..//kernel/core/tos_mmblk.c ****     --mbp->blk_free;
  89:..//kernel/core/tos_mmblk.c ****     TOS_CPU_INT_ENABLE();
  90:..//kernel/core/tos_mmblk.c ****     return K_ERR_NONE;
  91:..//kernel/core/tos_mmblk.c **** }
 298              		.loc 1 91 1 view .LVU97
 299 0014 38BD     		pop	{r3, r4, r5, pc}
 300              	.LVL27:
 301              	.L24:
 302              		.loc 1 91 1 view .LVU98
 303 0016 0D46     		mov	r5, r1
  80:..//kernel/core/tos_mmblk.c ****     if (mbp->blk_free == 0) {
 304              		.loc 1 80 5 is_stmt 1 view .LVU99
  80:..//kernel/core/tos_mmblk.c ****     if (mbp->blk_free == 0) {
 305              		.loc 1 80 5 view .LVU100
 306 0018 FFF7FEFF 		bl	tos_cpu_cpsr_save
 307              	.LVL28:
  81:..//kernel/core/tos_mmblk.c ****         TOS_CPU_INT_ENABLE();
 308              		.loc 1 81 5 view .LVU101
  81:..//kernel/core/tos_mmblk.c ****         TOS_CPU_INT_ENABLE();
 309              		.loc 1 81 12 is_stmt 0 view .LVU102
 310 001c 6369     		ldr	r3, [r4, #20]
  81:..//kernel/core/tos_mmblk.c ****         TOS_CPU_INT_ENABLE();
 311              		.loc 1 81 8 view .LVU103
 312 001e 53B1     		cbz	r3, .L25
  86:..//kernel/core/tos_mmblk.c ****     mbp->free_list  = *(void **)mbp->free_list;
 313              		.loc 1 86 5 is_stmt 1 view .LVU104
  86:..//kernel/core/tos_mmblk.c ****     mbp->free_list  = *(void **)mbp->free_list;
 314              		.loc 1 86 26 is_stmt 0 view .LVU105
 315 0020 A368     		ldr	r3, [r4, #8]
  86:..//kernel/core/tos_mmblk.c ****     mbp->free_list  = *(void **)mbp->free_list;
 316              		.loc 1 86 21 view .LVU106
 317 0022 2B60     		str	r3, [r5]
  87:..//kernel/core/tos_mmblk.c ****     --mbp->blk_free;
 318              		.loc 1 87 5 is_stmt 1 view .LVU107
  87:..//kernel/core/tos_mmblk.c ****     --mbp->blk_free;
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 12


 319              		.loc 1 87 23 is_stmt 0 view .LVU108
 320 0024 1B68     		ldr	r3, [r3]
  87:..//kernel/core/tos_mmblk.c ****     --mbp->blk_free;
 321              		.loc 1 87 21 view .LVU109
 322 0026 A360     		str	r3, [r4, #8]
  88:..//kernel/core/tos_mmblk.c ****     TOS_CPU_INT_ENABLE();
 323              		.loc 1 88 5 is_stmt 1 view .LVU110
  88:..//kernel/core/tos_mmblk.c ****     TOS_CPU_INT_ENABLE();
 324              		.loc 1 88 10 is_stmt 0 view .LVU111
 325 0028 6369     		ldr	r3, [r4, #20]
  88:..//kernel/core/tos_mmblk.c ****     TOS_CPU_INT_ENABLE();
 326              		.loc 1 88 5 view .LVU112
 327 002a 013B     		subs	r3, r3, #1
 328 002c 6361     		str	r3, [r4, #20]
  89:..//kernel/core/tos_mmblk.c ****     return K_ERR_NONE;
 329              		.loc 1 89 5 is_stmt 1 view .LVU113
  89:..//kernel/core/tos_mmblk.c ****     return K_ERR_NONE;
 330              		.loc 1 89 5 view .LVU114
 331 002e FFF7FEFF 		bl	tos_cpu_cpsr_restore
 332              	.LVL29:
  90:..//kernel/core/tos_mmblk.c **** }
 333              		.loc 1 90 5 view .LVU115
  90:..//kernel/core/tos_mmblk.c **** }
 334              		.loc 1 90 12 is_stmt 0 view .LVU116
 335 0032 0020     		movs	r0, #0
 336 0034 EEE7     		b	.L16
 337              	.LVL30:
 338              	.L25:
  82:..//kernel/core/tos_mmblk.c ****         *blk = K_NULL;
 339              		.loc 1 82 9 is_stmt 1 view .LVU117
  82:..//kernel/core/tos_mmblk.c ****         *blk = K_NULL;
 340              		.loc 1 82 9 view .LVU118
 341 0036 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 342              	.LVL31:
  83:..//kernel/core/tos_mmblk.c ****         return K_ERR_MMBLK_POOL_EMPTY;
 343              		.loc 1 83 9 view .LVU119
  83:..//kernel/core/tos_mmblk.c ****         return K_ERR_MMBLK_POOL_EMPTY;
 344              		.loc 1 83 14 is_stmt 0 view .LVU120
 345 003a 0023     		movs	r3, #0
 346 003c 2B60     		str	r3, [r5]
  84:..//kernel/core/tos_mmblk.c ****     }
 347              		.loc 1 84 9 is_stmt 1 view .LVU121
  84:..//kernel/core/tos_mmblk.c ****     }
 348              		.loc 1 84 16 is_stmt 0 view .LVU122
 349 003e 40F2BD20 		movw	r0, #701
 350 0042 E7E7     		b	.L16
 351              	.LVL32:
 352              	.L18:
 353              	.LCFI2:
 354              		.cfi_def_cfa_offset 0
 355              		.cfi_restore 3
 356              		.cfi_restore 4
 357              		.cfi_restore 5
 358              		.cfi_restore 14
  77:..//kernel/core/tos_mmblk.c ****     TOS_OBJ_VERIFY(mbp, KNL_OBJ_TYPE_MMBLK_POOL);
 359              		.loc 1 77 5 view .LVU123
 360 0044 40F24C40 		movw	r0, #1100
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 13


 361              	.LVL33:
 362              		.loc 1 91 1 view .LVU124
 363 0048 7047     		bx	lr
 364              		.cfi_endproc
 365              	.LFE112:
 367              		.section	.text.tos_mmblk_free,"ax",%progbits
 368              		.align	1
 369              		.global	tos_mmblk_free
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu softvfp
 375              	tos_mmblk_free:
 376              	.LVL34:
 377              	.LFB113:
  92:..//kernel/core/tos_mmblk.c **** 
  93:..//kernel/core/tos_mmblk.c **** __API__ k_err_t tos_mmblk_free(k_mmblk_pool_t *mbp, void *blk)
  94:..//kernel/core/tos_mmblk.c **** {
 378              		.loc 1 94 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
  95:..//kernel/core/tos_mmblk.c ****     TOS_CPU_CPSR_ALLOC();
 382              		.loc 1 95 5 view .LVU126
  96:..//kernel/core/tos_mmblk.c **** 
  97:..//kernel/core/tos_mmblk.c ****     TOS_PTR_SANITY_CHECK(mbp);
 383              		.loc 1 97 5 view .LVU127
 384              		.loc 1 97 5 view .LVU128
 385 0000 00B3     		cbz	r0, .L29
  94:..//kernel/core/tos_mmblk.c ****     TOS_CPU_CPSR_ALLOC();
 386              		.loc 1 94 1 is_stmt 0 view .LVU129
 387 0002 38B5     		push	{r3, r4, r5, lr}
 388              	.LCFI3:
 389              		.cfi_def_cfa_offset 16
 390              		.cfi_offset 3, -16
 391              		.cfi_offset 4, -12
 392              		.cfi_offset 5, -8
 393              		.cfi_offset 14, -4
 394 0004 0446     		mov	r4, r0
  98:..//kernel/core/tos_mmblk.c ****     TOS_PTR_SANITY_CHECK(blk);
 395              		.loc 1 98 5 is_stmt 1 view .LVU130
 396              		.loc 1 98 5 view .LVU131
 397 0006 01B3     		cbz	r1, .L30
  99:..//kernel/core/tos_mmblk.c ****     TOS_OBJ_VERIFY(mbp, KNL_OBJ_TYPE_MMBLK_POOL);
 398              		.loc 1 99 5 view .LVU132
 399              		.loc 1 99 5 view .LVU133
 400              	.LVL35:
 401              	.LBB20:
 402              	.LBI20:
 182:..//kernel/core/include/tos_sys.h **** {
 403              		.loc 2 182 31 view .LVU134
 404              	.LBB21:
 184:..//kernel/core/include/tos_sys.h **** }
 405              		.loc 2 184 5 view .LVU135
 184:..//kernel/core/include/tos_sys.h **** }
 406              		.loc 2 184 19 is_stmt 0 view .LVU136
 407 0008 4288     		ldrh	r2, [r0, #2]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 14


 408              	.LVL36:
 184:..//kernel/core/include/tos_sys.h **** }
 409              		.loc 2 184 19 view .LVU137
 410              	.LBE21:
 411              	.LBE20:
 412              		.loc 1 99 5 view .LVU138
 413 000a 4DF6D323 		movw	r3, #56019
 414 000e 9A42     		cmp	r2, r3
 415 0010 02D0     		beq	.L36
 416 0012 40F24D40 		movw	r0, #1101
 417              	.LVL37:
 418              	.L27:
 100:..//kernel/core/tos_mmblk.c **** 
 101:..//kernel/core/tos_mmblk.c ****     TOS_CPU_INT_DISABLE();
 102:..//kernel/core/tos_mmblk.c ****     if (mbp->blk_free >= mbp->blk_max) {
 103:..//kernel/core/tos_mmblk.c ****         TOS_CPU_INT_ENABLE();
 104:..//kernel/core/tos_mmblk.c ****         return K_ERR_MMBLK_POOL_FULL;
 105:..//kernel/core/tos_mmblk.c ****     }
 106:..//kernel/core/tos_mmblk.c **** 
 107:..//kernel/core/tos_mmblk.c ****     *(void **)blk   = mbp->free_list;
 108:..//kernel/core/tos_mmblk.c ****     mbp->free_list  = blk;
 109:..//kernel/core/tos_mmblk.c ****     ++mbp->blk_free;
 110:..//kernel/core/tos_mmblk.c ****     TOS_CPU_INT_ENABLE();
 111:..//kernel/core/tos_mmblk.c ****     return K_ERR_NONE;
 112:..//kernel/core/tos_mmblk.c **** }
 419              		.loc 1 112 1 view .LVU139
 420 0016 38BD     		pop	{r3, r4, r5, pc}
 421              	.LVL38:
 422              	.L36:
 423              		.loc 1 112 1 view .LVU140
 424 0018 0D46     		mov	r5, r1
 101:..//kernel/core/tos_mmblk.c ****     if (mbp->blk_free >= mbp->blk_max) {
 425              		.loc 1 101 5 is_stmt 1 view .LVU141
 101:..//kernel/core/tos_mmblk.c ****     if (mbp->blk_free >= mbp->blk_max) {
 426              		.loc 1 101 5 view .LVU142
 427 001a FFF7FEFF 		bl	tos_cpu_cpsr_save
 428              	.LVL39:
 102:..//kernel/core/tos_mmblk.c ****         TOS_CPU_INT_ENABLE();
 429              		.loc 1 102 5 view .LVU143
 102:..//kernel/core/tos_mmblk.c ****         TOS_CPU_INT_ENABLE();
 430              		.loc 1 102 12 is_stmt 0 view .LVU144
 431 001e 6269     		ldr	r2, [r4, #20]
 102:..//kernel/core/tos_mmblk.c ****         TOS_CPU_INT_ENABLE();
 432              		.loc 1 102 29 view .LVU145
 433 0020 2369     		ldr	r3, [r4, #16]
 102:..//kernel/core/tos_mmblk.c ****         TOS_CPU_INT_ENABLE();
 434              		.loc 1 102 8 view .LVU146
 435 0022 9A42     		cmp	r2, r3
 436 0024 09D2     		bcs	.L37
 107:..//kernel/core/tos_mmblk.c ****     mbp->free_list  = blk;
 437              		.loc 1 107 5 is_stmt 1 view .LVU147
 107:..//kernel/core/tos_mmblk.c ****     mbp->free_list  = blk;
 438              		.loc 1 107 26 is_stmt 0 view .LVU148
 439 0026 A368     		ldr	r3, [r4, #8]
 107:..//kernel/core/tos_mmblk.c ****     mbp->free_list  = blk;
 440              		.loc 1 107 21 view .LVU149
 441 0028 2B60     		str	r3, [r5]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 15


 108:..//kernel/core/tos_mmblk.c ****     ++mbp->blk_free;
 442              		.loc 1 108 5 is_stmt 1 view .LVU150
 108:..//kernel/core/tos_mmblk.c ****     ++mbp->blk_free;
 443              		.loc 1 108 21 is_stmt 0 view .LVU151
 444 002a A560     		str	r5, [r4, #8]
 109:..//kernel/core/tos_mmblk.c ****     TOS_CPU_INT_ENABLE();
 445              		.loc 1 109 5 is_stmt 1 view .LVU152
 109:..//kernel/core/tos_mmblk.c ****     TOS_CPU_INT_ENABLE();
 446              		.loc 1 109 10 is_stmt 0 view .LVU153
 447 002c 6369     		ldr	r3, [r4, #20]
 109:..//kernel/core/tos_mmblk.c ****     TOS_CPU_INT_ENABLE();
 448              		.loc 1 109 5 view .LVU154
 449 002e 0133     		adds	r3, r3, #1
 450 0030 6361     		str	r3, [r4, #20]
 110:..//kernel/core/tos_mmblk.c ****     return K_ERR_NONE;
 451              		.loc 1 110 5 is_stmt 1 view .LVU155
 110:..//kernel/core/tos_mmblk.c ****     return K_ERR_NONE;
 452              		.loc 1 110 5 view .LVU156
 453 0032 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 454              	.LVL40:
 111:..//kernel/core/tos_mmblk.c **** }
 455              		.loc 1 111 5 view .LVU157
 111:..//kernel/core/tos_mmblk.c **** }
 456              		.loc 1 111 12 is_stmt 0 view .LVU158
 457 0036 0020     		movs	r0, #0
 458 0038 EDE7     		b	.L27
 459              	.LVL41:
 460              	.L37:
 103:..//kernel/core/tos_mmblk.c ****         return K_ERR_MMBLK_POOL_FULL;
 461              		.loc 1 103 9 is_stmt 1 view .LVU159
 103:..//kernel/core/tos_mmblk.c ****         return K_ERR_MMBLK_POOL_FULL;
 462              		.loc 1 103 9 view .LVU160
 463 003a FFF7FEFF 		bl	tos_cpu_cpsr_restore
 464              	.LVL42:
 104:..//kernel/core/tos_mmblk.c ****     }
 465              		.loc 1 104 9 view .LVU161
 104:..//kernel/core/tos_mmblk.c ****     }
 466              		.loc 1 104 16 is_stmt 0 view .LVU162
 467 003e 4FF42F70 		mov	r0, #700
 468 0042 E8E7     		b	.L27
 469              	.LVL43:
 470              	.L29:
 471              	.LCFI4:
 472              		.cfi_def_cfa_offset 0
 473              		.cfi_restore 3
 474              		.cfi_restore 4
 475              		.cfi_restore 5
 476              		.cfi_restore 14
  97:..//kernel/core/tos_mmblk.c ****     TOS_PTR_SANITY_CHECK(blk);
 477              		.loc 1 97 5 view .LVU163
 478 0044 40F24C40 		movw	r0, #1100
 479              	.LVL44:
 480              		.loc 1 112 1 view .LVU164
 481 0048 7047     		bx	lr
 482              	.LVL45:
 483              	.L30:
 484              	.LCFI5:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 16


 485              		.cfi_def_cfa_offset 16
 486              		.cfi_offset 3, -16
 487              		.cfi_offset 4, -12
 488              		.cfi_offset 5, -8
 489              		.cfi_offset 14, -4
  98:..//kernel/core/tos_mmblk.c ****     TOS_OBJ_VERIFY(mbp, KNL_OBJ_TYPE_MMBLK_POOL);
 490              		.loc 1 98 5 view .LVU165
 491 004a 40F24C40 		movw	r0, #1100
 492              	.LVL46:
  98:..//kernel/core/tos_mmblk.c ****     TOS_OBJ_VERIFY(mbp, KNL_OBJ_TYPE_MMBLK_POOL);
 493              		.loc 1 98 5 view .LVU166
 494 004e E2E7     		b	.L27
 495              		.cfi_endproc
 496              	.LFE113:
 498              		.text
 499              	.Letext0:
 500              		.file 3 "..//kernel/core/include/tos_kerr.h"
 501              		.file 4 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 502              		.file 5 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 503              		.file 6 "Drivers/CMSIS/Include/core_cm3.h"
 504              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 505              		.file 8 "d:\\arm_gcc\\8 2019-q3-update\\lib\\gcc\\arm-none-eabi\\8.3.1\\include\\stddef.h"
 506              		.file 9 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_types.h"
 507              		.file 10 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\reent.h"
 508              		.file 11 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\lock.h"
 509              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 510              		.file 13 "..//arch/arm/arm-v7m/common/include/tos_cpu_types.h"
 511              		.file 14 "..//kernel/core/include/tos_ktypes.h"
 512              		.file 15 "..//kernel/core/include/tos_task.h"
 513              		.file 16 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\stdlib.h"
 514              		.file 17 "..//kernel/core/include/tos_list.h"
 515              		.file 18 "..//kernel/core/include/tos_pend.h"
 516              		.file 19 "..//kernel/core/include/tos_timer.h"
 517              		.file 20 "..//kernel/core/include/tos_mmblk.h"
 518              		.file 21 "..//kernel/core/include/tos_mmheap.h"
 519              		.file 22 "..//kernel/core/include/tos_sched.h"
 520              		.file 23 "..//kernel/core/include/tos_global.h"
 521              		.file 24 "..//arch/arm/arm-v7m/common/include/tos_cpu.h"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 tos_mmblk.c
C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s:16     .text.tos_mmblk_pool_create:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s:24     .text.tos_mmblk_pool_create:00000000 tos_mmblk_pool_create
C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s:161    .text.tos_mmblk_pool_destroy:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s:168    .text.tos_mmblk_pool_destroy:00000000 tos_mmblk_pool_destroy
C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s:250    .text.tos_mmblk_alloc:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s:257    .text.tos_mmblk_alloc:00000000 tos_mmblk_alloc
C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s:368    .text.tos_mmblk_free:00000000 $t
C:\Users\tianx\AppData\Local\Temp\ccTB6FRa.s:375    .text.tos_mmblk_free:00000000 tos_mmblk_free

UNDEFINED SYMBOLS
knl_is_inirq
tos_cpu_cpsr_save
tos_cpu_cpsr_restore
