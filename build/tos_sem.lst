ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tos_sem.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.sem_do_post,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	sem_do_post:
  24              	.LVL0:
  25              	.LFB113:
  26              		.file 1 "..//kernel/core/tos_sem.c"
   1:..//kernel/core/tos_sem.c **** /*----------------------------------------------------------------------------
   2:..//kernel/core/tos_sem.c ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/tos_sem.c ****  * available.
   4:..//kernel/core/tos_sem.c ****  *
   5:..//kernel/core/tos_sem.c ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/tos_sem.c ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/tos_sem.c ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/tos_sem.c ****  *
   9:..//kernel/core/tos_sem.c ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/tos_sem.c ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/tos_sem.c ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/tos_sem.c ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/tos_sem.c ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/tos_sem.c ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/tos_sem.c ****  * within TencentOS.
  16:..//kernel/core/tos_sem.c ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/tos_sem.c **** 
  18:..//kernel/core/tos_sem.c **** #include "tos_k.h"
  19:..//kernel/core/tos_sem.c **** 
  20:..//kernel/core/tos_sem.c **** #if TOS_CFG_SEM_EN > 0u
  21:..//kernel/core/tos_sem.c **** 
  22:..//kernel/core/tos_sem.c **** __API__ k_err_t tos_sem_create_max(k_sem_t *sem, k_sem_cnt_t init_count, k_sem_cnt_t max_count)
  23:..//kernel/core/tos_sem.c **** {
  24:..//kernel/core/tos_sem.c ****     TOS_PTR_SANITY_CHECK(sem);
  25:..//kernel/core/tos_sem.c **** 
  26:..//kernel/core/tos_sem.c ****     sem->count      = init_count;
  27:..//kernel/core/tos_sem.c ****     sem->count_max  = max_count;
  28:..//kernel/core/tos_sem.c ****     pend_object_init(&sem->pend_obj);
  29:..//kernel/core/tos_sem.c ****     TOS_OBJ_INIT(sem, KNL_OBJ_TYPE_SEMAPHORE);
  30:..//kernel/core/tos_sem.c **** 
  31:..//kernel/core/tos_sem.c ****     return K_ERR_NONE;
  32:..//kernel/core/tos_sem.c **** }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 2


  33:..//kernel/core/tos_sem.c **** 
  34:..//kernel/core/tos_sem.c **** __API__ k_err_t tos_sem_create(k_sem_t *sem, k_sem_cnt_t init_count)
  35:..//kernel/core/tos_sem.c **** {
  36:..//kernel/core/tos_sem.c ****     return tos_sem_create_max(sem, init_count, (k_sem_cnt_t)-1);
  37:..//kernel/core/tos_sem.c **** }
  38:..//kernel/core/tos_sem.c **** 
  39:..//kernel/core/tos_sem.c **** __API__ k_err_t tos_sem_destroy(k_sem_t *sem)
  40:..//kernel/core/tos_sem.c **** {
  41:..//kernel/core/tos_sem.c ****     TOS_CPU_CPSR_ALLOC();
  42:..//kernel/core/tos_sem.c **** 
  43:..//kernel/core/tos_sem.c ****     TOS_PTR_SANITY_CHECK(sem);
  44:..//kernel/core/tos_sem.c ****     TOS_OBJ_VERIFY(sem, KNL_OBJ_TYPE_SEMAPHORE);
  45:..//kernel/core/tos_sem.c **** 
  46:..//kernel/core/tos_sem.c ****     TOS_CPU_INT_DISABLE();
  47:..//kernel/core/tos_sem.c **** 
  48:..//kernel/core/tos_sem.c ****     pend_wakeup_all(&sem->pend_obj, PEND_STATE_DESTROY);
  49:..//kernel/core/tos_sem.c **** 
  50:..//kernel/core/tos_sem.c ****     pend_object_deinit(&sem->pend_obj);
  51:..//kernel/core/tos_sem.c **** 
  52:..//kernel/core/tos_sem.c ****     TOS_OBJ_DEINIT(sem);
  53:..//kernel/core/tos_sem.c **** 
  54:..//kernel/core/tos_sem.c ****     TOS_CPU_INT_ENABLE();
  55:..//kernel/core/tos_sem.c ****     knl_sched();
  56:..//kernel/core/tos_sem.c **** 
  57:..//kernel/core/tos_sem.c ****     return K_ERR_NONE;
  58:..//kernel/core/tos_sem.c **** }
  59:..//kernel/core/tos_sem.c **** 
  60:..//kernel/core/tos_sem.c **** __STATIC__ k_err_t sem_do_post(k_sem_t *sem, opt_post_t opt)
  61:..//kernel/core/tos_sem.c **** {
  27              		.loc 1 61 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  62:..//kernel/core/tos_sem.c ****     TOS_CPU_CPSR_ALLOC();
  31              		.loc 1 62 5 view .LVU1
  63:..//kernel/core/tos_sem.c **** 
  64:..//kernel/core/tos_sem.c ****     TOS_PTR_SANITY_CHECK(sem);
  32              		.loc 1 64 5 view .LVU2
  33              		.loc 1 64 5 view .LVU3
  34 0000 78B3     		cbz	r0, .L5
  61:..//kernel/core/tos_sem.c ****     TOS_CPU_CPSR_ALLOC();
  35              		.loc 1 61 1 is_stmt 0 view .LVU4
  36 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 24
  39              		.cfi_offset 3, -24
  40              		.cfi_offset 4, -20
  41              		.cfi_offset 5, -16
  42              		.cfi_offset 6, -12
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0004 0446     		mov	r4, r0
  65:..//kernel/core/tos_sem.c ****     TOS_OBJ_VERIFY(sem, KNL_OBJ_TYPE_SEMAPHORE);
  46              		.loc 1 65 5 is_stmt 1 view .LVU5
  47              		.loc 1 65 5 view .LVU6
  48              	.LVL1:
  49              	.LBB12:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 3


  50              	.LBI12:
  51              		.file 2 "..//kernel/core/include/tos_sys.h"
   1:..//kernel/core/include/tos_sys.h **** /*----------------------------------------------------------------------------
   2:..//kernel/core/include/tos_sys.h ****  * Tencent is pleased to support the open source community by making TencentOS
   3:..//kernel/core/include/tos_sys.h ****  * available.
   4:..//kernel/core/include/tos_sys.h ****  *
   5:..//kernel/core/include/tos_sys.h ****  * Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
   6:..//kernel/core/include/tos_sys.h ****  * If you have downloaded a copy of the TencentOS binary from Tencent, please
   7:..//kernel/core/include/tos_sys.h ****  * note that the TencentOS binary is licensed under the BSD 3-Clause License.
   8:..//kernel/core/include/tos_sys.h ****  *
   9:..//kernel/core/include/tos_sys.h ****  * If you have downloaded a copy of the TencentOS source code from Tencent,
  10:..//kernel/core/include/tos_sys.h ****  * please note that TencentOS source code is licensed under the BSD 3-Clause
  11:..//kernel/core/include/tos_sys.h ****  * License, except for the third-party components listed below which are
  12:..//kernel/core/include/tos_sys.h ****  * subject to different license terms. Your integration of TencentOS into your
  13:..//kernel/core/include/tos_sys.h ****  * own projects may require compliance with the BSD 3-Clause License, as well
  14:..//kernel/core/include/tos_sys.h ****  * as the other licenses applicable to the third-party components included
  15:..//kernel/core/include/tos_sys.h ****  * within TencentOS.
  16:..//kernel/core/include/tos_sys.h ****  *---------------------------------------------------------------------------*/
  17:..//kernel/core/include/tos_sys.h **** 
  18:..//kernel/core/include/tos_sys.h **** #ifndef _TOS_SYS_H_
  19:..//kernel/core/include/tos_sys.h **** #define  _TOS_SYS_H_
  20:..//kernel/core/include/tos_sys.h **** 
  21:..//kernel/core/include/tos_sys.h **** __CDECLS_BEGIN
  22:..//kernel/core/include/tos_sys.h **** 
  23:..//kernel/core/include/tos_sys.h **** #define K_NESTING_LIMIT_IRQ             (k_nesting_t)250u
  24:..//kernel/core/include/tos_sys.h **** #define K_NESTING_LIMIT_SCHED_LOCK      (k_nesting_t)250u
  25:..//kernel/core/include/tos_sys.h **** 
  26:..//kernel/core/include/tos_sys.h **** typedef enum knl_state_en {
  27:..//kernel/core/include/tos_sys.h ****     KNL_STATE_STOPPED,
  28:..//kernel/core/include/tos_sys.h ****     KNL_STATE_RUNNING,
  29:..//kernel/core/include/tos_sys.h **** } knl_state_t;
  30:..//kernel/core/include/tos_sys.h **** 
  31:..//kernel/core/include/tos_sys.h **** // some kind of magic number, mainly for identifing whether the object is initialized, or whether u
  32:..//kernel/core/include/tos_sys.h **** typedef enum knl_obj_type_en {
  33:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_NONE                           = 0x0000,
  34:..//kernel/core/include/tos_sys.h **** 
  35:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BINARY_HEAP                    = 0xDAD0,
  36:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BITMAP                         = 0xDAD1,
  37:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_CHAR_FIFO                      = 0xDAD2,
  38:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MMBLK_POOL                     = 0xDAD3,
  39:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MSG_QUEUE                      = 0xDAD4,
  40:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_QUEUE                 = 0xDAD5,
  41:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_RING_QUEUE                     = 0xDAD6,
  42:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_STOPWATCH                      = 0xDAD7,
  43:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_TASK                           = 0xDAD8,
  44:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_TIMER                          = 0xDAD9,
  45:..//kernel/core/include/tos_sys.h **** 
  46:..//kernel/core/include/tos_sys.h ****     // ipc object
  47:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_BARRIER                        = 0x0BEE,
  48:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_COMPLETION                     = 0x1BEE,
  49:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_COUNTDOWNLATCH                 = 0x2BEE,
  50:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_EVENT                          = 0x3BEE,
  51:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MAIL_QUEUE                     = 0x4BEE,
  52:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MESSAGE_QUEUE                  = 0x5BEE,
  53:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_MUTEX                          = 0x6BEE,
  54:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_MAIL_QUEUE            = 0x7BEE,
  55:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_PRIORITY_MESSAGE_QUEUE         = 0x8BEE,
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 4


  56:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_RWLOCK                         = 0x9BEE,
  57:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_TYPE_SEMAPHORE                      = 0xABEE,
  58:..//kernel/core/include/tos_sys.h **** } knl_obj_type_t;
  59:..//kernel/core/include/tos_sys.h **** 
  60:..//kernel/core/include/tos_sys.h **** typedef enum knl_obj_alloc_type_en {
  61:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_NONE,
  62:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_STATIC,
  63:..//kernel/core/include/tos_sys.h ****     KNL_OBJ_ALLOC_TYPE_DYNAMIC,
  64:..//kernel/core/include/tos_sys.h **** } knl_obj_alloc_type_t;
  65:..//kernel/core/include/tos_sys.h **** 
  66:..//kernel/core/include/tos_sys.h **** typedef struct knl_object_st {
  67:..//kernel/core/include/tos_sys.h ****     knl_obj_alloc_type_t    alloc_type; /* is dynamic allocated(using tos_mmheap) or static memory?
  68:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_OBJECT_VERIFY_EN > 0u
  69:..//kernel/core/include/tos_sys.h ****     knl_obj_type_t          type;
  70:..//kernel/core/include/tos_sys.h **** #endif
  71:..//kernel/core/include/tos_sys.h **** } knl_obj_t;
  72:..//kernel/core/include/tos_sys.h **** 
  73:..//kernel/core/include/tos_sys.h **** /**
  74:..//kernel/core/include/tos_sys.h ****  * @brief Initialize the kernel.
  75:..//kernel/core/include/tos_sys.h ****  * initialize the tos tiny kernel.
  76:..//kernel/core/include/tos_sys.h ****  *
  77:..//kernel/core/include/tos_sys.h ****  * @attention None
  78:..//kernel/core/include/tos_sys.h ****  *
  79:..//kernel/core/include/tos_sys.h ****  * @param   None
  80:..//kernel/core/include/tos_sys.h ****  *
  81:..//kernel/core/include/tos_sys.h ****  * @return  errcode
  82:..//kernel/core/include/tos_sys.h ****  * @retval  Non-#K_ERR_NONE               return failed.
  83:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_NONE                   return successfully.
  84:..//kernel/core/include/tos_sys.h ****  */
  85:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_init(void);
  86:..//kernel/core/include/tos_sys.h **** 
  87:..//kernel/core/include/tos_sys.h **** /**
  88:..//kernel/core/include/tos_sys.h ****  * @brief Start the kernel.
  89:..//kernel/core/include/tos_sys.h ****  * get the kernel start to run, which means start the multitask scheduling.
  90:..//kernel/core/include/tos_sys.h ****  *
  91:..//kernel/core/include/tos_sys.h ****  * @attention None
  92:..//kernel/core/include/tos_sys.h ****  *
  93:..//kernel/core/include/tos_sys.h ****  * @param   None
  94:..//kernel/core/include/tos_sys.h ****  *
  95:..//kernel/core/include/tos_sys.h ****  * @return  errcode
  96:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_KNL_RUNNING            the kernel is already running.
  97:..//kernel/core/include/tos_sys.h ****  * @retval  #K_ERR_NONE                   return successfully.
  98:..//kernel/core/include/tos_sys.h ****  */
  99:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_start(void);
 100:..//kernel/core/include/tos_sys.h **** 
 101:..//kernel/core/include/tos_sys.h **** /**
 102:..//kernel/core/include/tos_sys.h ****  * @brief Get the kernel state.
 103:..//kernel/core/include/tos_sys.h ****  * whether the kernel is running.
 104:..//kernel/core/include/tos_sys.h ****  *
 105:..//kernel/core/include/tos_sys.h ****  * @attention None
 106:..//kernel/core/include/tos_sys.h ****  *
 107:..//kernel/core/include/tos_sys.h ****  * @param   None
 108:..//kernel/core/include/tos_sys.h ****  *
 109:..//kernel/core/include/tos_sys.h ****  * @return  whether the kernel is running.
 110:..//kernel/core/include/tos_sys.h ****  * @retval  Non-0                           the kernel is running.
 111:..//kernel/core/include/tos_sys.h ****  * @retval  0                               the kernel is not running.
 112:..//kernel/core/include/tos_sys.h ****  */
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 5


 113:..//kernel/core/include/tos_sys.h **** __API__ int     tos_knl_is_running(void);
 114:..//kernel/core/include/tos_sys.h **** 
 115:..//kernel/core/include/tos_sys.h **** /**
 116:..//kernel/core/include/tos_sys.h ****  * @brief Kernel enter the interrupt.
 117:..//kernel/core/include/tos_sys.h ****  * this function should be called in the entrance of a interrupt handler.
 118:..//kernel/core/include/tos_sys.h ****  *
 119:..//kernel/core/include/tos_sys.h ****  * @attention None
 120:..//kernel/core/include/tos_sys.h ****  *
 121:..//kernel/core/include/tos_sys.h ****  * @param   None
 122:..//kernel/core/include/tos_sys.h ****  *
 123:..//kernel/core/include/tos_sys.h ****  * @return  None
 124:..//kernel/core/include/tos_sys.h ****  */
 125:..//kernel/core/include/tos_sys.h **** __API__ void    tos_knl_irq_enter(void);
 126:..//kernel/core/include/tos_sys.h **** 
 127:..//kernel/core/include/tos_sys.h **** /**
 128:..//kernel/core/include/tos_sys.h ****  * @brief Kernel exit the interrupt.
 129:..//kernel/core/include/tos_sys.h ****  * this function should be called in the exit of a interrupt handler.
 130:..//kernel/core/include/tos_sys.h ****  *
 131:..//kernel/core/include/tos_sys.h ****  * @attention None
 132:..//kernel/core/include/tos_sys.h ****  *
 133:..//kernel/core/include/tos_sys.h ****  * @param   None
 134:..//kernel/core/include/tos_sys.h ****  *
 135:..//kernel/core/include/tos_sys.h ****  * @return  None
 136:..//kernel/core/include/tos_sys.h ****  */
 137:..//kernel/core/include/tos_sys.h **** __API__ void    tos_knl_irq_leave(void);
 138:..//kernel/core/include/tos_sys.h **** 
 139:..//kernel/core/include/tos_sys.h **** /**
 140:..//kernel/core/include/tos_sys.h ****  * @brief Lock the scheduler.
 141:..//kernel/core/include/tos_sys.h ****  * prevent the kernel from performing task schedule.
 142:..//kernel/core/include/tos_sys.h ****  *
 143:..//kernel/core/include/tos_sys.h ****  * @attention None
 144:..//kernel/core/include/tos_sys.h ****  *
 145:..//kernel/core/include/tos_sys.h ****  * @param   None
 146:..//kernel/core/include/tos_sys.h ****  *
 147:..//kernel/core/include/tos_sys.h ****  * @return  errcode
 148:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_KNL_NOT_RUNNING         the kernel is not running.
 149:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_LOCK_NESTING_OVERFLOW   the schedule lock nesting is overflow.
 150:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_NONE                    return successfully.
 151:..//kernel/core/include/tos_sys.h ****  */
 152:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_sched_lock(void);
 153:..//kernel/core/include/tos_sys.h **** 
 154:..//kernel/core/include/tos_sys.h **** /**
 155:..//kernel/core/include/tos_sys.h ****  * @brief Unlock the scheduler.
 156:..//kernel/core/include/tos_sys.h ****  * re-enable the task schedule.
 157:..//kernel/core/include/tos_sys.h ****  *
 158:..//kernel/core/include/tos_sys.h ****  * @attention None
 159:..//kernel/core/include/tos_sys.h ****  *
 160:..//kernel/core/include/tos_sys.h ****  * @param   None
 161:..//kernel/core/include/tos_sys.h ****  *
 162:..//kernel/core/include/tos_sys.h ****  * @return  errcode
 163:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_KNL_NOT_RUNNING         the kernel is not running.
 164:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_SCHED_NOT_LOCKED        the scheduler is not locked.
 165:..//kernel/core/include/tos_sys.h ****  * @retval  K_ERR_NONE                    return successfully.
 166:..//kernel/core/include/tos_sys.h ****  */
 167:..//kernel/core/include/tos_sys.h **** __API__ k_err_t tos_knl_sched_unlock(void);
 168:..//kernel/core/include/tos_sys.h **** 
 169:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_TICKLESS_EN > 0u
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 6


 170:..//kernel/core/include/tos_sys.h **** __KNL__ k_tick_t knl_next_expires_get(void);
 171:..//kernel/core/include/tos_sys.h **** #endif
 172:..//kernel/core/include/tos_sys.h **** 
 173:..//kernel/core/include/tos_sys.h **** __KNL__ void    knl_sched(void);
 174:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_sched_locked(void);
 175:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_inirq(void);
 176:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_idle(k_task_t *task);
 177:..//kernel/core/include/tos_sys.h **** __KNL__ int     knl_is_self(k_task_t *task);
 178:..//kernel/core/include/tos_sys.h **** __KNL__ k_err_t knl_idle_init(void);
 179:..//kernel/core/include/tos_sys.h **** 
 180:..//kernel/core/include/tos_sys.h **** #if TOS_CFG_OBJECT_VERIFY_EN > 0u
 181:..//kernel/core/include/tos_sys.h **** 
 182:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ int knl_object_verify(knl_obj_t *knl_obj, knl_obj_type_t type)
  52              		.loc 2 182 31 view .LVU7
  53              	.LBB13:
 183:..//kernel/core/include/tos_sys.h **** {
 184:..//kernel/core/include/tos_sys.h ****     return knl_obj->type == type;
  54              		.loc 2 184 5 view .LVU8
  55              		.loc 2 184 19 is_stmt 0 view .LVU9
  56 0006 4088     		ldrh	r0, [r0, #2]
  57              	.LVL2:
  58              		.loc 2 184 19 view .LVU10
  59              	.LBE13:
  60              	.LBE12:
  61              		.loc 1 65 5 view .LVU11
  62 0008 4AF6EE32 		movw	r2, #44014
  63 000c 9042     		cmp	r0, r2
  64 000e 02D0     		beq	.L11
  65 0010 40F24D40 		movw	r0, #1101
  66              	.LVL3:
  67              	.L2:
  66:..//kernel/core/tos_sem.c **** 
  67:..//kernel/core/tos_sem.c ****     TOS_CPU_INT_DISABLE();
  68:..//kernel/core/tos_sem.c **** 
  69:..//kernel/core/tos_sem.c ****     if (sem->count == sem->count_max) {
  70:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
  71:..//kernel/core/tos_sem.c ****         return K_ERR_SEM_OVERFLOW;
  72:..//kernel/core/tos_sem.c ****     }
  73:..//kernel/core/tos_sem.c **** 
  74:..//kernel/core/tos_sem.c ****     if (pend_is_nopending(&sem->pend_obj)) {
  75:..//kernel/core/tos_sem.c ****         ++sem->count;
  76:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
  77:..//kernel/core/tos_sem.c ****         return K_ERR_NONE;
  78:..//kernel/core/tos_sem.c ****     }
  79:..//kernel/core/tos_sem.c **** 
  80:..//kernel/core/tos_sem.c ****     pend_wakeup(&sem->pend_obj, PEND_STATE_POST, opt);
  81:..//kernel/core/tos_sem.c **** 
  82:..//kernel/core/tos_sem.c ****     TOS_CPU_INT_ENABLE();
  83:..//kernel/core/tos_sem.c ****     knl_sched();
  84:..//kernel/core/tos_sem.c **** 
  85:..//kernel/core/tos_sem.c ****     return K_ERR_NONE;
  86:..//kernel/core/tos_sem.c **** }
  68              		.loc 1 86 1 view .LVU12
  69 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  70              	.LVL4:
  71              	.L11:
  72              		.loc 1 86 1 view .LVU13
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 7


  73 0016 0D46     		mov	r5, r1
  67:..//kernel/core/tos_sem.c **** 
  74              		.loc 1 67 5 is_stmt 1 view .LVU14
  67:..//kernel/core/tos_sem.c **** 
  75              		.loc 1 67 5 view .LVU15
  76 0018 FFF7FEFF 		bl	tos_cpu_cpsr_save
  77              	.LVL5:
  67:..//kernel/core/tos_sem.c **** 
  78              		.loc 1 67 5 is_stmt 0 view .LVU16
  79 001c 0746     		mov	r7, r0
  80              	.LVL6:
  69:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
  81              		.loc 1 69 5 is_stmt 1 view .LVU17
  69:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
  82              		.loc 1 69 12 is_stmt 0 view .LVU18
  83 001e A289     		ldrh	r2, [r4, #12]
  69:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
  84              		.loc 1 69 26 view .LVU19
  85 0020 E389     		ldrh	r3, [r4, #14]
  69:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
  86              		.loc 1 69 8 view .LVU20
  87 0022 9A42     		cmp	r2, r3
  88 0024 10D0     		beq	.L12
  74:..//kernel/core/tos_sem.c ****         ++sem->count;
  89              		.loc 1 74 5 is_stmt 1 view .LVU21
  74:..//kernel/core/tos_sem.c ****         ++sem->count;
  90              		.loc 1 74 9 is_stmt 0 view .LVU22
  91 0026 261D     		adds	r6, r4, #4
  92 0028 3046     		mov	r0, r6
  93              	.LVL7:
  74:..//kernel/core/tos_sem.c ****         ++sem->count;
  94              		.loc 1 74 9 view .LVU23
  95 002a FFF7FEFF 		bl	pend_is_nopending
  96              	.LVL8:
  74:..//kernel/core/tos_sem.c ****         ++sem->count;
  97              		.loc 1 74 8 view .LVU24
  98 002e 80B9     		cbnz	r0, .L13
  80:..//kernel/core/tos_sem.c **** 
  99              		.loc 1 80 5 is_stmt 1 view .LVU25
 100 0030 2A46     		mov	r2, r5
 101 0032 0121     		movs	r1, #1
 102 0034 3046     		mov	r0, r6
 103 0036 FFF7FEFF 		bl	pend_wakeup
 104              	.LVL9:
  82:..//kernel/core/tos_sem.c ****     knl_sched();
 105              		.loc 1 82 5 view .LVU26
  82:..//kernel/core/tos_sem.c ****     knl_sched();
 106              		.loc 1 82 5 view .LVU27
 107 003a 3846     		mov	r0, r7
 108 003c FFF7FEFF 		bl	tos_cpu_cpsr_restore
 109              	.LVL10:
  83:..//kernel/core/tos_sem.c **** 
 110              		.loc 1 83 5 view .LVU28
 111 0040 FFF7FEFF 		bl	knl_sched
 112              	.LVL11:
  85:..//kernel/core/tos_sem.c **** }
 113              		.loc 1 85 5 view .LVU29
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 8


  85:..//kernel/core/tos_sem.c **** }
 114              		.loc 1 85 12 is_stmt 0 view .LVU30
 115 0044 0020     		movs	r0, #0
 116 0046 E5E7     		b	.L2
 117              	.LVL12:
 118              	.L12:
  70:..//kernel/core/tos_sem.c ****         return K_ERR_SEM_OVERFLOW;
 119              		.loc 1 70 9 is_stmt 1 view .LVU31
  70:..//kernel/core/tos_sem.c ****         return K_ERR_SEM_OVERFLOW;
 120              		.loc 1 70 9 view .LVU32
 121 0048 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 122              	.LVL13:
  71:..//kernel/core/tos_sem.c ****     }
 123              		.loc 1 71 9 view .LVU33
  71:..//kernel/core/tos_sem.c ****     }
 124              		.loc 1 71 16 is_stmt 0 view .LVU34
 125 004c 4FF4E160 		mov	r0, #1800
 126 0050 E0E7     		b	.L2
 127              	.L13:
  75:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 128              		.loc 1 75 9 is_stmt 1 view .LVU35
  75:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 129              		.loc 1 75 14 is_stmt 0 view .LVU36
 130 0052 A389     		ldrh	r3, [r4, #12]
  75:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 131              		.loc 1 75 9 view .LVU37
 132 0054 0133     		adds	r3, r3, #1
 133 0056 A381     		strh	r3, [r4, #12]	@ movhi
  76:..//kernel/core/tos_sem.c ****         return K_ERR_NONE;
 134              		.loc 1 76 9 is_stmt 1 view .LVU38
  76:..//kernel/core/tos_sem.c ****         return K_ERR_NONE;
 135              		.loc 1 76 9 view .LVU39
 136 0058 3846     		mov	r0, r7
 137 005a FFF7FEFF 		bl	tos_cpu_cpsr_restore
 138              	.LVL14:
  77:..//kernel/core/tos_sem.c ****     }
 139              		.loc 1 77 9 view .LVU40
  77:..//kernel/core/tos_sem.c ****     }
 140              		.loc 1 77 16 is_stmt 0 view .LVU41
 141 005e 0020     		movs	r0, #0
 142 0060 D8E7     		b	.L2
 143              	.LVL15:
 144              	.L5:
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 0
 147              		.cfi_restore 3
 148              		.cfi_restore 4
 149              		.cfi_restore 5
 150              		.cfi_restore 6
 151              		.cfi_restore 7
 152              		.cfi_restore 14
  64:..//kernel/core/tos_sem.c ****     TOS_OBJ_VERIFY(sem, KNL_OBJ_TYPE_SEMAPHORE);
 153              		.loc 1 64 5 view .LVU42
 154 0062 40F24C40 		movw	r0, #1100
 155              	.LVL16:
 156              		.loc 1 86 1 view .LVU43
 157 0066 7047     		bx	lr
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 9


 158              		.cfi_endproc
 159              	.LFE113:
 161              		.section	.text.tos_sem_create_max,"ax",%progbits
 162              		.align	1
 163              		.global	tos_sem_create_max
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu softvfp
 169              	tos_sem_create_max:
 170              	.LVL17:
 171              	.LFB110:
  23:..//kernel/core/tos_sem.c ****     TOS_PTR_SANITY_CHECK(sem);
 172              		.loc 1 23 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
  24:..//kernel/core/tos_sem.c **** 
 176              		.loc 1 24 5 view .LVU45
  24:..//kernel/core/tos_sem.c **** 
 177              		.loc 1 24 5 view .LVU46
 178 0000 58B1     		cbz	r0, .L16
  23:..//kernel/core/tos_sem.c ****     TOS_PTR_SANITY_CHECK(sem);
 179              		.loc 1 23 1 is_stmt 0 view .LVU47
 180 0002 10B5     		push	{r4, lr}
 181              	.LCFI2:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 185 0004 0446     		mov	r4, r0
  26:..//kernel/core/tos_sem.c ****     sem->count_max  = max_count;
 186              		.loc 1 26 5 is_stmt 1 view .LVU48
  26:..//kernel/core/tos_sem.c ****     sem->count_max  = max_count;
 187              		.loc 1 26 21 is_stmt 0 view .LVU49
 188 0006 8181     		strh	r1, [r0, #12]	@ movhi
  27:..//kernel/core/tos_sem.c ****     pend_object_init(&sem->pend_obj);
 189              		.loc 1 27 5 is_stmt 1 view .LVU50
  27:..//kernel/core/tos_sem.c ****     pend_object_init(&sem->pend_obj);
 190              		.loc 1 27 21 is_stmt 0 view .LVU51
 191 0008 C281     		strh	r2, [r0, #14]	@ movhi
  28:..//kernel/core/tos_sem.c ****     TOS_OBJ_INIT(sem, KNL_OBJ_TYPE_SEMAPHORE);
 192              		.loc 1 28 5 is_stmt 1 view .LVU52
 193 000a 0430     		adds	r0, r0, #4
 194              	.LVL18:
  28:..//kernel/core/tos_sem.c ****     TOS_OBJ_INIT(sem, KNL_OBJ_TYPE_SEMAPHORE);
 195              		.loc 1 28 5 is_stmt 0 view .LVU53
 196 000c FFF7FEFF 		bl	pend_object_init
 197              	.LVL19:
  29:..//kernel/core/tos_sem.c **** 
 198              		.loc 1 29 5 is_stmt 1 view .LVU54
 199              	.LBB14:
 200              	.LBI14:
 185:..//kernel/core/include/tos_sys.h **** }
 186:..//kernel/core/include/tos_sys.h **** 
 187:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_init(knl_obj_t *knl_obj, knl_obj_type_t type)
 201              		.loc 2 187 32 view .LVU55
 202              	.LBB15:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 10


 188:..//kernel/core/include/tos_sys.h **** {
 189:..//kernel/core/include/tos_sys.h ****     knl_obj->type = type;
 203              		.loc 2 189 5 view .LVU56
 204              		.loc 2 189 19 is_stmt 0 view .LVU57
 205 0010 4AF6EE33 		movw	r3, #44014
 206 0014 6380     		strh	r3, [r4, #2]	@ movhi
 207              	.LVL20:
 208              		.loc 2 189 19 view .LVU58
 209              	.LBE15:
 210              	.LBE14:
  31:..//kernel/core/tos_sem.c **** }
 211              		.loc 1 31 5 is_stmt 1 view .LVU59
  31:..//kernel/core/tos_sem.c **** }
 212              		.loc 1 31 12 is_stmt 0 view .LVU60
 213 0016 0020     		movs	r0, #0
  32:..//kernel/core/tos_sem.c **** 
 214              		.loc 1 32 1 view .LVU61
 215 0018 10BD     		pop	{r4, pc}
 216              	.LVL21:
 217              	.L16:
 218              	.LCFI3:
 219              		.cfi_def_cfa_offset 0
 220              		.cfi_restore 4
 221              		.cfi_restore 14
  24:..//kernel/core/tos_sem.c **** 
 222              		.loc 1 24 5 view .LVU62
 223 001a 40F24C40 		movw	r0, #1100
 224              	.LVL22:
  32:..//kernel/core/tos_sem.c **** 
 225              		.loc 1 32 1 view .LVU63
 226 001e 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE110:
 230              		.section	.text.tos_sem_create,"ax",%progbits
 231              		.align	1
 232              		.global	tos_sem_create
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu softvfp
 238              	tos_sem_create:
 239              	.LVL23:
 240              	.LFB111:
  35:..//kernel/core/tos_sem.c ****     return tos_sem_create_max(sem, init_count, (k_sem_cnt_t)-1);
 241              		.loc 1 35 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
  35:..//kernel/core/tos_sem.c ****     return tos_sem_create_max(sem, init_count, (k_sem_cnt_t)-1);
 245              		.loc 1 35 1 is_stmt 0 view .LVU65
 246 0000 08B5     		push	{r3, lr}
 247              	.LCFI4:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 3, -8
 250              		.cfi_offset 14, -4
  36:..//kernel/core/tos_sem.c **** }
 251              		.loc 1 36 5 is_stmt 1 view .LVU66
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 11


  36:..//kernel/core/tos_sem.c **** }
 252              		.loc 1 36 12 is_stmt 0 view .LVU67
 253 0002 4FF6FF72 		movw	r2, #65535
 254 0006 FFF7FEFF 		bl	tos_sem_create_max
 255              	.LVL24:
  37:..//kernel/core/tos_sem.c **** 
 256              		.loc 1 37 1 view .LVU68
 257 000a 08BD     		pop	{r3, pc}
 258              		.cfi_endproc
 259              	.LFE111:
 261              		.section	.text.tos_sem_destroy,"ax",%progbits
 262              		.align	1
 263              		.global	tos_sem_destroy
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu softvfp
 269              	tos_sem_destroy:
 270              	.LVL25:
 271              	.LFB112:
  40:..//kernel/core/tos_sem.c ****     TOS_CPU_CPSR_ALLOC();
 272              		.loc 1 40 1 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
  41:..//kernel/core/tos_sem.c **** 
 276              		.loc 1 41 5 view .LVU70
  43:..//kernel/core/tos_sem.c ****     TOS_OBJ_VERIFY(sem, KNL_OBJ_TYPE_SEMAPHORE);
 277              		.loc 1 43 5 view .LVU71
  43:..//kernel/core/tos_sem.c ****     TOS_OBJ_VERIFY(sem, KNL_OBJ_TYPE_SEMAPHORE);
 278              		.loc 1 43 5 view .LVU72
 279 0000 E8B1     		cbz	r0, .L25
  40:..//kernel/core/tos_sem.c ****     TOS_CPU_CPSR_ALLOC();
 280              		.loc 1 40 1 is_stmt 0 view .LVU73
 281 0002 70B5     		push	{r4, r5, r6, lr}
 282              	.LCFI5:
 283              		.cfi_def_cfa_offset 16
 284              		.cfi_offset 4, -16
 285              		.cfi_offset 5, -12
 286              		.cfi_offset 6, -8
 287              		.cfi_offset 14, -4
 288 0004 0446     		mov	r4, r0
  44:..//kernel/core/tos_sem.c **** 
 289              		.loc 1 44 5 is_stmt 1 view .LVU74
  44:..//kernel/core/tos_sem.c **** 
 290              		.loc 1 44 5 view .LVU75
 291              	.LVL26:
 292              	.LBB16:
 293              	.LBI16:
 182:..//kernel/core/include/tos_sys.h **** {
 294              		.loc 2 182 31 view .LVU76
 295              	.LBB17:
 184:..//kernel/core/include/tos_sys.h **** }
 296              		.loc 2 184 5 view .LVU77
 184:..//kernel/core/include/tos_sys.h **** }
 297              		.loc 2 184 19 is_stmt 0 view .LVU78
 298 0006 4188     		ldrh	r1, [r0, #2]
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 12


 299              	.LVL27:
 184:..//kernel/core/include/tos_sys.h **** }
 300              		.loc 2 184 19 view .LVU79
 301              	.LBE17:
 302              	.LBE16:
  44:..//kernel/core/tos_sem.c **** 
 303              		.loc 1 44 5 view .LVU80
 304 0008 4AF6EE32 		movw	r2, #44014
 305 000c 9142     		cmp	r1, r2
 306 000e 02D0     		beq	.L31
 307 0010 40F24D40 		movw	r0, #1101
 308              	.LVL28:
 309              	.L24:
  58:..//kernel/core/tos_sem.c **** 
 310              		.loc 1 58 1 view .LVU81
 311 0014 70BD     		pop	{r4, r5, r6, pc}
 312              	.LVL29:
 313              	.L31:
  46:..//kernel/core/tos_sem.c **** 
 314              		.loc 1 46 5 is_stmt 1 view .LVU82
  46:..//kernel/core/tos_sem.c **** 
 315              		.loc 1 46 5 view .LVU83
 316 0016 FFF7FEFF 		bl	tos_cpu_cpsr_save
 317              	.LVL30:
  46:..//kernel/core/tos_sem.c **** 
 318              		.loc 1 46 5 is_stmt 0 view .LVU84
 319 001a 0646     		mov	r6, r0
 320              	.LVL31:
  48:..//kernel/core/tos_sem.c **** 
 321              		.loc 1 48 5 is_stmt 1 view .LVU85
 322 001c 251D     		adds	r5, r4, #4
 323 001e 0321     		movs	r1, #3
 324 0020 2846     		mov	r0, r5
 325              	.LVL32:
  48:..//kernel/core/tos_sem.c **** 
 326              		.loc 1 48 5 is_stmt 0 view .LVU86
 327 0022 FFF7FEFF 		bl	pend_wakeup_all
 328              	.LVL33:
  50:..//kernel/core/tos_sem.c **** 
 329              		.loc 1 50 5 is_stmt 1 view .LVU87
 330 0026 2846     		mov	r0, r5
 331 0028 FFF7FEFF 		bl	pend_object_deinit
 332              	.LVL34:
  52:..//kernel/core/tos_sem.c **** 
 333              		.loc 1 52 5 view .LVU88
 334              	.LBB18:
 335              	.LBI18:
 190:..//kernel/core/include/tos_sys.h **** }
 191:..//kernel/core/include/tos_sys.h **** 
 192:..//kernel/core/include/tos_sys.h **** __KNL__ __STATIC_INLINE__ void knl_object_deinit(knl_obj_t *knl_obj)
 336              		.loc 2 192 32 view .LVU89
 337              	.LBB19:
 193:..//kernel/core/include/tos_sys.h **** {
 194:..//kernel/core/include/tos_sys.h ****     knl_obj->type = KNL_OBJ_TYPE_NONE;
 338              		.loc 2 194 5 view .LVU90
 339              		.loc 2 194 19 is_stmt 0 view .LVU91
 340 002c 0025     		movs	r5, #0
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 13


 341 002e 6580     		strh	r5, [r4, #2]	@ movhi
 342              	.LVL35:
 343              		.loc 2 194 19 view .LVU92
 344              	.LBE19:
 345              	.LBE18:
  54:..//kernel/core/tos_sem.c ****     knl_sched();
 346              		.loc 1 54 5 is_stmt 1 view .LVU93
  54:..//kernel/core/tos_sem.c ****     knl_sched();
 347              		.loc 1 54 5 view .LVU94
 348 0030 3046     		mov	r0, r6
 349 0032 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 350              	.LVL36:
  55:..//kernel/core/tos_sem.c **** 
 351              		.loc 1 55 5 view .LVU95
 352 0036 FFF7FEFF 		bl	knl_sched
 353              	.LVL37:
  57:..//kernel/core/tos_sem.c **** }
 354              		.loc 1 57 5 view .LVU96
  57:..//kernel/core/tos_sem.c **** }
 355              		.loc 1 57 12 is_stmt 0 view .LVU97
 356 003a 2846     		mov	r0, r5
 357 003c EAE7     		b	.L24
 358              	.LVL38:
 359              	.L25:
 360              	.LCFI6:
 361              		.cfi_def_cfa_offset 0
 362              		.cfi_restore 4
 363              		.cfi_restore 5
 364              		.cfi_restore 6
 365              		.cfi_restore 14
  43:..//kernel/core/tos_sem.c ****     TOS_OBJ_VERIFY(sem, KNL_OBJ_TYPE_SEMAPHORE);
 366              		.loc 1 43 5 view .LVU98
 367 003e 40F24C40 		movw	r0, #1100
 368              	.LVL39:
  58:..//kernel/core/tos_sem.c **** 
 369              		.loc 1 58 1 view .LVU99
 370 0042 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE112:
 374              		.section	.text.tos_sem_post,"ax",%progbits
 375              		.align	1
 376              		.global	tos_sem_post
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 380              		.fpu softvfp
 382              	tos_sem_post:
 383              	.LVL40:
 384              	.LFB114:
  87:..//kernel/core/tos_sem.c **** 
  88:..//kernel/core/tos_sem.c **** __API__ k_err_t tos_sem_post(k_sem_t *sem)
  89:..//kernel/core/tos_sem.c **** {
 385              		.loc 1 89 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		.loc 1 89 1 is_stmt 0 view .LVU101
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 14


 390 0000 08B5     		push	{r3, lr}
 391              	.LCFI7:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 3, -8
 394              		.cfi_offset 14, -4
  90:..//kernel/core/tos_sem.c ****     return sem_do_post(sem, OPT_POST_ONE);
 395              		.loc 1 90 5 is_stmt 1 view .LVU102
 396              		.loc 1 90 12 is_stmt 0 view .LVU103
 397 0002 0021     		movs	r1, #0
 398 0004 FFF7FEFF 		bl	sem_do_post
 399              	.LVL41:
  91:..//kernel/core/tos_sem.c **** }
 400              		.loc 1 91 1 view .LVU104
 401 0008 08BD     		pop	{r3, pc}
 402              		.cfi_endproc
 403              	.LFE114:
 405              		.section	.text.tos_sem_post_all,"ax",%progbits
 406              		.align	1
 407              		.global	tos_sem_post_all
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu softvfp
 413              	tos_sem_post_all:
 414              	.LVL42:
 415              	.LFB115:
  92:..//kernel/core/tos_sem.c **** 
  93:..//kernel/core/tos_sem.c **** __API__ k_err_t tos_sem_post_all(k_sem_t *sem)
  94:..//kernel/core/tos_sem.c **** {
 416              		.loc 1 94 1 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		.loc 1 94 1 is_stmt 0 view .LVU106
 421 0000 08B5     		push	{r3, lr}
 422              	.LCFI8:
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
  95:..//kernel/core/tos_sem.c ****     return sem_do_post(sem, OPT_POST_ALL);
 426              		.loc 1 95 5 is_stmt 1 view .LVU107
 427              		.loc 1 95 12 is_stmt 0 view .LVU108
 428 0002 0121     		movs	r1, #1
 429 0004 FFF7FEFF 		bl	sem_do_post
 430              	.LVL43:
  96:..//kernel/core/tos_sem.c **** }
 431              		.loc 1 96 1 view .LVU109
 432 0008 08BD     		pop	{r3, pc}
 433              		.cfi_endproc
 434              	.LFE115:
 436              		.section	.text.tos_sem_pend,"ax",%progbits
 437              		.align	1
 438              		.global	tos_sem_pend
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu softvfp
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 15


 444              	tos_sem_pend:
 445              	.LVL44:
 446              	.LFB116:
  97:..//kernel/core/tos_sem.c **** 
  98:..//kernel/core/tos_sem.c **** __API__ k_err_t tos_sem_pend(k_sem_t *sem, k_tick_t timeout)
  99:..//kernel/core/tos_sem.c **** {
 447              		.loc 1 99 1 is_stmt 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		.loc 1 99 1 is_stmt 0 view .LVU111
 452 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 453              	.LCFI9:
 454              		.cfi_def_cfa_offset 24
 455              		.cfi_offset 4, -24
 456              		.cfi_offset 5, -20
 457              		.cfi_offset 6, -16
 458              		.cfi_offset 7, -12
 459              		.cfi_offset 8, -8
 460              		.cfi_offset 14, -4
 461 0004 0446     		mov	r4, r0
 462 0006 1646     		mov	r6, r2
 463 0008 1F46     		mov	r7, r3
 100:..//kernel/core/tos_sem.c ****     TOS_CPU_CPSR_ALLOC();
 464              		.loc 1 100 5 is_stmt 1 view .LVU112
 465              	.LVL45:
 101:..//kernel/core/tos_sem.c **** 
 102:..//kernel/core/tos_sem.c ****     TOS_IN_IRQ_CHECK();
 466              		.loc 1 102 5 view .LVU113
 467              		.loc 1 102 5 view .LVU114
 468 000a FFF7FEFF 		bl	knl_is_inirq
 469              	.LVL46:
 470              		.loc 1 102 5 is_stmt 0 view .LVU115
 471 000e D0BB     		cbnz	r0, .L41
 103:..//kernel/core/tos_sem.c ****     TOS_PTR_SANITY_CHECK(sem);
 472              		.loc 1 103 5 is_stmt 1 view .LVU116
 473              		.loc 1 103 5 view .LVU117
 474 0010 E4B3     		cbz	r4, .L42
 104:..//kernel/core/tos_sem.c ****     TOS_OBJ_VERIFY(sem, KNL_OBJ_TYPE_SEMAPHORE);
 475              		.loc 1 104 5 view .LVU118
 476              		.loc 1 104 5 view .LVU119
 477              	.LVL47:
 478              	.LBB20:
 479              	.LBI20:
 182:..//kernel/core/include/tos_sys.h **** {
 480              		.loc 2 182 31 view .LVU120
 481              	.LBB21:
 184:..//kernel/core/include/tos_sys.h **** }
 482              		.loc 2 184 5 view .LVU121
 184:..//kernel/core/include/tos_sys.h **** }
 483              		.loc 2 184 19 is_stmt 0 view .LVU122
 484 0012 6288     		ldrh	r2, [r4, #2]
 485              	.LVL48:
 184:..//kernel/core/include/tos_sys.h **** }
 486              		.loc 2 184 19 view .LVU123
 487              	.LBE21:
 488              	.LBE20:
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 16


 489              		.loc 1 104 5 view .LVU124
 490 0014 4AF6EE33 		movw	r3, #44014
 491 0018 9A42     		cmp	r2, r3
 492 001a 03D0     		beq	.L45
 493 001c 40F24D40 		movw	r0, #1101
 494              	.LVL49:
 495              	.L37:
 105:..//kernel/core/tos_sem.c **** 
 106:..//kernel/core/tos_sem.c ****     TOS_CPU_INT_DISABLE();
 107:..//kernel/core/tos_sem.c **** 
 108:..//kernel/core/tos_sem.c ****     if (sem->count > (k_sem_cnt_t)0u) {
 109:..//kernel/core/tos_sem.c ****         --sem->count;
 110:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 111:..//kernel/core/tos_sem.c ****         return K_ERR_NONE;
 112:..//kernel/core/tos_sem.c ****     }
 113:..//kernel/core/tos_sem.c **** 
 114:..//kernel/core/tos_sem.c ****     if (timeout == TOS_TIME_NOWAIT) { // no wait, return immediately
 115:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 116:..//kernel/core/tos_sem.c ****         return K_ERR_PEND_NOWAIT;
 117:..//kernel/core/tos_sem.c ****     }
 118:..//kernel/core/tos_sem.c **** 
 119:..//kernel/core/tos_sem.c ****     if (knl_is_sched_locked()) {
 120:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 121:..//kernel/core/tos_sem.c ****         return K_ERR_PEND_SCHED_LOCKED;
 122:..//kernel/core/tos_sem.c ****     }
 123:..//kernel/core/tos_sem.c **** 
 124:..//kernel/core/tos_sem.c ****     pend_task_block(k_curr_task, &sem->pend_obj, timeout);
 125:..//kernel/core/tos_sem.c **** 
 126:..//kernel/core/tos_sem.c ****     TOS_CPU_INT_ENABLE();
 127:..//kernel/core/tos_sem.c ****     knl_sched();
 128:..//kernel/core/tos_sem.c **** 
 129:..//kernel/core/tos_sem.c ****     return pend_state2errno(k_curr_task->pend_state);
 130:..//kernel/core/tos_sem.c **** }
 496              		.loc 1 130 1 view .LVU125
 497 0020 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 498              	.LVL50:
 499              	.L45:
 106:..//kernel/core/tos_sem.c **** 
 500              		.loc 1 106 5 is_stmt 1 view .LVU126
 106:..//kernel/core/tos_sem.c **** 
 501              		.loc 1 106 5 view .LVU127
 502 0024 FFF7FEFF 		bl	tos_cpu_cpsr_save
 503              	.LVL51:
 504 0028 0546     		mov	r5, r0
 505              	.LVL52:
 108:..//kernel/core/tos_sem.c ****         --sem->count;
 506              		.loc 1 108 5 view .LVU128
 108:..//kernel/core/tos_sem.c ****         --sem->count;
 507              		.loc 1 108 12 is_stmt 0 view .LVU129
 508 002a A389     		ldrh	r3, [r4, #12]
 108:..//kernel/core/tos_sem.c ****         --sem->count;
 509              		.loc 1 108 8 view .LVU130
 510 002c D3B9     		cbnz	r3, .L46
 114:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 511              		.loc 1 114 5 is_stmt 1 view .LVU131
 114:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 512              		.loc 1 114 8 is_stmt 0 view .LVU132
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 17


 513 002e 56EA0703 		orrs	r3, r6, r7
 514 0032 1DD0     		beq	.L47
 119:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 515              		.loc 1 119 5 is_stmt 1 view .LVU133
 119:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 516              		.loc 1 119 9 is_stmt 0 view .LVU134
 517 0034 FFF7FEFF 		bl	knl_is_sched_locked
 518              	.LVL53:
 119:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 519              		.loc 1 119 8 view .LVU135
 520 0038 F8B9     		cbnz	r0, .L48
 124:..//kernel/core/tos_sem.c **** 
 521              		.loc 1 124 5 is_stmt 1 view .LVU136
 522 003a DFF85880 		ldr	r8, .L49
 523 003e 3246     		mov	r2, r6
 524 0040 3B46     		mov	r3, r7
 525 0042 211D     		adds	r1, r4, #4
 526 0044 D8F80000 		ldr	r0, [r8]
 527 0048 FFF7FEFF 		bl	pend_task_block
 528              	.LVL54:
 126:..//kernel/core/tos_sem.c ****     knl_sched();
 529              		.loc 1 126 5 view .LVU137
 126:..//kernel/core/tos_sem.c ****     knl_sched();
 530              		.loc 1 126 5 view .LVU138
 531 004c 2846     		mov	r0, r5
 532 004e FFF7FEFF 		bl	tos_cpu_cpsr_restore
 533              	.LVL55:
 127:..//kernel/core/tos_sem.c **** 
 534              		.loc 1 127 5 view .LVU139
 535 0052 FFF7FEFF 		bl	knl_sched
 536              	.LVL56:
 129:..//kernel/core/tos_sem.c **** }
 537              		.loc 1 129 5 view .LVU140
 129:..//kernel/core/tos_sem.c **** }
 538              		.loc 1 129 40 is_stmt 0 view .LVU141
 539 0056 D8F80030 		ldr	r3, [r8]
 129:..//kernel/core/tos_sem.c **** }
 540              		.loc 1 129 12 view .LVU142
 541 005a 93F86800 		ldrb	r0, [r3, #104]	@ zero_extendqisi2
 542 005e FFF7FEFF 		bl	pend_state2errno
 543              	.LVL57:
 544 0062 DDE7     		b	.L37
 545              	.LVL58:
 546              	.L46:
 109:..//kernel/core/tos_sem.c ****         TOS_CPU_INT_ENABLE();
 547              		.loc 1 109 9 is_stmt 1 view .LVU143
 548 0064 013B     		subs	r3, r3, #1
 549 0066 A381     		strh	r3, [r4, #12]	@ movhi
 110:..//kernel/core/tos_sem.c ****         return K_ERR_NONE;
 550              		.loc 1 110 9 view .LVU144
 110:..//kernel/core/tos_sem.c ****         return K_ERR_NONE;
 551              		.loc 1 110 9 view .LVU145
 552 0068 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 553              	.LVL59:
 111:..//kernel/core/tos_sem.c ****     }
 554              		.loc 1 111 9 view .LVU146
 111:..//kernel/core/tos_sem.c ****     }
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 18


 555              		.loc 1 111 16 is_stmt 0 view .LVU147
 556 006c 0020     		movs	r0, #0
 557 006e D7E7     		b	.L37
 558              	.LVL60:
 559              	.L47:
 115:..//kernel/core/tos_sem.c ****         return K_ERR_PEND_NOWAIT;
 560              		.loc 1 115 9 is_stmt 1 view .LVU148
 115:..//kernel/core/tos_sem.c ****         return K_ERR_PEND_NOWAIT;
 561              		.loc 1 115 9 view .LVU149
 562 0070 FFF7FEFF 		bl	tos_cpu_cpsr_restore
 563              	.LVL61:
 116:..//kernel/core/tos_sem.c ****     }
 564              		.loc 1 116 9 view .LVU150
 116:..//kernel/core/tos_sem.c ****     }
 565              		.loc 1 116 16 is_stmt 0 view .LVU151
 566 0074 4FF49660 		mov	r0, #1200
 567 0078 D2E7     		b	.L37
 568              	.L48:
 120:..//kernel/core/tos_sem.c ****         return K_ERR_PEND_SCHED_LOCKED;
 569              		.loc 1 120 9 is_stmt 1 view .LVU152
 120:..//kernel/core/tos_sem.c ****         return K_ERR_PEND_SCHED_LOCKED;
 570              		.loc 1 120 9 view .LVU153
 571 007a 2846     		mov	r0, r5
 572 007c FFF7FEFF 		bl	tos_cpu_cpsr_restore
 573              	.LVL62:
 121:..//kernel/core/tos_sem.c ****     }
 574              		.loc 1 121 9 view .LVU154
 121:..//kernel/core/tos_sem.c ****     }
 575              		.loc 1 121 16 is_stmt 0 view .LVU155
 576 0080 40F2B140 		movw	r0, #1201
 577 0084 CCE7     		b	.L37
 578              	.LVL63:
 579              	.L41:
 102:..//kernel/core/tos_sem.c ****     TOS_PTR_SANITY_CHECK(sem);
 580              		.loc 1 102 5 view .LVU156
 581 0086 4FF4C870 		mov	r0, #400
 582 008a C9E7     		b	.L37
 583              	.L42:
 103:..//kernel/core/tos_sem.c ****     TOS_OBJ_VERIFY(sem, KNL_OBJ_TYPE_SEMAPHORE);
 584              		.loc 1 103 5 view .LVU157
 585 008c 40F24C40 		movw	r0, #1100
 586 0090 C6E7     		b	.L37
 587              	.L50:
 588 0092 00BF     		.align	2
 589              	.L49:
 590 0094 00000000 		.word	k_curr_task
 591              		.cfi_endproc
 592              	.LFE116:
 594              		.text
 595              	.Letext0:
 596              		.file 3 "..//kernel/core/include/tos_kerr.h"
 597              		.file 4 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 598              		.file 5 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 599              		.file 6 "Drivers/CMSIS/Include/core_cm3.h"
 600              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 601              		.file 8 "d:\\arm_gcc\\8 2019-q3-update\\lib\\gcc\\arm-none-eabi\\8.3.1\\include\\stddef.h"
 602              		.file 9 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_types.h"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 19


 603              		.file 10 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\reent.h"
 604              		.file 11 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\lock.h"
 605              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 606              		.file 13 "..//arch/arm/arm-v7m/common/include/tos_cpu_types.h"
 607              		.file 14 "..//kernel/core/include/tos_ktypes.h"
 608              		.file 15 "..//kernel/core/include/tos_task.h"
 609              		.file 16 "d:\\arm_gcc\\8 2019-q3-update\\arm-none-eabi\\include\\stdlib.h"
 610              		.file 17 "..//kernel/core/include/tos_list.h"
 611              		.file 18 "..//kernel/core/include/tos_pend.h"
 612              		.file 19 "..//kernel/core/include/tos_sem.h"
 613              		.file 20 "..//kernel/core/include/tos_timer.h"
 614              		.file 21 "..//kernel/core/include/tos_mmheap.h"
 615              		.file 22 "..//kernel/core/include/tos_sched.h"
 616              		.file 23 "..//kernel/core/include/tos_global.h"
 617              		.file 24 "..//arch/arm/arm-v7m/common/include/tos_cpu.h"
ARM GAS  C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 tos_sem.c
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:16     .text.sem_do_post:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:23     .text.sem_do_post:00000000 sem_do_post
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:162    .text.tos_sem_create_max:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:169    .text.tos_sem_create_max:00000000 tos_sem_create_max
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:231    .text.tos_sem_create:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:238    .text.tos_sem_create:00000000 tos_sem_create
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:262    .text.tos_sem_destroy:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:269    .text.tos_sem_destroy:00000000 tos_sem_destroy
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:375    .text.tos_sem_post:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:382    .text.tos_sem_post:00000000 tos_sem_post
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:406    .text.tos_sem_post_all:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:413    .text.tos_sem_post_all:00000000 tos_sem_post_all
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:437    .text.tos_sem_pend:00000000 $t
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:444    .text.tos_sem_pend:00000000 tos_sem_pend
C:\Users\tianx\AppData\Local\Temp\cc6ZK0px.s:590    .text.tos_sem_pend:00000094 $d

UNDEFINED SYMBOLS
tos_cpu_cpsr_save
pend_is_nopending
pend_wakeup
tos_cpu_cpsr_restore
knl_sched
pend_object_init
pend_wakeup_all
pend_object_deinit
knl_is_inirq
knl_is_sched_locked
pend_task_block
pend_state2errno
k_curr_task
